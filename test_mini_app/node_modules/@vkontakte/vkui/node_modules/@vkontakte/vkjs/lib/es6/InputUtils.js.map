{"version":3,"sources":["../../src/InputUtils.ts"],"names":["isIOS","isIPadOS","canUseDOM","hasMouse","hasTouchEvents","hasHover","hasTouch","document","navigator","maxTouchPoints","notMobile","test","userAgent","window","matchMedia","matches"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,iBAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,IAAIC,QAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ;;AAEA,IAAIJ,SAAJ,EAAe;AACb,MAAIF,KAAK,IAAI,CAACC,QAAd,EAAwB;AACtBE,IAAAA,QAAQ,GAAG,KAAX;AACAE,IAAAA,QAAQ,GAAG,KAAX;AACAD,IAAAA,cAAc,GAAG,IAAjB;AACAE,IAAAA,QAAQ,GAAG,IAAX;AACD,GALD,MAKO;AACLF,IAAAA,cAAc,GAAG,kBAAkBG,QAAnC;AACAD,IAAAA,QAAQ,GAAGF,cAAc,IACtB,oBAAoBI,SAApB,IAAiCA,SAAS,CAACC,cAAV,GAA2B,CAD/D;;AAGA,QAAIH,QAAJ,EAAc;AACZ,UAAMI,SAAS,GAAG,CAAC,yBAAyBC,IAAzB,CAA8BH,SAAS,CAACI,SAAxC,CAAnB;AAEAT,MAAAA,QAAQ,GAAGU,MAAM,CAACC,UAAP,IAAqBA,UAAU,CAAC,WAAD,CAAV,CAAwBC,OAA7C,GACTD,UAAU,CAAC,iBAAD,CAAV,CAA8BC,OADrB,GAC+BL,SAD1C;AAGAL,MAAAA,QAAQ,GAAGF,QAAQ,KAAKU,MAAM,CAACC,UAAP,IAAqBA,UAAU,CAAC,SAAD,CAAV,CAAsBC,OAA3C,GACtBD,UAAU,CAAC,gBAAD,CAAV,CAA6BC,OADP,GACiBL,SADtB,CAAnB;AAED,KARD,MAQO;AACLP,MAAAA,QAAQ,GAAG,IAAX;AACAE,MAAAA,QAAQ,GAAG,IAAX;AACD;AACF;AACF,CAxBD,MAwBO;AACLF,EAAAA,QAAQ,GAAG,KAAX;AACAC,EAAAA,cAAc,GAAG,KAAjB;AACAC,EAAAA,QAAQ,GAAG,KAAX;AACAC,EAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,SAASH,QAAT,EAAmBE,QAAnB,EAA6BD,cAA7B,EAA6CE,QAA7C","sourcesContent":["import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\n\nlet hasMouse: boolean;\nlet hasTouchEvents: boolean;\nlet hasHover: boolean;\nlet hasTouch: boolean;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents ||\n      ('maxTouchPoints' in navigator && navigator.maxTouchPoints > 0);\n\n    if (hasTouch) {\n      const notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ?\n        matchMedia('(pointer: fine)').matches : notMobile;\n\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ?\n        matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };\n"],"file":"InputUtils.js"}