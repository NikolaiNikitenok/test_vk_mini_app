{"version":3,"sources":["../../src/hoc/withPlatform.tsx"],"names":["React","SSRContext","ConfigProviderContext","withPlatform","Component","WithPlatform","props","ssrContext","useContext","platform"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AAEA,SAASC,qBAAT;AAEA,OAAO,SAASC,YAAT,CACLC,SADK,EAEiC;AACtC,WAASC,YAAT,CAAsBC,KAAtB,EAAyD;AACvD,QAAMC,UAAU,GAAGP,KAAK,CAACQ,UAAN,CAAiBP,UAAjB,CAAnB;;AACA,4BAAqBD,KAAK,CAACQ,UAAN,CAAiBN,qBAAjB,CAArB;AAAA,QAAQO,QAAR,qBAAQA,QAAR;;AACA,WACE,oBAAC,SAAD,eAAgBH,KAAhB;AAA6B,MAAA,QAAQ,EAAEC,UAAU,CAACE,QAAX,IAAuBA;AAA9D,OADF;AAGD;;AACD,SAAOJ,YAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { SSRContext } from \"../lib/SSR\";\nimport { HasPlatform } from \"../types\";\nimport { ConfigProviderContext } from \"../components/ConfigProvider/ConfigProviderContext\";\n\nexport function withPlatform<T extends HasPlatform>(\n  Component: React.ComponentType<T>\n): React.FC<Omit<T, keyof HasPlatform>> {\n  function WithPlatform(props: Omit<T, keyof HasPlatform>) {\n    const ssrContext = React.useContext(SSRContext);\n    const { platform } = React.useContext(ConfigProviderContext);\n    return (\n      <Component {...(props as T)} platform={ssrContext.platform || platform} />\n    );\n  }\n  return WithPlatform;\n}\n"],"file":"withPlatform.js"}