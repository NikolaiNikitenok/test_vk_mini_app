{"version":3,"sources":["../../../src/lib/touch.ts"],"names":["coordX","e","clientX","changedTouches","coordY","clientY","touchEnabled","canUseDOM","window","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","offsettedResistance"],"mappings":";;;;;;;;;;AAAA;;AAKA;AACA;AACA;AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAA+B;AAC5C,MAAIA,CAAC,CAACC,OAAF,IAAa,IAAjB,EAAuB;AACrB,WAAOD,CAAC,CAACC,OAAT;AACD;;AACD,SAAOD,CAAC,CAACE,cAAF,IAAoBF,CAAC,CAACE,cAAF,CAAiB,CAAjB,EAAoBD,OAA/C;AACD,CALD;AAOA;AACA;AACA;;;;;AACA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACH,CAAD,EAA+B;AAC5C,MAAIA,CAAC,CAACI,OAAF,IAAa,IAAjB,EAAuB;AACrB,WAAOJ,CAAC,CAACI,OAAT;AACD;;AACD,SAAOJ,CAAC,CAACE,cAAF,IAAoBF,CAAC,CAACE,cAAF,CAAiB,CAAjB,EAAoBE,OAA/C;AACD,CALD,C,CAOA;;;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAMC,mBAAa,kBAAkBC,MAArC;AAAA,CAArB;AAEA;AACA;AACA;AACA;AACA;;;;;AACA,SAASC,kBAAT,GAAwC;AACtC,MAAIH,YAAY,EAAhB,EAAoB;AAClB,WAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,UAA5B,EAAwC,aAAxC,CAAP;AACD;;AAED,SAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,YAAtC,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASI,MAAT,CACEC,MADF,EAEEC,SAFF,EAGEC,cAHF,EAIEC,SAJF,EAKU;AACR,MAAIA,SAAS,IAAIH,MAAM,GAAG,CAA1B,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,MAAMI,mBAAmB,GAAGJ,MAAM,GAAGE,cAArC;AACA,SAAQE,mBAAmB,GAAGH,SAAvB,IAAqCG,mBAAmB,GAAGH,SAA3D,CAAP;AACD","sourcesContent":["import { canUseDOM } from \"@vkontakte/vkjs\";\n\nexport interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled = () => canUseDOM && \"ontouchstart\" in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled()) {\n    return [\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"];\n  }\n\n  return [\"mousedown\", \"mousemove\", \"mouseup\", \"mouseleave\"];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(\n  offset: number,\n  dimension: number,\n  resistanceRate: number,\n  isAndroid: boolean\n): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return (offsettedResistance * dimension) / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"],"file":"touch.js"}