{"version":3,"sources":["../../../../src/components/Cell/useDraggable.tsx"],"names":["useDraggable","onDragFinish","React","useState","dragging","setDragging","rootElRef","useRef","siblings","setSiblings","dragStartIndex","setDragStartIndex","dragEndIndex","setDragEndIndex","dragShift","setDragShift","undefined","dragDirection","setDragDirection","onDragStart","rootEl","current","_siblings","parentElement","childNodes","Array","from","children","idx","indexOf","onDragMove","e","originalEvent","preventDefault","style","transform","shiftY","rootGesture","getBoundingClientRect","forEach","sibling","siblingIndex","siblingGesture","siblingHalfHeight","height","rootOverSibling","bottom","top","rootUnderSibling","onDragEnd","to","useDraggableProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { TouchEvent } from \"../Touch/Touch\";\nimport { CellProps } from \"./Cell\";\n\nexport interface DraggableProps {\n  onDragStart: () => void;\n  onDragEnd: () => void;\n  onDragMove: (e: TouchEvent) => void;\n}\n\ninterface UseDraggableProps extends DraggableProps {\n  dragging: boolean;\n  rootElRef: any;\n}\n\nexport const useDraggable = ({\n  onDragFinish,\n}: Pick<CellProps, \"onDragFinish\">) => {\n  const [dragging, setDragging] = React.useState<boolean>(false);\n  const rootElRef = React.useRef<HTMLElement>(null);\n\n  const [siblings, setSiblings] = React.useState<HTMLElement[]>([]);\n  const [dragStartIndex, setDragStartIndex] = React.useState<number>(0);\n  const [dragEndIndex, setDragEndIndex] = React.useState<number>(0);\n  const [dragShift, setDragShift] = React.useState<number>(0);\n  const [dragDirection, setDragDirection] = React.useState<\n    \"down\" | \"up\" | undefined\n  >(undefined);\n\n  const onDragStart = () => {\n    const rootEl = rootElRef.current;\n    if (!rootEl) {\n      return;\n    }\n\n    setDragging(true);\n\n    let _siblings: HTMLElement[] = [];\n    if (rootEl.parentElement?.childNodes) {\n      _siblings = Array.from(rootEl.parentElement.children) as HTMLElement[];\n    }\n    const idx = _siblings.indexOf(rootEl);\n\n    setDragStartIndex(idx);\n    setDragEndIndex(idx);\n    setSiblings(_siblings);\n    setDragShift(0);\n  };\n\n  const onDragMove = (e: TouchEvent) => {\n    e.originalEvent.preventDefault();\n\n    const rootEl = rootElRef.current;\n\n    if (rootEl) {\n      rootEl.style.transform = `translateY(${e.shiftY}px)`;\n      const rootGesture = rootEl.getBoundingClientRect();\n\n      setDragDirection(dragShift - e.shiftY < 0 ? \"down\" : \"up\");\n      setDragShift(e.shiftY);\n      setDragEndIndex(dragStartIndex);\n\n      siblings.forEach((sibling: HTMLElement, siblingIndex: number) => {\n        const siblingGesture = sibling.getBoundingClientRect();\n        const siblingHalfHeight = siblingGesture.height / 2;\n\n        const rootOverSibling =\n          rootGesture.bottom > siblingGesture.top + siblingHalfHeight;\n        const rootUnderSibling =\n          rootGesture.top < siblingGesture.bottom - siblingHalfHeight;\n\n        if (dragStartIndex < siblingIndex) {\n          if (rootOverSibling) {\n            if (dragDirection === \"down\") {\n              sibling.style.transform = \"translateY(-100%)\";\n            }\n\n            setDragEndIndex((dragEndIndex) => dragEndIndex + 1);\n          }\n          if (rootUnderSibling && dragDirection === \"up\") {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        } else if (dragStartIndex > siblingIndex) {\n          if (rootUnderSibling) {\n            if (dragDirection === \"up\") {\n              sibling.style.transform = \"translateY(100%)\";\n            }\n\n            setDragEndIndex((dragEndIndex) => dragEndIndex - 1);\n          }\n          if (rootOverSibling && dragDirection === \"down\") {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        }\n      });\n    }\n  };\n\n  const onDragEnd = () => {\n    const [from, to] = [dragStartIndex, dragEndIndex];\n\n    siblings.forEach((sibling: HTMLElement) => {\n      sibling.style.transform = \"\";\n    });\n\n    setSiblings([]);\n    setDragEndIndex(0);\n    setDragStartIndex(0);\n    setDragDirection(undefined);\n    setDragShift(0);\n\n    setDragging(false);\n\n    onDragFinish && onDragFinish({ from, to });\n  };\n\n  const useDraggableProps: UseDraggableProps = {\n    onDragStart,\n    onDragMove,\n    onDragEnd,\n    dragging,\n    rootElRef,\n  };\n\n  return useDraggableProps;\n};\n"],"file":"useDraggable.js"}