{"version":3,"sources":["../../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["FixedLayout","children","style","vertical","getRootRef","getRef","filled","restProps","platform","React","useState","undefined","width","setWidth","window","useContext","SplitColContext","colRef","doResize","current","offsetWidth","useEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAsBA,IAAMA,WAAuC,GAAG,SAA1CA,WAA0C,OAQxB;AAAA,MAPtBC,QAOsB,QAPtBA,QAOsB;AAAA,MANtBC,KAMsB,QANtBA,KAMsB;AAAA,MALtBC,QAKsB,QALtBA,QAKsB;AAAA,MAJtBC,UAIsB,QAJtBA,UAIsB;AAAA,MAHtBC,MAGsB,QAHtBA,MAGsB;AAAA,MAFtBC,MAEsB,QAFtBA,MAEsB;AAAA,MADnBC,SACmB;AACtB,MAAMC,QAAQ,GAAG,+BAAjB;;AACA,wBAA0BC,KAAK,CAACC,QAAN,CAAmCC,SAAnC,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,gBAAmB,kBAAnB;AAAA,MAAQC,MAAR,WAAQA,MAAR;;AACA,0BAAmBL,KAAK,CAACM,UAAN,CAAiBC,yBAAjB,CAAnB;AAAA,MAAQC,MAAR,qBAAQA,MAAR;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WACfL,QAAQ,CAACI,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEE,OAAR,aAAqBF,MAAM,CAACE,OAAP,CAAeC,WAApC,UAAsDT,SAAvD,CADO;AAAA,GAAjB;;AAEAF,EAAAA,KAAK,CAACY,SAAN,CAAgBH,QAAhB,EAA0B,CAACD,MAAD,CAA1B;AACA,sDAAuBH,MAAvB,EAA+B,QAA/B,EAAyCI,QAAzC;AAEA,SACE,qCAAC,kCAAD,6BACMX,SADN;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,GAAG,EAAEH,UAHP;AAIE,IAAA,SAAS,EAAE,4BACT,gCAAa,aAAb,EAA4BI,QAA5B,CADS,EAET;AACE,6BAAuBF;AADzB,KAFS,yBAKOH,QALP,EAJb;AAWE,IAAA,KAAK,8DAAOD,KAAP;AAAcU,MAAAA,KAAK,EAALA;AAAd;AAXP,MAaE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEP;AAAtC,KACGJ,QADH,CAbF,CADF;AAmBD,CArCD,C,CAuCA;;;eACeD,W","sourcesContent":["import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { SplitColContext } from \"../SplitCol/SplitCol\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./FixedLayout.css\";\n\nexport interface FixedLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  vertical?: \"top\" | \"bottom\";\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: \"absolute\" | null;\n  top: number;\n  bottom: number;\n  width: string;\n}\n\nconst FixedLayout: React.FC<FixedLayoutProps> = ({\n  children,\n  style,\n  vertical,\n  getRootRef,\n  getRef,\n  filled,\n  ...restProps\n}: FixedLayoutProps) => {\n  const platform = usePlatform();\n  const [width, setWidth] = React.useState<string | undefined>(undefined);\n  const { window } = useDOM();\n  const { colRef } = React.useContext(SplitColContext);\n  const doResize = () =>\n    setWidth(colRef?.current ? `${colRef.current.offsetWidth}px` : undefined);\n  React.useEffect(doResize, [colRef]);\n  useGlobalEventListener(window, \"resize\", doResize);\n\n  return (\n    <TooltipContainer\n      {...restProps}\n      fixed\n      ref={getRootRef}\n      vkuiClass={classNames(\n        getClassName(\"FixedLayout\", platform),\n        {\n          \"FixedLayout--filled\": filled,\n        },\n        `FixedLayout--${vertical}`\n      )}\n      style={{ ...style, width }}\n    >\n      <div vkuiClass=\"FixedLayout__in\" ref={getRef}>\n        {children}\n      </div>\n    </TooltipContainer>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default FixedLayout;\n"],"file":"FixedLayout.js"}