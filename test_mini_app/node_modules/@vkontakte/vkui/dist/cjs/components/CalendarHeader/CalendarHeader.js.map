{"version":3,"sources":["../../../../src/components/CalendarHeader/CalendarHeader.tsx"],"names":["renderOption","option","children","props","CalendarHeader","viewDate","onChange","prevMonth","nextMonth","disablePickers","onNextMonth","onPrevMonth","className","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","locale","React","useContext","LocaleProviderContext","onMonthsChange","useCallback","event","Number","target","value","onYearChange","months","useMemo","currentYear","getFullYear","years","formatter","Intl","DateTimeFormat","year","month","format","getMonth","SizeType","COMPACT","SelectType","Plain"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { setMonth, setYear, subMonths, addMonths } from \"date-fns\";\nimport {\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n  Icon12Dropdown,\n} from \"@vkontakte/icons\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport CustomSelect, {\n  CustomSelectProps,\n  SelectType,\n} from \"../CustomSelect/CustomSelect\";\nimport CustomSelectOption from \"../CustomSelectOption/CustomSelectOption\";\nimport { SizeType } from \"../../hoc/withAdaptivity\";\nimport { getMonths, getYears } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport Text from \"../Typography/Text/Text\";\nimport \"./CalendarHeader.css\";\n\nexport interface CalendarHeaderProps\n  extends Pick<React.HTMLAttributes<HTMLDivElement>, \"className\"> {\n  viewDate: Date;\n  prevMonth?: boolean;\n  nextMonth?: boolean;\n  disablePickers?: boolean;\n  prevMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  changeMonthAriaLabel?: string;\n  changeYearAriaLabel?: string;\n  onChange(viewDate: Date): void;\n  onNextMonth?(): void;\n  onPrevMonth?(): void;\n}\n\nconst renderOption: CustomSelectProps[\"renderOption\"] = ({\n  option,\n  children,\n  ...props\n}) => {\n  return (\n    <CustomSelectOption {...props}>\n      <span vkuiClass=\"CalendarHeader__month_name\">{children}</span>\n    </CustomSelectOption>\n  );\n};\n\nexport const CalendarHeader: React.FC<CalendarHeaderProps> = ({\n  viewDate,\n  onChange,\n  prevMonth = true,\n  nextMonth = true,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  className,\n  prevMonthAriaLabel = \"Предыдущий месяц\",\n  nextMonthAriaLabel = \"Следующий месяц\",\n  changeMonthAriaLabel = \"Изменить месяц\",\n  changeYearAriaLabel = \"Изменить год\",\n}) => {\n  const locale = React.useContext(LocaleProviderContext);\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n\n  const months = React.useMemo(() => getMonths(locale), [locale]);\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: \"numeric\",\n    month: \"long\",\n  });\n\n  return (\n    <div vkuiClass=\"CalendarHeader\" className={className}>\n      {prevMonth && (\n        <Tappable\n          vkuiClass={classNames(\n            \"CalendarHeader__nav-icon\",\n            \"CalendarHeader__nav-icon-prev\"\n          )}\n          onClick={onPrevMonth}\n          aria-label={`${prevMonthAriaLabel}, ${formatter.format(\n            subMonths(viewDate, 1)\n          )}`}\n        >\n          <Icon20ChevronLeftOutline width={30} height={30} />\n        </Tappable>\n      )}\n      <div vkuiClass=\"CalendarHeader__pickers\">\n        {disablePickers ? (\n          <React.Fragment>\n            <Text\n              weight=\"medium\"\n              vkuiClass=\"CalendarHeader__pickers-placeholder\"\n            >\n              {new Intl.DateTimeFormat(locale, {\n                month: \"long\",\n              }).format(viewDate)}\n            </Text>\n            <Text\n              weight=\"medium\"\n              vkuiClass=\"CalendarHeader__pickers-placeholder\"\n            >\n              {new Intl.DateTimeFormat(locale, {\n                year: \"numeric\",\n              }).format(viewDate)}\n            </Text>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <CustomSelect\n              value={viewDate.getMonth()}\n              options={months}\n              renderOption={renderOption}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              sizeY={SizeType.COMPACT}\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType={SelectType.Plain}\n              aria-label={changeMonthAriaLabel}\n            />\n            <CustomSelect\n              value={viewDate.getFullYear()}\n              options={years}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              sizeY={SizeType.COMPACT}\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType={SelectType.Plain}\n              aria-label={changeYearAriaLabel}\n            />\n          </React.Fragment>\n        )}\n      </div>\n      {nextMonth && (\n        <Tappable\n          vkuiClass={classNames(\n            \"CalendarHeader__nav-icon\",\n            \"CalendarHeader__nav-icon-next\"\n          )}\n          onClick={onNextMonth}\n          aria-label={`${nextMonthAriaLabel}, ${formatter.format(\n            addMonths(viewDate, 1)\n          )}`}\n        >\n          <Icon20ChevronRightOutline width={30} height={30} />\n        </Tappable>\n      )}\n    </div>\n  );\n};\n"],"file":"CalendarHeader.js"}