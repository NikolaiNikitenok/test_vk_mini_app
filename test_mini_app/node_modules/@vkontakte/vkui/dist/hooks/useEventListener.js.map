{"version":3,"sources":["../../src/hooks/useEventListener.ts"],"names":["React","noop","canUseDOM","useIsomorphicLayoutEffect","useEventListener","event","_cb","_options","cbRef","useRef","current","cb","useCallback","e","detach","remove","add","el","options","addEventListener","removeEventListener","useEffect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AACA,SAASC,SAAT;AACA,SAASC,yBAAT;AAqBA,OAAO,SAASC,gBAAT,CAILC,KAJK,EAKLC,GALK,EAMLC,QANK,EAOgB;AACrB,MAAMC,KAAK,GAAGR,KAAK,CAACS,MAAN,CAAaH,GAAb,CAAd;AACAH,EAAAA,yBAAyB,CAAC,YAAM;AAC9BK,IAAAA,KAAK,CAACE,OAAN,GAAgBJ,GAAhB;AACD,GAFwB,EAEtB,CAACA,GAAD,CAFsB,CAAzB;AAGA,MAAMK,EAAE,GAAGX,KAAK,CAACY,WAAN,CAAkB,UAACC,CAAD;AAAA,WAAOL,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACE,OAAN,CAAcG,CAAd,CAAxB;AAAA,GAAlB,EAA4D,EAA5D,CAAX;AAEA,MAAMC,MAAM,GAAGd,KAAK,CAACS,MAAN,CAAaR,IAAb,CAAf;AACA,MAAMc,MAAM,GAAGf,KAAK,CAACY,WAAN,CAAkB,YAAM;AACrCE,IAAAA,MAAM,CAACJ,OAAP;AACAI,IAAAA,MAAM,CAACJ,OAAP,GAAiBT,IAAjB;AACD,GAHc,EAGZ,EAHY,CAAf;AAIA,MAAMe,GAAG,GAAGhB,KAAK,CAACY,WAAN,CACV,UAACK,EAAD,EAAyC;AACvC,QAAI,CAACf,SAAL,EAAgB;AACd;AACD;;AACDa,IAAAA,MAAM;;AACN,QAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,QAAMC,OAAO,qBAAQX,QAAR,CAAb;;AACAU,IAAAA,EAAE,CAACE,gBAAH,CAAoBd,KAApB,EAA2BM,EAA3B,EAA+BO,OAA/B;;AACAJ,IAAAA,MAAM,CAACJ,OAAP,GAAiB;AAAA,aAAMO,EAAE,CAACG,mBAAH,CAAuBf,KAAvB,EAA8BM,EAA9B,EAAkCO,OAAlC,CAAN;AAAA,KAAjB;AACD,GAZS,EAaV,CAACX,QAAD,EAAWI,EAAX,EAAeN,KAAf,EAAsBU,MAAtB,CAbU,CAAZ;AAeAf,EAAAA,KAAK,CAACqB,SAAN,CAAgB;AAAA,WAAMN,MAAN;AAAA,GAAhB,EAA8B,CAACA,MAAD,CAA9B;AAEA,SAAO;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\ninterface EventListenerHandle {\n  add: (el: HTMLElement | Document | Window) => void;\n  remove: () => void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb:\n    | false\n    | null\n    | undefined\n    | ((ev: GlobalEventHandlersEventMap[K]) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<E extends Event>(\n  event: string,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<\n  E extends Event,\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  event: string | K,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback((e) => cbRef.current && cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => {\n    detach.current();\n    detach.current = noop;\n  }, []);\n  const add = React.useCallback(\n    (el: HTMLElement | Document | Window) => {\n      if (!canUseDOM) {\n        return;\n      }\n      remove();\n      if (!el) {\n        return;\n      }\n      const options = { ..._options };\n      el.addEventListener(event, cb, options);\n      detach.current = () => el.removeEventListener(event, cb, options);\n    },\n    [_options, cb, event, remove]\n  );\n  React.useEffect(() => remove, [remove]);\n\n  return { add, remove };\n}\n"],"file":"useEventListener.js"}