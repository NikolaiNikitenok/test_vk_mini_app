{"version":3,"sources":["../../../../src/components/HoverPopper/HoverPopper.tsx"],"names":["React","Popper","useEventListener","useTimeout","usePatchChildrenRef","useIsomorphicLayoutEffect","HoverPopper","getRef","content","children","onShownChange","_shown","shown","showDelay","hideDelay","restProps","useState","computedShown","setComputedShown","setShown","value","showTimeout","hideTimeout","childRef","child","onTargetEnter","clear","set","onTargetLeave","targetEnterListener","targetLeaveListener","current","add"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,gBAAT;AACA,SAASC,UAAT;AACA,SAASC,mBAAT;AACA,SAASC,yBAAT;AA6BA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAS/B;AAAA,MARtBC,MAQsB,QARtBA,MAQsB;AAAA,MAPtBC,OAOsB,QAPtBA,OAOsB;AAAA,MANtBC,QAMsB,QANtBA,QAMsB;AAAA,MALtBC,aAKsB,QALtBA,aAKsB;AAAA,MAJfC,MAIe,QAJtBC,KAIsB;AAAA,4BAHtBC,SAGsB;AAAA,MAHtBA,SAGsB,+BAHV,GAGU;AAAA,4BAFtBC,SAEsB;AAAA,MAFtBA,SAEsB,+BAFV,GAEU;AAAA,MADnBC,SACmB;;AACtB,wBAA0Cf,KAAK,CAACgB,QAAN,CAAeL,MAAM,IAAI,KAAzB,CAA1C;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMN,KAAK,GAAG,OAAOD,MAAP,KAAkB,SAAlB,GAA8BA,MAA9B,GAAuCM,aAArD;;AAEA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAoB;AACnC,QAAI,OAAOT,MAAP,KAAkB,SAAtB,EAAiC;AAC/BO,MAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACD;;AACD,WAAOV,aAAP,KAAyB,UAAzB,IAAuCA,aAAa,CAACU,KAAD,CAApD;AACD,GALD;;AAOA,MAAMC,WAAW,GAAGlB,UAAU,CAAC,YAAM;AACnCgB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAF6B,EAE3BN,SAF2B,CAA9B;AAIA,MAAMS,WAAW,GAAGnB,UAAU,CAAC,YAAM;AACnCgB,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAF6B,EAE3BL,SAF2B,CAA9B;;AAIA,6BAA0BV,mBAAmB,CAACK,QAAD,CAA7C;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,KAAjB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,WAAW,CAACI,KAAZ;AACAL,IAAAA,WAAW,CAACM,GAAZ;AACD,GAHD;;AAKA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BP,IAAAA,WAAW,CAACK,KAAZ;AACAJ,IAAAA,WAAW,CAACK,GAAZ;AACD,GAHD;;AAKA,MAAME,mBAAmB,GAAG3B,gBAAgB,CAAC,cAAD,EAAiBuB,aAAjB,CAA5C;AACA,MAAMK,mBAAmB,GAAG5B,gBAAgB,CAAC,cAAD,EAAiB0B,aAAjB,CAA5C;AAEAvB,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAIkB,QAAQ,CAACQ,OAAb,EAAsB;AACpBF,MAAAA,mBAAmB,CAACG,GAApB,CAAwBT,QAAQ,CAACQ,OAAjC;AACAD,MAAAA,mBAAmB,CAACE,GAApB,CAAwBT,QAAQ,CAACQ,OAAjC;AACD;AACF,GALwB,EAKtB,EALsB,CAAzB;AAOA,SACE,oBAAC,KAAD,CAAO,QAAP,QACGP,KADH,EAEGZ,KAAK,IACJ,oBAAC,MAAD,eACMG,SADN;AAEE,IAAA,WAAW,EAAEO,WAAW,CAACI,KAF3B;AAGE,IAAA,UAAU,EAAEE,aAHd;AAIE,IAAA,MAAM,EAAErB,MAJV;AAKE,IAAA,SAAS,EAAEgB;AALb,MAOGf,OAPH,CAHJ,CADF;AAgBD,CAnEM","sourcesContent":["import * as React from \"react\";\nimport { Popper, PopperCommonProps } from \"../Popper/Popper\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePatchChildrenRef } from \"../../hooks/usePatchChildrenRef\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\n\nexport interface HoverPopperProps extends PopperCommonProps {\n  /**\n   * Содержимое тултипа\n   */\n  content?: React.ReactNode;\n  /**\n   * Если передан, то тултип будет показан/скрыт в зависимости от значения свойства\n   */\n  shown?: boolean;\n  /**\n   * Вызывается при каждом изменении видимости тултипа\n   */\n  onShownChange?: (shown: boolean) => void;\n  /**\n   * Количество миллисекунд, после которых произойдет показ дропдауна\n   */\n  showDelay?: number;\n  /**\n   * Количество миллисекунд, после которых произойдет скрытие дропдауна\n   */\n  hideDelay?: number;\n  /**\n   * Либо jsx-элемент (div, button, etc.), либо компонент со свойством `getRootRef`, которое применяется к корневому элементу компонента\n   */\n  children?: React.ReactElement;\n}\n\nexport const HoverPopper: React.FC<HoverPopperProps> = ({\n  getRef,\n  content,\n  children,\n  onShownChange,\n  shown: _shown,\n  showDelay = 150,\n  hideDelay = 150,\n  ...restProps\n}: HoverPopperProps) => {\n  const [computedShown, setComputedShown] = React.useState(_shown || false);\n\n  const shown = typeof _shown === \"boolean\" ? _shown : computedShown;\n\n  const setShown = (value: boolean) => {\n    if (typeof _shown !== \"boolean\") {\n      setComputedShown(value);\n    }\n    typeof onShownChange === \"function\" && onShownChange(value);\n  };\n\n  const showTimeout = useTimeout(() => {\n    setShown(true);\n  }, showDelay);\n\n  const hideTimeout = useTimeout(() => {\n    setShown(false);\n  }, hideDelay);\n\n  const [childRef, child] = usePatchChildrenRef(children);\n\n  const onTargetEnter = () => {\n    hideTimeout.clear();\n    showTimeout.set();\n  };\n\n  const onTargetLeave = () => {\n    showTimeout.clear();\n    hideTimeout.set();\n  };\n\n  const targetEnterListener = useEventListener(\"pointerenter\", onTargetEnter);\n  const targetLeaveListener = useEventListener(\"pointerleave\", onTargetLeave);\n\n  useIsomorphicLayoutEffect(() => {\n    if (childRef.current) {\n      targetEnterListener.add(childRef.current);\n      targetLeaveListener.add(childRef.current);\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {child}\n      {shown && (\n        <Popper\n          {...restProps}\n          onMouseOver={hideTimeout.clear}\n          onMouseOut={onTargetLeave}\n          getRef={getRef}\n          targetRef={childRef}\n        >\n          {content}\n        </Popper>\n      )}\n    </React.Fragment>\n  );\n};\n"],"file":"HoverPopper.js"}