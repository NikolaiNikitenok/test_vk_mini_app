{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefresh.tsx"],"names":["React","Touch","TouchRootContext","FixedLayout","classNames","IOS","ANDROID","VKCOM","getClassName","PullToRefreshSpinner","withPlatform","canUseDOM","withDOM","runTapticImpactOccurred","withContext","ScrollContext","cancelEvent","event","originalEvent","preventDefault","cancelable","stopPropagation","PullToRefresh","props","undefined","e","state","refreshing","setState","touchDown","isY","shiftY","params","start","max","pageYOffset","scroll","getScroll","y","watching","positionMultiplier","shift","Math","touchY","currentY","min","maxY","progress","abs","spinnerY","spinnerProgress","canRefresh","contentShift","platform","runRefreshing","resetRefreshingState","contentRef","createRef","document","addEventListener","onWindowTouchMove","passive","removeEventListener","waitFetchingTimeout","clearTimeout","prevProps","prevState","isFetching","onRefreshingFinish","onRefresh","setTimeout","children","window","restProps","spinnerTransform","contentTransform","onTouchStart","onTouchMove","onTouchEnd","transform","WebkitTransform","opacity","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AACA,OAAOC,gBAAP;AACA,OAAOC,WAAP;AACA,SAASC,UAAT;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB;AACA,SAASC,YAAT;AACA,OAAOC,oBAAP;AACA,SAASC,YAAT;AAEA,SAASC,SAAT,EAA8BC,OAA9B;AACA,SAASC,uBAAT;AACA,SAASC,WAAT;AACA,SACEC,aADF;AAIA;;AAsCA,SAASC,WAAT,CAAqBC,KAArB,EAAiC;AAC/B,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AACD,SAAOA,KAAK,CAACC,aAAb,EAA4B;AAC1BD,IAAAA,KAAK,GAAGA,KAAK,CAACC,aAAd;AACD;;AACD,MAAID,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACG,UAAlC,EAA8C;AAC5CH,IAAAA,KAAK,CAACE,cAAN;AACD;;AACD,MAAIF,KAAK,CAACI,eAAV,EAA2B;AACzBJ,IAAAA,KAAK,CAACI,eAAN;AACD;;AACD,SAAO,KAAP;AACD;;IAEKC,a;;;;;AAIJ,yBAAYC,KAAZ,EAAuC;AAAA;;AAAA;;AACrC,8BAAMA,KAAN;;AADqC;;AAAA;;AAAA,0EAgC0BC,SAhC1B;;AAAA,mEAkGL,UAACC,CAAD,EAAmB;AACnD,UAAI,MAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzBX,QAAAA,WAAW,CAACS,CAAD,CAAX;AACD;;AACD,YAAKG,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAvGsC;;AAAA,wEAyGJ,UAACZ,KAAD,EAAkB;AACnD,UAAI,MAAKS,KAAL,CAAWC,UAAf,EAA2B;AACzBV,QAAAA,KAAK,CAACE,cAAN;AACAF,QAAAA,KAAK,CAACI,eAAN;AACD;AACF,KA9GsC;;AAAA,kEAgHN,UAACI,CAAD,EAAmB;AAAA;;AAClD,UAAQK,GAAR,GAAwBL,CAAxB,CAAQK,GAAR;AAAA,UAAaC,MAAb,GAAwBN,CAAxB,CAAaM,MAAb;AACA,yBAAuB,MAAKC,MAA5B;AAAA,UAAQC,KAAR,gBAAQA,KAAR;AAAA,UAAeC,GAAf,gBAAeA,GAAf;AACA,UAAMC,WAAW,yBAAG,MAAKZ,KAAL,CAAWa,MAAd,uDAAG,mBAAmBC,SAAnB,GAA+BC,CAAnD;AAEA,wBAA4C,MAAKZ,KAAjD;AAAA,UAAQC,UAAR,eAAQA,UAAR;AAAA,UAAoBY,QAApB,eAAoBA,QAApB;AAAA,UAA8BV,SAA9B,eAA8BA,SAA9B;;AAEA,UAAIU,QAAQ,IAAIV,SAAhB,EAA2B;AACzBb,QAAAA,WAAW,CAACS,CAAD,CAAX;AAEA,YAAQe,kBAAR,GAA+B,MAAKR,MAApC,CAAQQ,kBAAR;AAEA,YAAMC,KAAK,GAAGC,IAAI,CAACR,GAAL,CAAS,CAAT,EAAYH,MAAM,GAAG,MAAKL,KAAL,CAAWiB,MAAhC,CAAd;AAEA,YAAMC,QAAQ,GAAGF,IAAI,CAACR,GAAL,CACfD,KADe,EAEfS,IAAI,CAACG,GAAL,CAAS,MAAKb,MAAL,CAAYc,IAArB,EAA2Bb,KAAK,GAAGQ,KAAK,GAAGD,kBAA3C,CAFe,CAAjB;AAIA,YAAMO,QAAQ,GACZH,QAAQ,GAAG,CAAC,EAAZ,GAAiBF,IAAI,CAACM,GAAL,CAAS,CAACJ,QAAQ,GAAG,EAAZ,IAAkBV,GAA3B,IAAkC,EAAnD,GAAwD,CAD1D;;AAGA,cAAKN,QAAL,CAAc;AACZqB,UAAAA,QAAQ,EAAEL,QADE;AAEZM,UAAAA,eAAe,EAAER,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaH,IAAI,CAACR,GAAL,CAAS,CAAT,EAAYa,QAAZ,CAAb,CAFL;AAGZI,UAAAA,UAAU,EAAEJ,QAAQ,GAAG,EAHX;AAIZK,UAAAA,YAAY,EAAE,CAACR,QAAQ,GAAG,EAAZ,IAAkB;AAJpB,SAAd;;AAOA,YAAIG,QAAQ,GAAG,EAAX,IAAiB,CAACpB,UAAlB,IAAgC,MAAKJ,KAAL,CAAW8B,QAAX,KAAwBhD,GAA5D,EAAiE;AAC/D,gBAAKiD,aAAL;AACD;AACF,OAxBD,MAwBO,IACLxB,GAAG,IACHK,WAAW,KAAK,CADhB,IAEAJ,MAAM,GAAG,CAFT,IAGA,CAACJ,UAHD,IAIAE,SALK,EAML;AACAb,QAAAA,WAAW,CAACS,CAAD,CAAX;;AAEA,cAAKG,QAAL,CAAc;AACZW,UAAAA,QAAQ,EAAE,IADE;AAEZI,UAAAA,MAAM,EAAEZ,MAFI;AAGZkB,UAAAA,QAAQ,EAAEhB,KAHE;AAIZiB,UAAAA,eAAe,EAAE;AAJL,SAAd;AAMD;AACF,KA/JsC;;AAAA,iEAiK1B,YAAM;AACjB,YAAKtB,QAAL,CAAc;AACZW,QAAAA,QAAQ,EAAE,KADE;AAEZV,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAtKsC;;AAAA,yEAyLJ,YAAM;AACvC,UAAI,CAAC,MAAKH,KAAL,CAAWG,SAAhB,EAA2B;AACzB,cAAK0B,oBAAL;AACD;AACF,KA7LsC;;AAGrC,UAAKvB,MAAL,GAAc;AACZC,MAAAA,KAAK,EAAEV,KAAK,CAAC8B,QAAN,KAAmB/C,OAAnB,IAA8BiB,KAAK,CAAC8B,QAAN,KAAmB9C,KAAjD,GAAyD,CAAC,EAA1D,GAA+D,CAAC,EAD3D;AAEZ2B,MAAAA,GAAG,EAAEX,KAAK,CAAC8B,QAAN,KAAmB/C,OAAnB,IAA8BiB,KAAK,CAAC8B,QAAN,KAAmB9C,KAAjD,GAAyD,EAAzD,GAA8D,EAFvD;AAGZuC,MAAAA,IAAI,EAAEvB,KAAK,CAAC8B,QAAN,KAAmB/C,OAAnB,IAA8BiB,KAAK,CAAC8B,QAAN,KAAmB9C,KAAjD,GAAyD,EAAzD,GAA8D,GAHxD;AAIZoB,MAAAA,UAAU,EACRJ,KAAK,CAAC8B,QAAN,KAAmB/C,OAAnB,IAA8BiB,KAAK,CAAC8B,QAAN,KAAmB9C,KAAjD,GAAyD,EAAzD,GAA8D,EALpD;AAOZiC,MAAAA,kBAAkB,EAChBjB,KAAK,CAAC8B,QAAN,KAAmB/C,OAAnB,IAA8BiB,KAAK,CAAC8B,QAAN,KAAmB9C,KAAjD,GAAyD,CAAzD,GAA6D;AARnD,KAAd;AAWA,UAAKmB,KAAL,GAAa;AACXa,MAAAA,QAAQ,EAAE,KADC;AAEXZ,MAAAA,UAAU,EAAE,KAFD;AAGXwB,MAAAA,UAAU,EAAE,KAHD;AAKXtB,MAAAA,SAAS,EAAE,KALA;AAOXc,MAAAA,MAAM,EAAE,CAPG;AAQXM,MAAAA,QAAQ,EAAE,MAAKjB,MAAL,CAAYC,KARX;AASXiB,MAAAA,eAAe,EAAE,CATN;AAUXE,MAAAA,YAAY,EAAE;AAVH,KAAb;AAaA,UAAKI,UAAL,gBAAkBxD,KAAK,CAACyD,SAAN,EAAlB;AA3BqC;AA4BtC;;;;SAMD,eAAe;AACb,aAAO,KAAKlC,KAAL,CAAWmC,QAAlB;AACD;;;WAED,6BAAoB;AAClB,UAAI/C,SAAJ,EAAe;AACb,aAAK+C,QAAL,CAAeC,gBAAf,CAAgC,WAAhC,EAA6C,KAAKC,iBAAlD,EAAqE;AACnE;AACAxC,UAAAA,UAAU,EAAE,IAFuD;AAGnEyC,UAAAA,OAAO,EAAE;AAH0D,SAArE;AAKD;AACF;;;WAED,gCAAuB;AACrB;AACA;AACA;AACA,UAAIlD,SAAJ,EAAe;AACb,aAAK+C,QAAL,CAAeI,mBAAf,CAAmC,WAAnC,EAAgD,KAAKF,iBAArD,EAAwE;AACtE;AACAxC,UAAAA,UAAU,EAAE,IAF0D;AAGtEyC,UAAAA,OAAO,EAAE;AAH6D,SAAxE;AAKD;;AACD,UAAI,KAAKE,mBAAT,EAA8B;AAC5BC,QAAAA,YAAY,CAAC,KAAKD,mBAAN,CAAZ;AACD;AACF;;;WAED,4BACEE,SADF,EAEEC,SAFF,EAGE;AACA,UAAID,SAAS,CAACE,UAAV,IAAwB,CAAC,KAAK5C,KAAL,CAAW4C,UAAxC,EAAoD;AAClD,aAAKC,kBAAL;AACD;;AACD,UACE,CAACH,SAAS,CAACE,UAAX,IACA,KAAK5C,KAAL,CAAW4C,UADX,IAEA,KAAKJ,mBAHP,EAIE;AACAC,QAAAA,YAAY,CAAC,KAAKD,mBAAN,CAAZ;AACD;;AAED,UAAIG,SAAS,CAACrC,SAAV,IAAuB,CAAC,KAAKH,KAAL,CAAWG,SAAvC,EAAkD;AAChD,2BAAmC,KAAKH,KAAxC;AAAA,YAAQC,UAAR,gBAAQA,UAAR;AAAA,YAAoBwB,UAApB,gBAAoBA,UAApB;;AACA,YAAI,CAACxB,UAAD,IAAewB,UAAnB,EAA+B;AAC7B,eAAKG,aAAL;AACD,SAFD,MAEO,IAAI3B,UAAU,IAAI,CAAC,KAAKJ,KAAL,CAAW4C,UAA9B,EAA0C;AAC/C;AACA,eAAKZ,oBAAL;AACD,SAHM,MAGA;AACL;AACA;AACA,eAAK3B,QAAL,CAAc;AACZqB,YAAAA,QAAQ,EAAEtB,UAAU,GAAG,KAAKK,MAAL,CAAYL,UAAf,GAA4B,KAAKK,MAAL,CAAYC,KADhD;AAEZiB,YAAAA,eAAe,EAAE,CAFL;AAGZE,YAAAA,YAAY,EAAE;AAHF,WAAd;AAKD;AACF;AACF;;;WAwED,yBAAgB;AACd,UAAI,CAAC,KAAK1B,KAAL,CAAWC,UAAZ,IAA0B,KAAKJ,KAAL,CAAW8C,SAAzC,EAAoD;AAClD;AACA,aAAKN,mBAAL,GAA2BO,UAAU,CAAC,KAAKF,kBAAN,EAA0B,IAA1B,CAArC;AACA,aAAKxC,QAAL,CAAc;AACZD,UAAAA,UAAU,EAAE,IADA;AAEZsB,UAAAA,QAAQ,EACN,KAAK1B,KAAL,CAAW8B,QAAX,KAAwB/C,OAAxB,IAAmC,KAAKiB,KAAL,CAAW8B,QAAX,KAAwB9C,KAA3D,GACI,KAAKyB,MAAL,CAAYL,UADhB,GAEI,KAAKD,KAAL,CAAWuB;AALL,SAAd;AAQA,aAAK1B,KAAL,CAAW8C,SAAX;AACAxD,QAAAA,uBAAuB,CAAC,OAAD,CAAvB;AACD;AACF;;;WAQD,gCAAuB;AACrB,WAAKe,QAAL,CAAc;AACZW,QAAAA,QAAQ,EAAE,KADE;AAEZY,QAAAA,UAAU,EAAE,KAFA;AAGZxB,QAAAA,UAAU,EAAE,KAHA;AAIZsB,QAAAA,QAAQ,EAAE,KAAKjB,MAAL,CAAYC,KAJV;AAKZiB,QAAAA,eAAe,EAAE,CALL;AAMZE,QAAAA,YAAY,EAAE;AANF,OAAd;AAQD;;;WAED,kBAAS;AACP,wBASI,KAAK7B,KATT;AAAA,UACEgD,QADF,eACEA,QADF;AAAA,UAEEF,SAFF,eAEEA,SAFF;AAAA,UAGEF,UAHF,eAGEA,UAHF;AAAA,UAIEd,QAJF,eAIEA,QAJF;AAAA,UAKEmB,MALF,eAKEA,MALF;AAAA,UAMEd,QANF,eAMEA,QANF;AAAA,UAOEtB,MAPF,eAOEA,MAPF;AAAA,UAQKqC,SARL;;AAUA,yBAQI,KAAK/C,KART;AAAA,UACEa,QADF,gBACEA,QADF;AAAA,UAEEZ,UAFF,gBAEEA,UAFF;AAAA,UAGEsB,QAHF,gBAGEA,QAHF;AAAA,UAIEC,eAJF,gBAIEA,eAJF;AAAA,UAKEC,UALF,gBAKEA,UALF;AAAA,UAMEtB,SANF,gBAMEA,SANF;AAAA,UAOEuB,YAPF,gBAOEA,YAPF;AAUA,UAAMsB,gBAAgB,4BAAqBzB,QAArB,WAAtB;AACA,UAAI0B,gBAAgB,GAAG,EAAvB;;AAEA,UAAItB,QAAQ,KAAKhD,GAAb,IAAoBsB,UAApB,IAAkC,CAACE,SAAvC,EAAkD;AAChD8C,QAAAA,gBAAgB,GAAG,0BAAnB;AACD,OAFD,MAEO,IAAItB,QAAQ,KAAKhD,GAAb,KAAqB+C,YAAY,IAAIzB,UAArC,CAAJ,EAAsD;AAC3DgD,QAAAA,gBAAgB,4BAAqBvB,YAArB,WAAhB;AACD;;AAED,aACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,QAAA,KAAK,EAAE;AAAlC,SACE,oBAAC,KAAD,eACMqB,SADN;AAEE,QAAA,OAAO,EAAE,KAAKG,YAFhB;AAGE,QAAA,MAAM,EAAE,KAAKC,WAHf;AAIE,QAAA,KAAK,EAAE,KAAKC,UAJd;AAKE,QAAA,SAAS,EAAE1E,UAAU,CAACI,YAAY,CAAC,eAAD,EAAkB6C,QAAlB,CAAb,EAA0C;AAC7D,qCAA2Bd,QADkC;AAE7D,uCAA6BZ;AAFgC,SAA1C;AALvB,UAUE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB,SACE,oBAAC,oBAAD;AACE,QAAA,KAAK,EAAE;AACLoD,UAAAA,SAAS,EAAEL,gBADN;AAELM,UAAAA,eAAe,EAAEN,gBAFZ;AAGLO,UAAAA,OAAO,EAAE1C,QAAQ,IAAIZ,UAAZ,IAA0BwB,UAA1B,GAAuC,CAAvC,GAA2C;AAH/C,SADT;AAME,QAAA,EAAE,EAAExB,UANN;AAOE,QAAA,QAAQ,EAAEA,UAAU,GAAGH,SAAH,GAAe0B;AAPrC,QADF,CAVF,EAsBE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,GAAG,EAAE,KAAKM,UAFZ;AAGE,QAAA,KAAK,EAAE;AACLuB,UAAAA,SAAS,EAAEJ,gBADN;AAELK,UAAAA,eAAe,EAAEL;AAFZ;AAHT,SAQGJ,QARH,CAtBF,CADF,CADF;AAqCD;;;;EAjRyBvE,KAAK,CAACkF,a,GAoRlC;;;AACA,eAAepE,WAAW,CACxBJ,YAAY,CAACE,OAAO,CAAqBU,aAArB,CAAR,CADY,EAExBP,aAFwB,EAGxB,QAHwB,CAA1B","sourcesContent":["import * as React from \"react\";\nimport { Touch, TouchProps, TouchEvent } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS, ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport PullToRefreshSpinner from \"./PullToRefreshSpinner\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { AnyFunction, HasPlatform } from \"../../types\";\nimport { canUseDOM, DOMProps, withDOM } from \"../../lib/dom\";\nimport { runTapticImpactOccurred } from \"../../lib/taptic\";\nimport { withContext } from \"../../hoc/withContext\";\nimport {\n  ScrollContext,\n  ScrollContextInterface,\n} from \"../AppRoot/ScrollContext\";\nimport \"./PullToRefresh.css\";\n\nexport interface PullToRefreshProps extends TouchProps, HasPlatform {\n  /**\n   * Будет вызвана для обновления контента\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface PullToRefreshState {\n  watching: boolean;\n  refreshing: boolean;\n  canRefresh: boolean;\n\n  touchDown: boolean;\n\n  touchY: number;\n  spinnerY: PullToRefreshParams[\"start\"];\n  spinnerProgress: number;\n  contentShift: number;\n}\n\nexport interface PullToRefreshParams {\n  start: number;\n  max: number;\n  maxY: number;\n  refreshing: number;\n  positionMultiplier: number;\n}\n\nexport type TouchEventHandler = (event: TouchEvent) => void;\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nclass PullToRefresh extends React.PureComponent<\n  PullToRefreshProps & DOMProps,\n  PullToRefreshState\n> {\n  constructor(props: PullToRefreshProps) {\n    super(props);\n\n    this.params = {\n      start: props.platform === ANDROID || props.platform === VKCOM ? -45 : -10,\n      max: props.platform === ANDROID || props.platform === VKCOM ? 80 : 50,\n      maxY: props.platform === ANDROID || props.platform === VKCOM ? 80 : 400,\n      refreshing:\n        props.platform === ANDROID || props.platform === VKCOM ? 50 : 36,\n\n      positionMultiplier:\n        props.platform === ANDROID || props.platform === VKCOM ? 1 : 0.21,\n    };\n\n    this.state = {\n      watching: false,\n      refreshing: false,\n      canRefresh: false,\n\n      touchDown: false,\n\n      touchY: 0,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    };\n\n    this.contentRef = React.createRef();\n  }\n\n  params: PullToRefreshParams;\n  contentRef: React.RefObject<HTMLDivElement>;\n  waitFetchingTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.document!.addEventListener(\"touchmove\", this.onWindowTouchMove, {\n        // @ts-ignore\n        cancelable: true,\n        passive: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      this.document!.removeEventListener(\"touchmove\", this.onWindowTouchMove, {\n        // @ts-ignore\n        cancelable: true,\n        passive: false,\n      });\n    }\n    if (this.waitFetchingTimeout) {\n      clearTimeout(this.waitFetchingTimeout);\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: PullToRefreshProps,\n    prevState: PullToRefreshState\n  ) {\n    if (prevProps.isFetching && !this.props.isFetching) {\n      this.onRefreshingFinish();\n    }\n    if (\n      !prevProps.isFetching &&\n      this.props.isFetching &&\n      this.waitFetchingTimeout\n    ) {\n      clearTimeout(this.waitFetchingTimeout);\n    }\n\n    if (prevState.touchDown && !this.state.touchDown) {\n      const { refreshing, canRefresh } = this.state;\n      if (!refreshing && canRefresh) {\n        this.runRefreshing();\n      } else if (refreshing && !this.props.isFetching) {\n        // only iOS can start refresh before gesture end\n        this.resetRefreshingState();\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        this.setState({\n          spinnerY: refreshing ? this.params.refreshing : this.params.start,\n          spinnerProgress: 0,\n          contentShift: 0,\n        });\n      }\n    }\n  }\n\n  onTouchStart: TouchEventHandler = (e: TouchEvent) => {\n    if (this.state.refreshing) {\n      cancelEvent(e);\n    }\n    this.setState({ touchDown: true });\n  };\n\n  onWindowTouchMove: EventListener = (event: Event) => {\n    if (this.state.refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  onTouchMove: TouchEventHandler = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = this.params;\n    const pageYOffset = this.props.scroll?.getScroll().y;\n\n    const { refreshing, watching, touchDown } = this.state;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier } = this.params;\n\n      const shift = Math.max(0, shiftY - this.state.touchY);\n\n      const currentY = Math.max(\n        start,\n        Math.min(this.params.maxY, start + shift * positionMultiplier)\n      );\n      const progress =\n        currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      this.setState({\n        spinnerY: currentY,\n        spinnerProgress: Math.min(80, Math.max(0, progress)),\n        canRefresh: progress > 80,\n        contentShift: (currentY + 10) * 2.3,\n      });\n\n      if (progress > 85 && !refreshing && this.props.platform === IOS) {\n        this.runRefreshing();\n      }\n    } else if (\n      isY &&\n      pageYOffset === 0 &&\n      shiftY > 0 &&\n      !refreshing &&\n      touchDown\n    ) {\n      cancelEvent(e);\n\n      this.setState({\n        watching: true,\n        touchY: shiftY,\n        spinnerY: start,\n        spinnerProgress: 0,\n      });\n    }\n  };\n\n  onTouchEnd = () => {\n    this.setState({\n      watching: false,\n      touchDown: false,\n    });\n  };\n\n  runRefreshing() {\n    if (!this.state.refreshing && this.props.onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      this.waitFetchingTimeout = setTimeout(this.onRefreshingFinish, 1000);\n      this.setState({\n        refreshing: true,\n        spinnerY:\n          this.props.platform === ANDROID || this.props.platform === VKCOM\n            ? this.params.refreshing\n            : this.state.spinnerY,\n      });\n\n      this.props.onRefresh();\n      runTapticImpactOccurred(\"light\");\n    }\n  }\n\n  onRefreshingFinish: VoidFunction = () => {\n    if (!this.state.touchDown) {\n      this.resetRefreshingState();\n    }\n  };\n\n  resetRefreshingState() {\n    this.setState({\n      watching: false,\n      canRefresh: false,\n      refreshing: false,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    });\n  }\n\n  render() {\n    const {\n      children,\n      onRefresh,\n      isFetching,\n      platform,\n      window,\n      document,\n      scroll,\n      ...restProps\n    } = this.props;\n    const {\n      watching,\n      refreshing,\n      spinnerY,\n      spinnerProgress,\n      canRefresh,\n      touchDown,\n      contentShift,\n    } = this.state;\n\n    const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n    let contentTransform = \"\";\n\n    if (platform === IOS && refreshing && !touchDown) {\n      contentTransform = \"translate3d(0, 100px, 0)\";\n    } else if (platform === IOS && (contentShift || refreshing)) {\n      contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <Touch\n          {...restProps}\n          onStart={this.onTouchStart}\n          onMove={this.onTouchMove}\n          onEnd={this.onTouchEnd}\n          vkuiClass={classNames(getClassName(\"PullToRefresh\", platform), {\n            \"PullToRefresh--watching\": watching,\n            \"PullToRefresh--refreshing\": refreshing,\n          })}\n        >\n          <FixedLayout vkuiClass=\"PullToRefresh__controls\">\n            <PullToRefreshSpinner\n              style={{\n                transform: spinnerTransform,\n                WebkitTransform: spinnerTransform,\n                opacity: watching || refreshing || canRefresh ? 1 : 0,\n              }}\n              on={refreshing}\n              progress={refreshing ? undefined : spinnerProgress}\n            />\n          </FixedLayout>\n\n          <div\n            vkuiClass=\"PullToRefresh__content\"\n            ref={this.contentRef}\n            style={{\n              transform: contentTransform,\n              WebkitTransform: contentTransform,\n            }}\n          >\n            {children}\n          </div>\n        </Touch>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default withContext(\n  withPlatform(withDOM<PullToRefreshProps>(PullToRefresh)),\n  ScrollContext,\n  \"scroll\"\n);\n"],"file":"PullToRefresh.js"}