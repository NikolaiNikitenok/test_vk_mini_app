import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'sync_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="sync_16"><g fill="currentColor"><path d="M13.75 1.25a.75.75 0 00-1.5 0v1.188A7 7 0 001.082 9.074a.75.75 0 101.482-.23A5.5 5.5 0 0111.163 3.5H10a.75.75 0 000 1.501h3a.75.75 0 00.75-.75zM13.5 8a5.5 5.5 0 01-8.663 4.5H6A.75.75 0 006 11H3a.75.75 0 00-.75.75v3a.75.75 0 001.5 0v-1.188a7 7 0 0011.168-6.636.75.75 0 00-1.482.23c.042.274.064.556.064.844z" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16Sync = function Icon16Sync(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16Sync.mountIcon = mountIcon;
export default Icon16Sync;
//# sourceMappingURL=sync.js.map