import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 12 12';
var id = 'smile_filled_12';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 12" id="smile_filled_12"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 12A6 6 0 106 0a6 6 0 000 12zM4 4a.85.85 0 100 1.7A.85.85 0 004 4zm.436 3.476a.6.6 0 10-.872.823A3.342 3.342 0 006 9.35c.96 0 1.826-.405 2.436-1.05a.6.6 0 10-.872-.824A2.142 2.142 0 016 8.15a2.142 2.142 0 01-1.564-.674zM7.15 4.85a.85.85 0 111.7 0 .85.85 0 01-1.7 0z" fill="currentColor" /><path fill-rule="evenodd" clip-rule="evenodd" d="M6 12A6 6 0 106 0a6 6 0 000 12zM4 4a.85.85 0 100 1.7A.85.85 0 004 4zm.436 3.476a.6.6 0 10-.872.823A3.342 3.342 0 006 9.35c.96 0 1.826-.405 2.436-1.05a.6.6 0 10-.872-.824A2.142 2.142 0 016 8.15a2.142 2.142 0 01-1.564-.674zM7.15 4.85a.85.85 0 111.7 0 .85.85 0 01-1.7 0z" fill="currentColor" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon12SmileFilled = function Icon12SmileFilled(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 12,
    height: !isNaN(props.height) ? +props.height : 12
  }));
};

Icon12SmileFilled.mountIcon = mountIcon;
export default Icon12SmileFilled;
//# sourceMappingURL=smile_filled.js.map