import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'compass_circle_fill_purple_28';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="compass_circle_fill_purple_28"><linearGradient id="compass_circle_fill_purple_28_a" gradientUnits="userSpaceOnUse" x1="-14" x2="14" y1="14" y2="42"><stop offset="0" stop-color="#937ff5" /><stop offset="1" stop-color="#735ce6" /></linearGradient><rect fill="url(#compass_circle_fill_purple_28_a)" height="28" rx="14" width="28" /><path clip-rule="evenodd" d="M22 14a8 8 0 11-16 0 8 8 0 0116 0zm-10.221-1.336l-1.4 4.198a.6.6 0 00.76.759l4.197-1.4a1.4 1.4 0 00.885-.885l1.4-4.198a.6.6 0 00-.76-.759l-4.197 1.4a1.4 1.4 0 00-.885.885zM14 15a1 1 0 100-2 1 1 0 000 2z" fill="#fff" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28CompassCircleFillPurple = function Icon28CompassCircleFillPurple(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28CompassCircleFillPurple.mountIcon = mountIcon;
export default Icon28CompassCircleFillPurple;
//# sourceMappingURL=compass_circle_fill_purple.js.map