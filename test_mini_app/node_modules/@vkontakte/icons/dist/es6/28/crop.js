import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'crop_28';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="crop_28"><g fill="currentColor"><path d="M7 2a1 1 0 011 1v13.2c0 .857 0 1.439.038 1.889.035.438.1.663.18.819a2 2 0 00.874.874c.156.08.38.145.819.18.45.037 1.032.038 1.889.038H25a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3h-8.241c-.805 0-1.47 0-2.01-.044-.563-.046-1.08-.145-1.565-.392a4 4 0 01-1.748-1.748c-.247-.485-.346-1.002-.392-1.564C6 17.71 6 17.046 6 16.242V8H3a1 1 0 010-2h3V3a1 1 0 011-1z" /><path d="M10 7a1 1 0 011-1h7a4 4 0 014 4v7a1 1 0 11-2 0v-7a2 2 0 00-2-2h-7a1 1 0 01-1-1z" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28Crop = function Icon28Crop(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28Crop.mountIcon = mountIcon;
export default Icon28Crop;
//# sourceMappingURL=crop.js.map