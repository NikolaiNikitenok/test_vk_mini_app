import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'reply_outline_20';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" id="reply_outline_20"><path clip-rule="evenodd" d="M10.244 4.753a.25.25 0 00-.403-.198l-6.74 5.247a.25.25 0 000 .395l6.746 5.249a.25.25 0 00.402-.197v-3.136a.75.75 0 01.75-.75c2.456 0 4.342.913 5.832 2.197-.266-1.454-.824-2.577-1.57-3.426-1.066-1.212-2.581-1.941-4.385-2.228a.75.75 0 01-.632-.741zM8.92 3.37c1.15-.894 2.824-.074 2.824 1.382v1.79c1.81.394 3.434 1.225 4.643 2.6 1.352 1.538 2.117 3.68 2.117 6.445a.75.75 0 01-1.33.477c-1.361-1.655-3.058-2.942-5.425-3.167v2.35c0 1.456-1.674 2.277-2.824 1.382L2.18 11.38c-.9-.7-.9-2.061 0-2.762z" fill="currentColor" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20ReplyOutline = function Icon20ReplyOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20ReplyOutline.mountIcon = mountIcon;
export default Icon20ReplyOutline;
//# sourceMappingURL=reply_outline.js.map