{"version":3,"sources":["../../tmp/IconSettings.tsx"],"names":["React","createContext","useMemo","IconSettingsContext","IconSettingsProvider","children","settings","contextValue","classPrefix","globalClasses"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAmCC,OAAnC,QAAkD,OAAlD;AAOA,OAAO,IAAMC,mBAAmB,gBAAGF,aAAa,CAAwB,EAAxB,CAAzC;AAEP,OAAO,IAAMG,oBAA+C,GAAG,SAAlDA,oBAAkD,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAfC,QAAe;;AAC5F,MAAMC,YAAY,GAAGL,OAAO,CAAC;AAAA,WAAMI,QAAN;AAAA,GAAD,EAAiB,CAACA,QAAQ,CAACE,WAAV,EAAuBF,QAAQ,CAACG,aAAhC,CAAjB,CAA5B;AACA,sBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEF;AAArC,KACGF,QADH,CADF;AAKD,CAPM","sourcesContent":["import React, { createContext, FC, useMemo } from 'react';\n\nexport type IconSettingsInterface = {\n  classPrefix?: string;\n  globalClasses?: boolean;\n}\n\nexport const IconSettingsContext = createContext<IconSettingsInterface>({});\n\nexport const IconSettingsProvider: FC<IconSettingsInterface> = ({ children, ...settings }) => {\n  const contextValue = useMemo(() => settings, [settings.classPrefix, settings.globalClasses]);\n  return (\n    <IconSettingsContext.Provider value={contextValue}>\n      {children}\n    </IconSettingsContext.Provider>\n  );\n};\n"],"file":"IconSettings.js"}