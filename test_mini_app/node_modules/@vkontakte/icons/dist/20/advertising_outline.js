"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _browserSymbol = _interopRequireDefault(require("svg-baker-runtime/browser-symbol"));

var _es6ObjectAssign = require("es6-object-assign");

var _sprite = require("../sprite");

var _SvgIcon = require("../SvgIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore
var viewBox = '0 0 20 20';
var id = 'advertising_outline_20';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" id="advertising_outline_20"><path fill-rule="evenodd" clip-rule="evenodd" d="M16.806 3.965a.87.87 0 00-.67.12l-.006.005-3.632 2.307V12.6l3.638 2.306a.878.878 0 001.11-.125.942.942 0 00.268-.664V4.875c0-.18-.05-.356-.144-.506a.896.896 0 00-.564-.404zm-5.808 8.563V6.463H5.477c-.814 0-1.552.335-2.09.884a3.057 3.057 0 00-.872 2.149c0 .842.334 1.6.872 2.15a2.921 2.921 0 002.09.882h5.521zm.96-7.565l3.365-2.138a2.37 2.37 0 011.814-.323 2.395 2.395 0 011.505 1.072c.243.39.372.841.372 1.3v9.243a2.44 2.44 0 01-.698 1.714 2.38 2.38 0 01-2.993.336l-3.373-2.139h-2.3l.187 1.043a2.434 2.434 0 01-.417 1.85 2.518 2.518 0 01-3.469.603 2.456 2.456 0 01-1.032-1.592l-.36-2a4.436 4.436 0 01-2.242-1.236 4.557 4.557 0 01-1.302-3.2c0-1.247.496-2.38 1.302-3.2a4.417 4.417 0 013.16-1.333h6.481zm-5.857 9.065l.294 1.639a.956.956 0 00.405.62 1.018 1.018 0 001.4-.237.933.933 0 00.161-.712l-.235-1.309H6.101z" fill="currentColor" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    (0, _sprite.addSpriteSymbol)(new _browserSymbol.default({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20AdvertisingOutline = function Icon20AdvertisingOutline(props) {
  (0, _sprite.useIsomorphicLayoutEffect)(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_SvgIcon.SvgIcon, (0, _es6ObjectAssign.assign)({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20AdvertisingOutline.mountIcon = mountIcon;
var _default = Icon20AdvertisingOutline;
exports.default = _default;
//# sourceMappingURL=advertising_outline.js.map