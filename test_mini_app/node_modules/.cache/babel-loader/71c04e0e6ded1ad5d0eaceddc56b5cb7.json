{"ast":null,"code":"/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};","map":{"version":3,"sources":["/home/nikolai/GitHub/test_vk_mini_app/test_mini_app/node_modules/es6-object-assign/index.js"],"names":["assign","target","firstSource","undefined","TypeError","to","Object","i","arguments","length","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,WAAxB,EAAqC;AACnC,MAAID,MAAM,KAAKE,SAAX,IAAwBF,MAAM,KAAK,IAAvC,EAA6C;AAC3C,UAAM,IAAIG,SAAJ,CAAc,yCAAd,CAAN;AACD;;AAED,MAAIC,EAAE,GAAGC,MAAM,CAACL,MAAD,CAAf;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,QAAIG,UAAU,GAAGF,SAAS,CAACD,CAAD,CAA1B;;AACA,QAAIG,UAAU,KAAKP,SAAf,IAA4BO,UAAU,KAAK,IAA/C,EAAqD;AACnD;AACD;;AAED,QAAIC,SAAS,GAAGL,MAAM,CAACM,IAAP,CAAYN,MAAM,CAACI,UAAD,CAAlB,CAAhB;;AACA,SAAK,IAAIG,SAAS,GAAG,CAAhB,EAAmBC,GAAG,GAAGH,SAAS,CAACF,MAAxC,EAAgDI,SAAS,GAAGC,GAA5D,EAAiED,SAAS,EAA1E,EAA8E;AAC5E,UAAIE,OAAO,GAAGJ,SAAS,CAACE,SAAD,CAAvB;AACA,UAAIG,IAAI,GAAGV,MAAM,CAACW,wBAAP,CAAgCP,UAAhC,EAA4CK,OAA5C,CAAX;;AACA,UAAIC,IAAI,KAAKb,SAAT,IAAsBa,IAAI,CAACE,UAA/B,EAA2C;AACzCb,QAAAA,EAAE,CAACU,OAAD,CAAF,GAAcL,UAAU,CAACK,OAAD,CAAxB;AACD;AACF;AACF;;AACD,SAAOV,EAAP;AACD;;AAED,SAASc,QAAT,GAAoB;AAClB,MAAI,CAACb,MAAM,CAACN,MAAZ,EAAoB;AAClBM,IAAAA,MAAM,CAACc,cAAP,CAAsBd,MAAtB,EAA8B,QAA9B,EAAwC;AACtCY,MAAAA,UAAU,EAAE,KAD0B;AAEtCG,MAAAA,YAAY,EAAE,IAFwB;AAGtCC,MAAAA,QAAQ,EAAE,IAH4B;AAItCC,MAAAA,KAAK,EAAEvB;AAJ+B,KAAxC;AAMD;AACF;;AAEDwB,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,MAAM,EAAEA,MADO;AAEfmB,EAAAA,QAAQ,EAAEA;AAFK,CAAjB","sourcesContent":["/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n"]},"metadata":{},"sourceType":"script"}