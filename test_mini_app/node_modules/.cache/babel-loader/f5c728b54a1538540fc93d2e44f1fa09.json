{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport ModalRootContext from \"./ModalRootContext\";\nexport function withModalRootContext(Component) {\n  function WithModalRootContext(props) {\n    var _React$useContext = React.useContext(ModalRootContext),\n        updateModalHeight = _React$useContext.updateModalHeight;\n\n    return createScopedElement(Component, _extends({}, props, {\n      updateModalHeight: updateModalHeight\n    }));\n  }\n\n  return WithModalRootContext;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP;AAMA,OAAO,SAASC,oBAAT,CACLC,SADK,EAE4C;AACjD,WAASC,oBAAT,CAA8BC,KAA9B,EAAiE;AAC/D,4BAA8BL,KAAK,CAACM,UAANN,CAAiBC,gBAAjBD,CAA9B;AAAA,QAAQO,iBAAR,qBAAQA,iBAAR;;AAEA,WACEC,oBAACL,SAAD,eAAgBE,KAAhB;AAA6BE,uBAAiB,EAAEA;AAAhD,OADF;AAGD;;AACD,SAAOH,oBAAP;AACD","names":["React","ModalRootContext","withModalRootContext","Component","WithModalRootContext","props","useContext","updateModalHeight","createScopedElement"],"sources":["../../../src/components/ModalRoot/withModalRootContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport ModalRootContext, {\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\n\ntype PickedProps = Pick<ModalRootContextInterface, \"updateModalHeight\">;\n\nexport function withModalRootContext<P extends PickedProps>(\n  Component: React.ComponentType<P>\n): React.ComponentType<Omit<P, keyof PickedProps>> {\n  function WithModalRootContext(props: Omit<P, keyof PickedProps>) {\n    const { updateModalHeight } = React.useContext(ModalRootContext);\n\n    return (\n      <Component {...(props as P)} updateModalHeight={updateModalHeight} />\n    );\n  }\n  return WithModalRootContext;\n}\n"]},"metadata":{},"sourceType":"module"}