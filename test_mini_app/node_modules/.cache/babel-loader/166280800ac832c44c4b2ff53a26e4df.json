{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 32 32';\nvar id = 'write_32';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" id=\"write_32\"><path d=\"M19.643 8.311l4.045 4.045L10.405 25.64a7.628 7.628 0 01-3.167 1.902l-3.317 1.013a.381.381 0 01-.476-.476l1.013-3.317a7.628 7.628 0 011.902-3.167zm5.659-3.232l1.62 1.62c.628.628.668 1.621.118 2.295l-.117.13-2.022 2.02L20.855 7.1l2.022-2.02c.67-.67 1.755-.67 2.425 0z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon32Write = function Icon32Write(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 32,\n    height: !isNaN(props.height) ? +props.height : 32\n  }));\n};\n\nIcon32Write.mountIcon = mountIcon;\nexport default Icon32Write;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,UAAX;AACA,IAAMC,OAAO,GAAG,8YAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,WAAiC,GAAG,SAApCA,WAAoC,CAACC,KAAD,EAAW;AACnDR,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,WAAD,CAAqBD,SAApBC,GAAgCD,SAAhCC;AAED,eAAeA,WAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon32Write","props","createElement","width","isNaN","height"],"sources":["../../../tmp/32/write.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 32 32';\nconst id = 'write_32';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" id=\"write_32\"><path d=\"M19.643 8.311l4.045 4.045L10.405 25.64a7.628 7.628 0 01-3.167 1.902l-3.317 1.013a.381.381 0 01-.476-.476l1.013-3.317a7.628 7.628 0 011.902-3.167zm5.659-3.232l1.62 1.62c.628.628.668 1.621.118 2.295l-.117.13-2.022 2.02L20.855 7.1l2.022-2.02c.67-.67 1.755-.67 2.425 0z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon32WriteProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon32Write: FC<Icon32WriteProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 32,\n    height: !isNaN(props.height) ? +props.height : 32,\n  }));\n};\n\n(Icon32Write as any).mountIcon = mountIcon;\n\nexport default Icon32Write;\n"]},"metadata":{},"sourceType":"module"}