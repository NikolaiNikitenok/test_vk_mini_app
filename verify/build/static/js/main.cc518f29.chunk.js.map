{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","contAdress","userAdress","useState","contractik","setContractik","adressok","setAdressok","ethBalance","setEthBalance","ethAcc","setEthAcc","isConnected","setIsConnected","ethAdd","setEthAdd","walletIsConnected","setWalletIsConnected","miniBlock","detectCurrentProvider","provider","window","ethereum","web3","currentProvider","console","log","onConnect","a","ABI","request","method","Web3","eth","getAccounts","userAccount","account","getBalance","location","hash","Address","Contract","contract","hashik","substring","hashikMass","split","checkVal","methods","verifier","call","from","perem","alert","left","className","header","mode","stretched","size","onClick","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","then","data","result","catch","error","useEffect","user","subscribe","detail","type","fetchData","id","go","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc518f29.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport PropTypes, { string } from 'prop-types';\r\n\r\nimport { \r\n\tPanel, \r\n\tPanelHeader, \r\n\tPanelHeaderBack, \r\n\tHeader, \r\n\tButton, \r\n\tGroup, \r\n\tCell, \r\n\tDiv, \r\n\tAvatar, \r\n\tTabs, \r\n\tTabsItem, \r\n\tList, \r\n\tFooter, \r\n\tPopoutWrapper,\r\n\tTextarea,\r\n\tCheckbox,\r\n\tLink,\r\n\tRadio,\r\n\tFormLayout, \r\n\tFormItem, \r\n\tInput, \r\n} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\nimport Web3 from 'web3';\r\n\r\nconst Home = () => {\r\n\r\n\r\n\tlet contAdress = ''\r\n\tlet userAdress = ''\r\n\r\n\tconst[contractik, setContractik] = useState('')\r\n\tconst[adressok, setAdressok] = useState('')\r\n\tconst[ethBalance, setEthBalance] = useState('')\r\n\tconst[ethAcc, setEthAcc] = useState('')\r\n\tconst[isConnected, setIsConnected] = useState(false)\r\n\tconst[ethAdd, setEthAdd] = useState(false)\r\n\tconst[walletIsConnected, setWalletIsConnected] = useState(false)\r\n\tconst[miniBlock, setMiniBlock] = useState([])\r\n\r\n\tconst detectCurrentProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n    }\r\n    return provider;\r\n  };\r\n\r\n\tconst onConnect = async () => {\r\n\t\ttry {\r\n\t\t\tconst currentProvider = detectCurrentProvider();\r\n\t\t\tconst ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tiketStor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"tiketStor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n\t\t\tif(currentProvider) {\r\n        \r\n        await currentProvider.request({method: 'eth_requestAccounts'});\r\n        const web3 = new Web3(currentProvider);\r\n        const userAccount = await web3.eth.getAccounts();\r\n        const account = userAccount[0];\r\n        let ethBalance = await web3.eth.getBalance(account);\r\n        console.log(account);\r\n\r\n\t\t\t\tconsole.log(window.location.hash)\r\n\r\n        // setDoneScreenSpinner();\r\n        setEthBalance(ethBalance);\r\n        setEthAcc(account)\r\n        setIsConnected(true);\r\n      \r\n\t\t\t\tconst Address = \"0x59a195a6524b231Ce41F3Cbc8263d57F426E90E0\";\r\n\t\t\t\tsetEthAdd(Address)\r\n\t\t\t\twindow.web3 = await new Web3(window.ethereum);\r\n\t\t\t\twindow.contract = await new window.web3.eth.Contract(ABI, Address);\r\n\t\t\t\tsetWalletIsConnected(true);\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet hashik = (window.location.hash).substring(1);\r\n\t\t\t\tlet hashikMass = []\r\n\t\t\t\thashikMass = hashik.split('/')\r\n\t\t\t\tcontAdress = hashikMass[1]\r\n\t\t\t\tsetContractik(contAdress)\r\n\t\t\t\tuserAdress = hashikMass[0]\r\n\t\t\t\tsetAdressok(userAdress)\r\n\r\n\t\t\t\tconsole.log(contAdress)\r\n\t\t\t\tconsole.log(userAdress)\r\n\t\t\r\n\r\n\r\n\t\t\t\t// counter\r\n\t\t\t\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n\r\n\r\n\t\t\r\n  }\r\n\r\n\r\n\t// const useHash = () => {\r\n\t// \tconst [hash, setHash] = React.useState(() => window.location.hash);\r\n\t\r\n\t// \tconst hashChangeHandler = React.useCallback(() => {\r\n\t// \t\tsetHash(window.location.hash);\r\n\t// \t}, []);\r\n\t\r\n\t// \tReact.useEffect(() => {\r\n\t// \t\twindow.addEventListener('hashchange', hashChangeHandler);\r\n\t// \t\treturn () => {\r\n\t// \t\t\twindow.removeEventListener('hashchange', hashChangeHandler);\r\n\t// \t\t};\r\n\t// \t}, []);\r\n\t\r\n\t// \tconst updateHash = React.useCallback(\r\n\t// \t\tnewHash => {\r\n\t// \t\t\tif (newHash !== hash) window.location.hash = newHash;\r\n\t// \t\t},\r\n\t// \t\t[hash]\r\n\t// \t);\r\n\t\r\n\t// \treturn [hash, updateHash];\r\n\t// };\r\n\r\n\tconst checkVal = async () => {\r\n\t\tconst cop = []\r\n\r\n\t\tsetAdressok(userAdress);\r\n\t\tsetContractik(contAdress)\r\n\t\tconst perem = await window.contract.methods.verifier(contractik, adressok).call({ from: ethAcc });\r\n\t\tconsole.log(perem)\r\n\r\n\t\tif (perem) {\r\n\r\n\t\t\talert(\"Вы можете пройти на мероприятие!\")\r\n\t\t}\r\n\t\tif (!perem) {\r\n\r\n\t\t\talert(\"Вы НЕ можете пройти на мероприятие!\")\r\n\t\t}\r\n\t\t// setMiniBlock(cop)\r\n\t\t\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> Verify\r\n\t\t\t\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Group className=\"app-wrapper\" header={<Header mode=\"secondary\">Подключение MetaMask</Header>}>\r\n\t\t\t\t{!isConnected && (\r\n\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Button className=\"app-button__login\" stretched size=\"l\" mode=\"secondary\" onClick={onConnect}>\r\n\t\t\t\t\t\tПодключить MetaMask\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Div>\r\n\t\t\t\t)}\r\n\t\t\t\r\n\t\t\t\t{isConnected && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Div className=\"app-wrapper\">\r\n\t\t\t\t\t\t<div className=\"app-details\">\r\n\t\t\t\t\t\t\t<h2> Вы подключились к MetaMask.</h2>\r\n\t\t\t\t\t\t\t<Group header={<Header mode=\"secondary\">Информация</Header>}>\r\n\t\t\t\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"app-balance\">\r\n\t\t\t\t\t\t\t\t\t\t<span>Баланс Кошелька: </span>\r\n\t\t\t\t\t\t\t\t\t\t{ethBalance / (10**18)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span>Адрес Кошелька: </span>\r\n\t\t\t\t\t\t\t\t\t\t{ethAcc}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t{walletIsConnected && (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>Адрес Контракта: </span>\r\n\t\t\t\t\t\t\t\t\t\t\t{ethAdd}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Div>\r\n\t\t\t\t\t\t\t</Group>\r\n\t\t\t\t\t\t\t<FormLayout>\r\n\r\n\t\t\t\t\t\t\t\t{/* Название */}\r\n\t\t\t\t\t\t\t\t{/* <FormItem\r\n\t\t\t\t\t\t\t\ttop=\"Контракт\"\r\n\t\t\t\t\t\t\t\tstatus={contAdress ? 'valid' : 'error'}\r\n\t\t\t\t\t\t\t\tbottom={\r\n\t\t\t\t\t\t\t\t\tcontAdress ? '' : 'Обязательное поле!'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Input type=\"name\" name=\"name\" onChange={(event) => setContractik(event.target.value)}/>\r\n\t\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t\t\t<FormItem\r\n\t\t\t\t\t\t\t\ttop=\"Адрес\"\r\n\t\t\t\t\t\t\t\tstatus={userAdress ? 'valid' : 'error'}\r\n\t\t\t\t\t\t\t\tbottom={\r\n\t\t\t\t\t\t\t\t\tuserAdress ? '' : 'Обязательное поле!'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Input type=\"name\" name=\"name\"onChange={(event) => setAdressok(event.target.value)}/>\r\n\t\t\t\t\t\t\t\t</FormItem> */}\r\n\r\n\t\t\t\t\t\t\t\t<Button size=\"l\" onClick={checkVal}>Проверить наличие</Button>\r\n\r\n\t\t\t\t\t\t\t\t{miniBlock}\r\n\r\n\t\t\t\t\t\t\t</FormLayout>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t</Div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\n// import Connect from './panels/Connect';\r\nimport Privacy from './panels/privacy'\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tbridge.send('VKWebAppAddToFavorites')\r\n\t.then((data) => { \r\n\t\tif (data.result) {\r\n\t\t// Мини-приложение или игра добавлены в избранное\r\n\t\t}\r\n\t})\r\n\t.catch((error) => {\r\n\t\t// Ошибка\r\n\t\tconsole.log(error);\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout popout={popout}>\r\n\t\t\t\t\t\t<SplitCol>\r\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\r\n\t\t\t\t\t\t\t\t<Home id='home' go={go}/>\r\n\t\t\t\t\t\t\t\t{/* <Connect id='connect' go={go}/> */}\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send('VKWebAppInit')\r\n  .then((data) => { \r\n    if (data.result) {\r\n      // Приложение инициализировано\r\n    } else {\r\n      // Ошибка\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    // Ошибка\r\n    console.log(error);\r\n  });\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}