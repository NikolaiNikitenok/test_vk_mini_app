{"version":3,"sources":["../../../src/components/RangeSlider/RangeSlider.tsx"],"names":["React","clamp","UniversalSlider","RangeSlider","onChange","defaultValue","min","max","step","props","isControlled","Boolean","value","useState","localValue","setValue","start","end","useMemo","handleChange","useCallback","nextValue","event","disabled"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AACA,SAASC,eAAT;;AAKA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAOxB;AAAA,MANtBC,QAMsB,QANtBA,QAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,sBAJtBC,GAIsB;AAAA,MAJtBA,GAIsB,yBAJhB,CAIgB;AAAA,sBAHtBC,GAGsB;AAAA,MAHtBA,GAGsB,yBAHhB,GAGgB;AAAA,uBAFtBC,IAEsB;AAAA,MAFtBA,IAEsB,0BAFf,CAEe;AAAA,MADnBC,KACmB;;AACtB,MAAMC,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACG,KAAP,CAA5B;;AAEA,wBAA+BZ,KAAK,CAACa,QAAN,CAC7BR,YAAY,IAAK,CAACC,GAAD,EAAMC,GAAN,CADY,CAA/B;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,QAAnB;;AAGA,cAAqBN,KAAK,CAACG,KAAN,IAAeE,UAApC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,GAAd;;AACA,MAAML,KAAK,GAAGZ,KAAK,CAACkB,OAAN,CACZ;AAAA,WAAM,CAACjB,KAAK,CAACe,KAAD,EAAQV,GAAR,EAAaC,GAAb,CAAN,EAAyBN,KAAK,CAACgB,GAAD,EAAMX,GAAN,EAAWC,GAAX,CAA9B,CAAN;AAAA,GADY,EAEZ,CAACU,GAAD,EAAMV,GAAN,EAAWD,GAAX,EAAgBU,KAAhB,CAFY,CAAd;AAKA,MAAMG,YAA0C,GAAGnB,KAAK,CAACoB,WAAN,CACjD,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACpB,QACEb,KAAK,CAACc,QAAN,IACCX,KAAK,CAAC,CAAD,CAAL,KAAaS,SAAS,CAAC,CAAD,CAAtB,IAA6BT,KAAK,CAAC,CAAD,CAAL,KAAaS,SAAS,CAAC,CAAD,CAFtD,EAGE;AACA;AACD;;AACD,KAACX,YAAD,IAAiBK,QAAQ,CAACM,SAAD,CAAzB;AACAjB,IAAAA,QAAQ,IAAIA,QAAQ,CAACiB,SAAD,EAAYC,KAAZ,CAApB;AACD,GAVgD,EAWjD,CAACb,KAAK,CAACc,QAAP,EAAiBX,KAAjB,EAAwBF,YAAxB,EAAsCN,QAAtC,CAXiD,CAAnD;AAcA,SACE,oBAAC,eAAD,eACMK,KADN;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,GAAG,EAAEb,GAJP;AAKE,IAAA,GAAG,EAAEC,GALP;AAME,IAAA,IAAI,EAAEC;AANR,KADF;AAUD,CA3CD,C,CA6CA;;;AACA,eAAeL,WAAf","sourcesContent":["import * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { UniversalSlider, UniversalSliderProps } from \"./UniversalSlider\";\n\nexport type Value = [number, number];\nexport type RangeSliderProps = UniversalSliderProps<Value>;\n\nconst RangeSlider: React.FC<RangeSliderProps> = ({\n  onChange,\n  defaultValue,\n  min = 0,\n  max = 100,\n  step = 0,\n  ...props\n}: RangeSliderProps) => {\n  const isControlled = Boolean(props.value);\n\n  const [localValue, setValue] = React.useState(\n    defaultValue || ([min, max] as Value)\n  );\n  const [start, end] = props.value || localValue;\n  const value = React.useMemo(\n    () => [clamp(start, min, max), clamp(end, min, max)] as Value,\n    [end, max, min, start]\n  );\n\n  const handleChange: RangeSliderProps[\"onChange\"] = React.useCallback(\n    (nextValue, event) => {\n      if (\n        props.disabled ||\n        (value[0] === nextValue[0] && value[1] === nextValue[1])\n      ) {\n        return;\n      }\n      !isControlled && setValue(nextValue);\n      onChange && onChange(nextValue, event);\n    },\n    [props.disabled, value, isControlled, onChange]\n  );\n\n  return (\n    <UniversalSlider\n      {...props}\n      value={value}\n      onChange={handleChange}\n      min={min}\n      max={max}\n      step={step}\n    />\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default RangeSlider;\n"],"file":"RangeSlider.js"}