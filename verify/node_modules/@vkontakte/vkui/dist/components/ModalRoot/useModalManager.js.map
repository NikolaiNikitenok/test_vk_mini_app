{"version":3,"sources":["../../../src/components/ModalRoot/useModalManager.tsx"],"names":["React","ModalType","warnOnce","getNavId","useIsomorphicLayoutEffect","noop","isFunction","getModals","children","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","isBack","Boolean","includes","splice","indexOf","push","enteringModal","useModalManager","onClose","initModal","modalsState","useRef","current","forEach","Modal","modalProps","props","undefined","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","useReducer","transitionState","dispatchTransition","process","env","NODE_ENV","isCard","CARD","onEnter","useCallback","onExit","delayEnter","getModalState","closeActiveModal","modalState","withModalManager","Wrapped","WithModalManager","transitionManager"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ModalsState, ModalsStateEntry, ModalType } from \"./types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop, isFunction } from \"../../lib/utils\";\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: (id: string | null) => void;\n  onExit: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  closeActiveModal: VoidFunction;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: \"setActive\" | \"entered\" | \"exited\" | \"inited\";\n    id: string | null;\n  }\n): ModalTransitionState {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onClose: (id: string) => void,\n  initModal: (state: ModalsStateEntry) => void = noop\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onClose = Modal.props.onClose;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(\n    modalTransitionReducer,\n    {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false,\n    }\n  );\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(`Can't transition - modal ${activeModal} not found`);\n    }\n    dispatchTransition({ type: \"setActive\", id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: \"inited\", id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEnter = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"entered\", id }),\n    []\n  );\n  const onExit = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"exited\", id }),\n    []\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal &&\n      (isCard(activeModal) || isCard(transitionState.exitingModal))\n  );\n  const getModalState = React.useCallback(\n    (id: string) => modalsState[id],\n    [modalsState]\n  );\n\n  function closeActiveModal() {\n    const modalState =\n      transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      } else if (process.env.NODE_ENV === \"development\") {\n        warn(\"onClose is undefined\");\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onExit,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n    closeActiveModal,\n  };\n}\n\nexport function withModalManager(\n  initModal: (a: ModalsStateEntry) => void = noop\n) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>\n  ): React.FC<\n    Omit<Props, keyof ModalTransitionProps> & { activeModal?: string | null }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onClose,\n        initModal\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"],"file":"useModalManager.js"}