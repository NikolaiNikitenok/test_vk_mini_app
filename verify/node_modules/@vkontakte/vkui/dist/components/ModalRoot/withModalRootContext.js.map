{"version":3,"sources":["../../../src/components/ModalRoot/withModalRootContext.tsx"],"names":["React","ModalRootContext","withModalRootContext","Component","WithModalRootContext","props","useContext","updateModalHeight"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP;AAMA,OAAO,SAASC,oBAAT,CACLC,SADK,EAE4C;AACjD,WAASC,oBAAT,CAA8BC,KAA9B,EAAiE;AAC/D,4BAA8BL,KAAK,CAACM,UAAN,CAAiBL,gBAAjB,CAA9B;AAAA,QAAQM,iBAAR,qBAAQA,iBAAR;;AAEA,WACE,oBAAC,SAAD,eAAgBF,KAAhB;AAA6B,MAAA,iBAAiB,EAAEE;AAAhD,OADF;AAGD;;AACD,SAAOH,oBAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport ModalRootContext, {\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\n\ntype PickedProps = Pick<ModalRootContextInterface, \"updateModalHeight\">;\n\nexport function withModalRootContext<P extends PickedProps>(\n  Component: React.ComponentType<P>\n): React.ComponentType<Omit<P, keyof PickedProps>> {\n  function WithModalRootContext(props: Omit<P, keyof PickedProps>) {\n    const { updateModalHeight } = React.useContext(ModalRootContext);\n\n    return (\n      <Component {...(props as P)} updateModalHeight={updateModalHeight} />\n    );\n  }\n  return WithModalRootContext;\n}\n"],"file":"withModalRootContext.js"}