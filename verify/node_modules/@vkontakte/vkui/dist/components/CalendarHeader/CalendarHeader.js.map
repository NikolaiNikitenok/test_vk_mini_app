{"version":3,"sources":["../../../src/components/CalendarHeader/CalendarHeader.tsx"],"names":["React","setMonth","setYear","subMonths","addMonths","Icon20ChevronLeftOutline","Icon20ChevronRightOutline","Icon12Dropdown","Tappable","classNames","CustomSelect","SelectType","CustomSelectOption","SizeType","getMonths","getYears","LocaleProviderContext","Text","renderOption","option","children","props","CalendarHeader","viewDate","onChange","prevMonth","nextMonth","disablePickers","onNextMonth","onPrevMonth","className","prevMonthAriaLabel","nextMonthAriaLabel","changeMonthAriaLabel","changeYearAriaLabel","locale","useContext","onMonthsChange","useCallback","event","Number","target","value","onYearChange","months","useMemo","currentYear","getFullYear","years","formatter","Intl","DateTimeFormat","year","month","format","getMonth","COMPACT","Plain"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { setMonth, setYear, subMonths, addMonths } from \"date-fns\";\nimport {\n  Icon20ChevronLeftOutline,\n  Icon20ChevronRightOutline,\n  Icon12Dropdown,\n} from \"@vkontakte/icons\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport CustomSelect, {\n  CustomSelectProps,\n  SelectType,\n} from \"../CustomSelect/CustomSelect\";\nimport CustomSelectOption from \"../CustomSelectOption/CustomSelectOption\";\nimport { SizeType } from \"../../hoc/withAdaptivity\";\nimport { getMonths, getYears } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport Text from \"../Typography/Text/Text\";\nimport \"./CalendarHeader.css\";\n\nexport interface CalendarHeaderProps\n  extends Pick<React.HTMLAttributes<HTMLDivElement>, \"className\"> {\n  viewDate: Date;\n  prevMonth?: boolean;\n  nextMonth?: boolean;\n  disablePickers?: boolean;\n  prevMonthAriaLabel?: string;\n  nextMonthAriaLabel?: string;\n  changeMonthAriaLabel?: string;\n  changeYearAriaLabel?: string;\n  onChange(viewDate: Date): void;\n  onNextMonth?(): void;\n  onPrevMonth?(): void;\n}\n\nconst renderOption: CustomSelectProps[\"renderOption\"] = ({\n  option,\n  children,\n  ...props\n}) => {\n  return (\n    <CustomSelectOption {...props}>\n      <span vkuiClass=\"CalendarHeader__month_name\">{children}</span>\n    </CustomSelectOption>\n  );\n};\n\nexport const CalendarHeader: React.FC<CalendarHeaderProps> = ({\n  viewDate,\n  onChange,\n  prevMonth = true,\n  nextMonth = true,\n  disablePickers = false,\n  onNextMonth,\n  onPrevMonth,\n  className,\n  prevMonthAriaLabel = \"Предыдущий месяц\",\n  nextMonthAriaLabel = \"Следующий месяц\",\n  changeMonthAriaLabel = \"Изменить месяц\",\n  changeYearAriaLabel = \"Изменить год\",\n}) => {\n  const locale = React.useContext(LocaleProviderContext);\n  const onMonthsChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setMonth(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n  const onYearChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) =>\n      onChange(setYear(viewDate, Number(event.target.value))),\n    [onChange, viewDate]\n  );\n\n  const months = React.useMemo(() => getMonths(locale), [locale]);\n\n  const currentYear = viewDate.getFullYear();\n\n  const years = React.useMemo(() => getYears(currentYear, 100), [currentYear]);\n\n  const formatter = new Intl.DateTimeFormat(locale, {\n    year: \"numeric\",\n    month: \"long\",\n  });\n\n  return (\n    <div vkuiClass=\"CalendarHeader\" className={className}>\n      {prevMonth && (\n        <Tappable\n          vkuiClass={classNames(\n            \"CalendarHeader__nav-icon\",\n            \"CalendarHeader__nav-icon-prev\"\n          )}\n          onClick={onPrevMonth}\n          aria-label={`${prevMonthAriaLabel}, ${formatter.format(\n            subMonths(viewDate, 1)\n          )}`}\n        >\n          <Icon20ChevronLeftOutline width={30} height={30} />\n        </Tappable>\n      )}\n      <div vkuiClass=\"CalendarHeader__pickers\">\n        {disablePickers ? (\n          <React.Fragment>\n            <Text\n              weight=\"medium\"\n              vkuiClass=\"CalendarHeader__pickers-placeholder\"\n            >\n              {new Intl.DateTimeFormat(locale, {\n                month: \"long\",\n              }).format(viewDate)}\n            </Text>\n            <Text\n              weight=\"medium\"\n              vkuiClass=\"CalendarHeader__pickers-placeholder\"\n            >\n              {new Intl.DateTimeFormat(locale, {\n                year: \"numeric\",\n              }).format(viewDate)}\n            </Text>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <CustomSelect\n              value={viewDate.getMonth()}\n              options={months}\n              renderOption={renderOption}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              sizeY={SizeType.COMPACT}\n              icon={<Icon12Dropdown />}\n              onChange={onMonthsChange}\n              forceDropdownPortal={false}\n              selectType={SelectType.Plain}\n              aria-label={changeMonthAriaLabel}\n            />\n            <CustomSelect\n              value={viewDate.getFullYear()}\n              options={years}\n              dropdownOffsetDistance={4}\n              fixDropdownWidth={false}\n              sizeY={SizeType.COMPACT}\n              icon={<Icon12Dropdown />}\n              onChange={onYearChange}\n              forceDropdownPortal={false}\n              selectType={SelectType.Plain}\n              aria-label={changeYearAriaLabel}\n            />\n          </React.Fragment>\n        )}\n      </div>\n      {nextMonth && (\n        <Tappable\n          vkuiClass={classNames(\n            \"CalendarHeader__nav-icon\",\n            \"CalendarHeader__nav-icon-next\"\n          )}\n          onClick={onNextMonth}\n          aria-label={`${nextMonthAriaLabel}, ${formatter.format(\n            addMonths(viewDate, 1)\n          )}`}\n        >\n          <Icon20ChevronRightOutline width={30} height={30} />\n        </Tappable>\n      )}\n    </div>\n  );\n};\n"],"file":"CalendarHeader.js"}