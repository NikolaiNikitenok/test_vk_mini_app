{"version":3,"sources":["../../src/lib/dom.tsx"],"names":["React","canUseDOM","canUseEventListeners","onDOMLoaded","getDOM","window","undefined","document","DOMContext","createContext","useDOM","useContext","withDOM","Component","WithDOM","props","dom","blurActiveElement","activeElement","blur"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASA,SAAT,EAAoBC,oBAApB,EAA0CC,WAA1C,QAA6D,iBAA7D;;AAeA;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AAC3BC,IAAAA,MAAM,EAAEJ,SAAS,GAAGI,MAAH,GAAYC,SADF;AAE3BC,IAAAA,QAAQ,EAAEN,SAAS,GAAGM,QAAH,GAAcD;AAFN,GAAP;AAAA,CAAf;AAIP;;AAEA,OAAO,IAAME,UAAU,gBAAGR,KAAK,CAACS,aAAN,CAAyCL,MAAM,EAA/C,CAAnB;AAEP,OAAO,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAOV,KAAK,CAACW,UAAN,CAAiBH,UAAjB,CAAP;AACD,CAFM;AAIP,OAAO,SAASI,OAAT,CACLC,SADK,EAEuB;AAC5B,MAAMC,OAAwB,GAAG,SAA3BA,OAA2B,CAACC,KAAD,EAAkB;AACjD,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AACA,WAAO,oBAAC,SAAD,eAAeK,KAAf,EAA0BC,GAA1B,EAAP;AACD,GAHD;;AAIA,SAAOF,OAAP;AACD;AAED,OAAO,SAASG,iBAAT,CAA2BV,QAA3B,EAA2D;AAChE,MAAIA,QAAQ,IAAIA,QAAQ,CAACW,aAAzB,EAAwC;AACrCX,IAAAA,QAAQ,CAACW,aAAV,CAAwCC,IAAxC;AACD;AACF","sourcesContent":["import * as React from \"react\";\nimport { canUseDOM } from \"@vkontakte/vkjs\";\nexport { canUseDOM, canUseEventListeners, onDOMLoaded } from \"@vkontakte/vkjs\";\n\nexport interface DOMContextInterface {\n  /**\n   * @ignore\n   */\n  window?: Window;\n  /**\n   * @ignore\n   */\n  document?: Document;\n}\n\nexport type DOMProps = DOMContextInterface;\n\n/* eslint-disable no-restricted-globals */\nexport const getDOM = () => ({\n  window: canUseDOM ? window : undefined,\n  document: canUseDOM ? document : undefined,\n});\n/* eslint-enable no-restricted-globals */\n\nexport const DOMContext = React.createContext<DOMContextInterface>(getDOM());\n\nexport const useDOM = () => {\n  return React.useContext(DOMContext);\n};\n\nexport function withDOM<Props>(\n  Component: React.ComponentType<Props & DOMProps>\n): React.ComponentType<Props> {\n  const WithDOM: React.FC<Props> = (props: Props) => {\n    const dom = useDOM();\n    return <Component {...props} {...dom} />;\n  };\n  return WithDOM;\n}\n\nexport function blurActiveElement(document: Document | undefined) {\n  if (document && document.activeElement) {\n    (document.activeElement as HTMLElement).blur();\n  }\n}\n"],"file":"dom.js"}