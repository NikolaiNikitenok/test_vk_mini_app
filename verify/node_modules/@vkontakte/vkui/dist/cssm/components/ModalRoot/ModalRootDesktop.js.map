{"version":3,"sources":["../../../../src/components/ModalRoot/ModalRootDesktop.tsx"],"names":["React","classNames","transitionEvent","withPlatform","withContext","ModalRootContext","ConfigProviderContext","WebviewType","ANDROID","VKCOM","getClassName","withDOM","getNavId","warnOnce","FocusTrap","withModalManager","warn","ModalRootDesktopComponent","props","undefined","maskElementRef","createRef","modalRootContext","updateModalHeight","registerModal","id","data","Object","assign","getModalState","onClose","closeActiveModal","isInsideModal","platform","Children","toArray","children","prevProps","exitingModal","closeModal","enteringModal","enteringState","requestAnimationFrame","waitTransitionFinish","onEnter","animateModalOpacity","activeModal","restoreFocusTo","document","activeElement","focus","prevModalState","onExit","setMaskOpacity","modalState","eventHandler","supported","onceHandler","innerElement","removeEventListener","name","addEventListener","setTimeout","timeout","display","style","transitionDelay","delayEnter","opacity","forceOpacity","history","maskAnimationFrame","cancelAnimationFrame","current","translateY","translateYCurrent","Math","max","min","toString","configProvider","webviewType","VKAPPS","modals","map","Modal","modalId","key","Boolean","Component","ModalRootDesktop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext, {\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalsStateEntry } from \"./types\";\nimport { ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { DOMProps, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalTransitionProps, withModalManager } from \"./useModalManager\";\nimport \"./ModalRoot.css\";\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n\n  /**\n   * Будет вызвано при закрытии активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n}\n\nclass ModalRootDesktopComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: () => undefined,\n      registerModal: ({ id, ...data }) =>\n        Object.assign(this.getModalState(id), data),\n      onClose: () => this.props.closeActiveModal(),\n      isInsideModal: true,\n    };\n  }\n\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private restoreFocusTo: HTMLElement | undefined = undefined;\n\n  private get timeout() {\n    return this.props.platform === ANDROID || this.props.platform === VKCOM\n      ? 320\n      : 400;\n  }\n\n  private get modals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  getModalState(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (\n      this.props.exitingModal &&\n      this.props.exitingModal !== prevProps.exitingModal\n    ) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (\n      this.props.enteringModal &&\n      this.props.enteringModal !== prevProps.enteringModal\n    ) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      requestAnimationFrame(() => {\n        if (this.props.enteringModal === enteringModal) {\n          this.waitTransitionFinish(enteringState, () =>\n            this.props.onEnter(enteringModal)\n          );\n          this.animateModalOpacity(enteringState, true);\n        }\n      });\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = (this.props.document?.activeElement ??\n        undefined) as HTMLElement | undefined;\n    }\n    if (\n      !this.props.activeModal &&\n      !this.props.exitingModal &&\n      this.restoreFocusTo\n    ) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = undefined;\n    }\n  }\n\n  closeModal(id: string) {\n    const prevModalState = this.getModalState(id);\n    if (!prevModalState) {\n      return;\n    }\n\n    this.waitTransitionFinish(prevModalState, () => this.props.onExit(id));\n    this.animateModalOpacity(prevModalState, false);\n    if (!this.props.activeModal) {\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  waitTransitionFinish(\n    modalState: ModalsStateEntry | undefined,\n    eventHandler: () => void\n  ) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(\n          transitionEvent.name as string,\n          onceHandler\n        );\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(\n        transitionEvent.name as string,\n        onceHandler\n      );\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /* Анимирует сдивг модалки */\n  animateModalOpacity(\n    modalState: ModalsStateEntry | undefined,\n    display: boolean\n  ) {\n    if (modalState?.innerElement) {\n      modalState.innerElement.style.transitionDelay =\n        display && this.props.delayEnter ? `${this.timeout}ms` : \"\";\n      modalState.innerElement.style.opacity = display ? \"1\" : \"0\";\n    }\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(\n    modalState: ModalsStateEntry,\n    forceOpacity: number | null = null\n  ) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(\n          0,\n          Math.min(100, opacity)\n        ).toString();\n      }\n    });\n  }\n\n  render() {\n    const { exitingModal, activeModal, enteringModal } = this.props;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <ModalRootContext.Provider value={this.modalRootContext}>\n        <div\n          vkuiClass={classNames(\n            getClassName(\"ModalRoot\", this.props.platform),\n            {\n              \"ModalRoot--vkapps\":\n                this.props.configProvider?.webviewType === WebviewType.VKAPPS,\n            },\n            \"ModalRoot--desktop\"\n          )}\n        >\n          <div\n            vkuiClass=\"ModalRoot__mask\"\n            ref={this.maskElementRef}\n            onClick={this.props.closeActiveModal}\n          />\n          <div vkuiClass=\"ModalRoot__viewport\">\n            {this.modals.map((Modal: React.ReactElement) => {\n              const modalId = getNavId(Modal.props, warn);\n              if (modalId !== activeModal && modalId !== exitingModal) {\n                return null;\n              }\n\n              const key = `modal-${modalId}`;\n\n              return (\n                <FocusTrap\n                  restoreFocus={false}\n                  onClose={this.props.closeActiveModal}\n                  timeout={this.timeout}\n                  key={key}\n                  vkuiClass={classNames(\"ModalRoot__modal\", {\n                    \"ModalRoot__modal--active\":\n                      !exitingModal &&\n                      !enteringModal &&\n                      modalId === activeModal,\n                    \"ModalRoot__modal--prev\": modalId === exitingModal,\n                    \"ModalRoot__modal--next\":\n                      Boolean(exitingModal) && modalId === activeModal,\n                  })}\n                >\n                  {Modal}\n                </FocusTrap>\n              );\n            })}\n          </div>\n        </div>\n      </ModalRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootDesktop = withContext(\n  withPlatform(\n    withDOM<ModalRootProps>(withModalManager()(ModalRootDesktopComponent))\n  ),\n  ConfigProviderContext,\n  \"configProvider\"\n);\n"],"file":"ModalRootDesktop.js"}