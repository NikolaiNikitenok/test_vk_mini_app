{"version":3,"sources":["../../../src/hooks/useGlobalEventListener.ts"],"names":["useIsomorphicLayoutEffect","useEventListener","useGlobalEventListener","element","event","cb","options","listener","add","remove","Boolean"],"mappings":"AAAA,SAASA,yBAAT;AACA,SAASC,gBAAT;AAgBA,OAAO,SAASC,sBAAT,CAILC,OAJK,EAKLC,KALK,EAMLC,EANK,EAOLC,OAPK,EAQL;AACA,MAAMC,QAAQ,GAAGN,gBAAgB,CAACG,KAAD,EAAQC,EAAR,EAAYC,OAAZ,CAAjC;AACAN,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAIK,EAAE,IAAIF,OAAV,EAAmB;AACjBI,MAAAA,QAAQ,CAACC,GAAT,CAAaL,OAAb;AACD,KAFD,MAEO;AACLI,MAAAA,QAAQ,CAACE,MAAT;AACD;AACF,GANwB,EAMtB,CAACC,OAAO,CAACL,EAAD,CAAR,EAAcK,OAAO,CAACP,OAAD,CAArB,CANsB,CAAzB;AAOD","sourcesContent":["import { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nimport { useEventListener } from \"./useEventListener\";\n\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K,\n  cb: ((ev: GlobalEventHandlersEventMap[K]) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n): void;\nexport function useGlobalEventListener<E extends Event>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n): void;\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap,\n  E extends Event\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K | string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n) {\n  const listener = useEventListener(event, cb, options);\n  useIsomorphicLayoutEffect(() => {\n    if (cb && element) {\n      listener.add(element);\n    } else {\n      listener.remove();\n    }\n  }, [Boolean(cb), Boolean(element)]);\n}\n"],"file":"useGlobalEventListener.js"}