{"version":3,"sources":["../../../src/lib/SSR.tsx"],"names":["React","platform","computeBrowserInfo","DOMContext","getDOM","SSRContext","createContext","userAgent","browserInfo","undefined","SSRWrapper","props","children","contextValue","dom"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAuBC,QAAvB;AACA,SAAsBC,kBAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB;AAQA,OAAO,IAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAN,CAAyC;AACjEL,EAAAA,QAAQ,EAAE,IADuD;AAEjEM,EAAAA,SAAS,EAAE,EAFsD;AAGjEC,EAAAA,WAAW,EAAEC;AAHoD,CAAzC,CAAnB;AAWP,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,CAACC,KAAD,EAAW;AAC9D,MAAMJ,SAAN,GAA2CI,KAA3C,CAAMJ,SAAN;AAAA,MAAiBC,WAAjB,GAA2CG,KAA3C,CAAiBH,WAAjB;AAAA,MAA8BI,QAA9B,GAA2CD,KAA3C,CAA8BC,QAA9B;;AAEA,MAAI,CAACJ,WAAD,IAAgBD,SAApB,EAA+B;AAC7BC,IAAAA,WAAW,GAAGN,kBAAkB,CAACK,SAAD,CAAhC;AACD,GAL6D,CAO9D;;;AACA,MAAMM,YAAY,GAAG;AACnBZ,IAAAA,QAAQ,EAAEA,QAAQ,CAACO,WAAD,CADC;AAEnBA,IAAAA,WAAW,EAAXA,WAFmB;AAGnBD,IAAAA,SAAS,EAATA;AAHmB,GAArB,CAR8D,CAc9D;;AACA,MAAMO,GAAG,GAAGV,MAAM,EAAlB;AAEA,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAES;AAA5B,KACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEC;AAA5B,KAAkCF,QAAlC,CADF,CADF;AAKD,CAtBM","sourcesContent":["import * as React from \"react\";\nimport { PlatformType, platform } from \"./platform\";\nimport { BrowserInfo, computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"../lib/dom\";\n\nexport interface SSRContextInterface {\n  platform: PlatformType | null;\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRContext = React.createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: \"\",\n  browserInfo: undefined,\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRWrapper: React.FC<SSRWrapperProps> = (props) => {\n  let { userAgent, browserInfo, children } = props;\n\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  // TODO: Каждый раз создаётся новый объект для контекста - плохо\n  const contextValue = {\n    platform: platform(browserInfo),\n    browserInfo,\n    userAgent,\n  };\n\n  // TODO: move to state, and update in effect?\n  const dom = getDOM();\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      <DOMContext.Provider value={dom}>{children}</DOMContext.Provider>\n    </SSRContext.Provider>\n  );\n};\n"],"file":"SSR.js"}