{"version":3,"sources":["../../../src/hooks/useEventListener.ts"],"names":["useEventListener","event","_cb","_options","cbRef","React","useRef","current","cb","useCallback","e","detach","noop","remove","add","el","canUseDOM","options","addEventListener","removeEventListener","useEffect"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAqBO,SAASA,gBAAT,CAILC,KAJK,EAKLC,GALK,EAMLC,QANK,EAOgB;AACrB,MAAMC,KAAK,GAAGC,KAAK,CAACC,MAAN,CAAaJ,GAAb,CAAd;AACA,4DAA0B,YAAM;AAC9BE,IAAAA,KAAK,CAACG,OAAN,GAAgBL,GAAhB;AACD,GAFD,EAEG,CAACA,GAAD,CAFH;AAGA,MAAMM,EAAE,GAAGH,KAAK,CAACI,WAAN,CAAkB,UAACC,CAAD;AAAA,WAAON,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACG,OAAN,CAAcG,CAAd,CAAxB;AAAA,GAAlB,EAA4D,EAA5D,CAAX;AAEA,MAAMC,MAAM,GAAGN,KAAK,CAACC,MAAN,CAAaM,WAAb,CAAf;AACA,MAAMC,MAAM,GAAGR,KAAK,CAACI,WAAN,CAAkB,YAAM;AACrCE,IAAAA,MAAM,CAACJ,OAAP;AACAI,IAAAA,MAAM,CAACJ,OAAP,GAAiBK,WAAjB;AACD,GAHc,EAGZ,EAHY,CAAf;AAIA,MAAME,GAAG,GAAGT,KAAK,CAACI,WAAN,CACV,UAACM,EAAD,EAAyC;AACvC,QAAI,CAACC,cAAL,EAAgB;AACd;AACD;;AACDH,IAAAA,MAAM;;AACN,QAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,QAAME,OAAO,mCAAQd,QAAR,CAAb;AACAY,IAAAA,EAAE,CAACG,gBAAH,CAAoBjB,KAApB,EAA2BO,EAA3B,EAA+BS,OAA/B;;AACAN,IAAAA,MAAM,CAACJ,OAAP,GAAiB;AAAA,aAAMQ,EAAE,CAACI,mBAAH,CAAuBlB,KAAvB,EAA8BO,EAA9B,EAAkCS,OAAlC,CAAN;AAAA,KAAjB;AACD,GAZS,EAaV,CAACd,QAAD,EAAWK,EAAX,EAAeP,KAAf,EAAsBY,MAAtB,CAbU,CAAZ;AAeAR,EAAAA,KAAK,CAACe,SAAN,CAAgB;AAAA,WAAMP,MAAN;AAAA,GAAhB,EAA8B,CAACA,MAAD,CAA9B;AAEA,SAAO;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\ninterface EventListenerHandle {\n  add: (el: HTMLElement | Document | Window) => void;\n  remove: () => void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb:\n    | false\n    | null\n    | undefined\n    | ((ev: GlobalEventHandlersEventMap[K]) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<E extends Event>(\n  event: string,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<\n  E extends Event,\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  event: string | K,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback((e) => cbRef.current && cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => {\n    detach.current();\n    detach.current = noop;\n  }, []);\n  const add = React.useCallback(\n    (el: HTMLElement | Document | Window) => {\n      if (!canUseDOM) {\n        return;\n      }\n      remove();\n      if (!el) {\n        return;\n      }\n      const options = { ..._options };\n      el.addEventListener(event, cb, options);\n      detach.current = () => el.removeEventListener(event, cb, options);\n    },\n    [_options, cb, event, remove]\n  );\n  React.useEffect(() => remove, [remove]);\n\n  return { add, remove };\n}\n"],"file":"useEventListener.js"}