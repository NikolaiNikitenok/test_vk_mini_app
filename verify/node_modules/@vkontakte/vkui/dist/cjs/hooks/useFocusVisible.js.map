{"version":3,"sources":["../../../src/hooks/useFocusVisible.ts"],"names":["useFocusVisible","isFocused","setIsFocused","AppRootContext","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEO,SAASA,eAAT,GAA2B;AAChC,kBAAkC,qBAAS,KAAT,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA0B,uBAAWC,8BAAX,CAA1B;AAAA,MAAQC,aAAR,eAAQA,aAAR;;AAEA,MAAMC,OAAO,GAAG,wBACd,UAACC,KAAD,EAAoC;AAClCA,IAAAA,KAAK,CAACC,eAAN;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJa,EAKd,CAACA,YAAD,CALc,CAAhB;AAQA,MAAMM,MAAM,GAAG,wBACb,UAACF,KAAD,EAAoC;AAClCA,IAAAA,KAAK,CAACC,eAAN;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAJY,EAKb,CAACA,YAAD,CALa,CAAf;AAQA,MAAMO,YAAY,GAAGL,aAAa,IAAIH,SAAtC;AAEA,SAAO;AACLQ,IAAAA,YAAY,EAAZA,YADK;AAELJ,IAAAA,OAAO,EAAPA,OAFK;AAGLG,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD","sourcesContent":["import { useContext, useState, useCallback, FocusEvent } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\n\nexport function useFocusVisible() {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused]\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused]\n  );\n\n  const focusVisible = keyboardInput && isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"],"file":"useFocusVisible.js"}