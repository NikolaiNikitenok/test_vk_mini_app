{"version":3,"sources":["../../../src/lib/prefixClass.ts"],"names":["hasTransformable","noConflictCache","legacyCache","prefixSingle","scopedStyle","noConflict","classScopingMode","cache","prefixed","replace","resolved","prefixClass","i","length","separator"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,gBAAgB,GAAG,cAAzB;AACA,IAAMC,eAAoB,GAAG,EAA7B;AACA,IAAMC,WAAgB,GAAG,EAAzB;;AACA,SAASC,YAAT,CAAsBC,WAAtB,EAAmD;AACjD,MAAQC,UAAR,GAAuBC,kCAAvB,CAAQD,UAAR;AACA,MAAME,KAAK,GAAGF,UAAU,GAAGJ,eAAH,GAAqBC,WAA7C;;AACA,MAAIK,KAAK,CAACH,WAAD,CAAT,EAAwB;AACtB,WAAOG,KAAK,CAACH,WAAD,CAAZ;AACD;;AACD,MAAMI,QAAQ,GAAGJ,WAAW,CAACK,OAAZ,CAAoBT,gBAApB,EAAsC,MAAtC,CAAjB;AACA,MAAMU,QAAQ,GACZL,UAAU,IAAID,WAAW,KAAKI,QAA9B,GACIA,QADJ,GAEIA,QAAQ,GAAG,GAAX,GAAiBJ,WAHvB;AAIAG,EAAAA,KAAK,CAACH,WAAD,CAAL,GAAqBM,QAArB;AACA,SAAOA,QAAP;AACD;;AAEM,SAASC,WAAT,CAAqBP,WAArB,EAAqD;AAC1D,MAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,WAAOD,YAAY,CAACC,WAAD,CAAnB;AACD;;AAED,MAAIM,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,WAAW,CAACS,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAME,SAAS,GAAGJ,QAAQ,GAAG,GAAH,GAAS,EAAnC;AAEAA,IAAAA,QAAQ,IAAII,SAAS,GAAGX,YAAY,CAACC,WAAW,CAACQ,CAAD,CAAZ,CAApC;AACD;;AAED,SAAOF,QAAP;AACD","sourcesContent":["import { classScopingMode } from \"./classScopingMode\";\n\nconst hasTransformable = /\\b(?=[A-Z])/g;\nconst noConflictCache: any = {};\nconst legacyCache: any = {};\nfunction prefixSingle(scopedStyle: string): string {\n  const { noConflict } = classScopingMode;\n  const cache = noConflict ? noConflictCache : legacyCache;\n  if (cache[scopedStyle]) {\n    return cache[scopedStyle];\n  }\n  const prefixed = scopedStyle.replace(hasTransformable, \"vkui\");\n  const resolved =\n    noConflict || scopedStyle === prefixed\n      ? prefixed\n      : prefixed + \" \" + scopedStyle;\n  cache[scopedStyle] = resolved;\n  return resolved;\n}\n\nexport function prefixClass(scopedStyle: string | string[]) {\n  if (typeof scopedStyle === \"string\") {\n    return prefixSingle(scopedStyle);\n  }\n\n  let resolved = \"\";\n  for (let i = 0; i < scopedStyle.length; i++) {\n    const separator = resolved ? \" \" : \"\";\n\n    resolved += separator + prefixSingle(scopedStyle[i]);\n  }\n\n  return resolved;\n}\n"],"file":"prefixClass.js"}