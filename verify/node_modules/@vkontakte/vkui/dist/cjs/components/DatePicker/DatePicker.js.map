{"version":3,"sources":["../../../../src/components/DatePicker/DatePicker.tsx"],"names":["DefaultMonths","convertToInputFormat","day","month","year","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","range","start","end","swap","arr","i","Math","min","max","push","reverse","DatePickerCustom","name","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","hasMouse","monthNames","onDateChange","disabled","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","DatePickerNative","defProps","onStringChange","React","useCallback","currentTarget","DatePicker","props","useState","setValue","update","Cmp"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Input from \"../Input/Input\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { HasPlatform } from \"../../types\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport \"./DatePicker.css\";\n\nconst DefaultMonths: string[] = [\n  \"Января\",\n  \"Февраля\",\n  \"Марта\",\n  \"Апреля\",\n  \"Мая\",\n  \"Июня\",\n  \"Июля\",\n  \"Августа\",\n  \"Сентября\",\n  \"Октября\",\n  \"Ноября\",\n  \"Декабря\",\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<\n      React.HTMLAttributes<HTMLDivElement>,\n      \"defaultValue\" | \"min\" | \"max\"\n    >,\n    HasPlatform,\n    AdaptivityProps {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: \"top\" | \"bottom\";\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({\n  day = 0,\n  month = 0,\n  year = 0,\n}: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split(\"-\");\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst range = (start: number, end: number) => {\n  const swap = start > end;\n  const arr = [];\n  for (let i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n  return swap ? arr.reverse() : arr;\n};\n\nconst DatePickerCustom: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  ...restProps\n}) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div vkuiClass=\"DatePicker\" {...restProps}>\n      <div vkuiClass=\"DatePicker__container\">\n        <div vkuiClass=\"DatePicker__day\">\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__month\">\n          <CustomSelect\n            vkuiClass=\"DatePicker__monthSelect\"\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__year\">\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input\n        type=\"hidden\"\n        name={name}\n        value={convertToInputFormat({ day, month, year })}\n      />\n    </div>\n  );\n};\n\nconst DatePickerNative: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}) => {\n  const defProps =\n    day && month && year\n      ? { defaultValue: convertToInputFormat({ day, month, year }) }\n      : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> =\n    React.useCallback(\n      (e) => {\n        onDateChange?.(parseInputDate(e.currentTarget.value));\n      },\n      [onDateChange]\n    );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\nconst DatePicker: React.FC<DatePickerProps> = ({\n  hasMouse,\n  defaultValue,\n  ...props\n}) => {\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(\n    () => ({\n      day: defaultValue?.day || 0,\n      month: defaultValue?.month || 0,\n      year: defaultValue?.year || 0,\n    })\n  );\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props]\n  );\n\n  const Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true,\n});\n"],"file":"DatePicker.js"}