{"version":3,"sources":["../../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["PanelHeaderContext","children","onClose","opened","restProps","document","platform","React","useState","visible","setVisible","closing","viewWidth","isDesktop","ViewWidth","SMALL_TABLET","elementRef","useRef","event","current","contains","target","onAnimationEnd","animationFallback","useEffect","set","clear","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AASO,IAAMA,kBAAqD,GAAG,SAAxDA,kBAAwD,OAK/D;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,yBAFJC,MAEI;AAAA,MAFJA,MAEI,4BAFK,KAEL;AAAA,MADDC,SACC;;AACJ,gBAAqB,kBAArB;AAAA,MAAQC,QAAR,WAAQA,QAAR;;AACA,MAAMC,QAAQ,GAAG,+BAAjB;;AACA,wBAA8BC,KAAK,CAACC,QAAN,CAAeL,MAAf,CAA9B;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,OAAO,GAAGF,OAAO,IAAI,CAACN,MAA5B;;AACA,uBAAsB,oCAAtB;AAAA,MAAQS,SAAR,kBAAQA,SAAR;;AACA,MAAMC,SAAS,GAAGD,SAAS,IAAIE,6BAAUC,YAAzC;AACA,MAAMC,UAAU,GAAGT,KAAK,CAACU,MAAN,CAA6B,IAA7B,CAAnB;AAEA,4DAA0B,YAAM;AAC9Bd,IAAAA,MAAM,IAAIO,UAAU,CAAC,IAAD,CAApB;AACD,GAFD,EAEG,CAACP,MAAD,CAFH,EATI,CAaJ;;AACA,sDACEE,QADF,EAEE,OAFF,EAGEQ,SAAS,IACPV,MADF,IAEE,CAACQ,OAFH,IAGG,UAACO,KAAD,EAAW;AACV,QACEF,UAAU,CAACG,OAAX,IACA,CAACH,UAAU,CAACG,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAFH,EAGE;AACAnB,MAAAA,OAAO;AACR;AACF,GAbL,EAdI,CA8BJ;;AACA,MAAMoB,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMZ,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAvB;;AACA,MAAMa,iBAAiB,GAAG,4BAAWD,cAAX,EAA2B,GAA3B,CAA1B;AACAf,EAAAA,KAAK,CAACiB,SAAN,CACE;AAAA,WAAOb,OAAO,GAAGY,iBAAiB,CAACE,GAAlB,EAAH,GAA6BF,iBAAiB,CAACG,KAAlB,EAA3C;AAAA,GADF,EAEE,CAACH,iBAAD,EAAoBZ,OAApB,CAFF;AAKA,SACE,qCAAC,oBAAD,6BACMP,SADN;AAEE,IAAA,SAAS,EAAE,4BAAW,gCAAa,oBAAb,EAAmCE,QAAnC,CAAX,EAAyD;AAClE,oCAA8BH,MADoC;AAElE,qCAA+BQ,OAFmC;AAGlE,qCAA+BE;AAHmC,KAAzD,CAFb;AAOE,IAAA,QAAQ,EAAC;AAPX,MASE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,GAAG,EAAEG,UAFP;AAGE,IAAA,cAAc,EAAEL,OAAO,GAAGW,cAAH,GAAoBK;AAH7C,KAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8ClB,OAAO,IAAIR,QAAzD,CALF,CATF,EAgBG,CAACY,SAAD,IAAcJ,OAAd,IACC;AAAK,IAAA,OAAO,EAAEP,OAAd;AAAuB,IAAA,SAAS,EAAC;AAAjC,IAjBJ,CADF;AAsBD,CAjEM","sourcesContent":["import * as React from \"react\";\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ViewWidth } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./PanelHeaderContext.css\";\n\nexport interface PanelHeaderContextProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport const PanelHeaderContext: React.FC<PanelHeaderContextProps> = ({\n  children,\n  onClose,\n  opened = false,\n  ...restProps\n}) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const [visible, setVisible] = React.useState(opened);\n  const closing = visible && !opened;\n  const { viewWidth } = useAdaptivity();\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  useIsomorphicLayoutEffect(() => {\n    opened && setVisible(true);\n  }, [opened]);\n\n  // start closing on outer click\n  useGlobalEventListener(\n    document,\n    \"click\",\n    isDesktop &&\n      opened &&\n      !closing &&\n      ((event) => {\n        if (\n          elementRef.current &&\n          !elementRef.current.contains(event.target as Node)\n        ) {\n          onClose();\n        }\n      })\n  );\n\n  // fallback onAnimationEnd when animationend not supported\n  const onAnimationEnd = () => setVisible(false);\n  const animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(\n    () => (closing ? animationFallback.set() : animationFallback.clear()),\n    [animationFallback, closing]\n  );\n\n  return (\n    <FixedLayout\n      {...restProps}\n      vkuiClass={classNames(getClassName(\"PanelHeaderContext\", platform), {\n        \"PanelHeaderContext--opened\": opened,\n        \"PanelHeaderContext--closing\": closing,\n        \"PanelHeaderContext--desktop\": isDesktop,\n      })}\n      vertical=\"top\"\n    >\n      <div\n        vkuiClass=\"PanelHeaderContext__in\"\n        ref={elementRef}\n        onAnimationEnd={closing ? onAnimationEnd : undefined}\n      >\n        <div vkuiClass=\"PanelHeaderContext__content\">{visible && children}</div>\n      </div>\n      {!isDesktop && visible && (\n        <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />\n      )}\n    </FixedLayout>\n  );\n};\n"],"file":"PanelHeaderContext.js"}