{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["ButtonTypography","props","size","sizeY","platform","restProps","isCompact","SizeType","COMPACT","ANDROID","VKCOM","IOS","resolveButtonAppearance","appearance","mode","resolvedAppearance","resolvedMode","undefined","Button","stretched","align","children","before","after","getRootRef","Component","loading","onClick","hasIcons","Boolean","hasNewTokens","React","useContext","ConfigProviderContext","href","defaultProps","stopPropagation"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { HasAlign, HasComponent } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  AdaptivityProps,\n  SizeType,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { PlatformType, IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport \"./Button.css\";\n\nexport interface VKUIButtonProps extends HasAlign {\n  /**\n   Значения `commerce`, `destructive`, `overlay_...` будут упразднены в 5.0.0\n   */\n  mode?:\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"outline\"\n    | \"commerce\"\n    | \"destructive\"\n    | \"overlay_primary\"\n    | \"overlay_secondary\"\n    | \"overlay_outline\";\n  appearance?: \"accent\" | \"positive\" | \"negative\" | \"neutral\" | \"overlay\";\n  size?: \"s\" | \"m\" | \"l\";\n  stretched?: boolean;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport interface ButtonProps\n  extends Omit<TappableProps, \"size\">,\n    VKUIButtonProps {}\n\ninterface ButtonTypographyProps extends HasComponent {\n  size: ButtonProps[\"size\"];\n  platform: PlatformType | undefined;\n  sizeY: AdaptivityProps[\"sizeY\"];\n  children?: ButtonProps[\"children\"];\n}\n\nconst ButtonTypography: React.FC<ButtonTypographyProps> = (\n  props: ButtonTypographyProps\n) => {\n  const { size, sizeY, platform, ...restProps } = props;\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return <Text weight=\"medium\" {...restProps} />;\n      }\n      if (platform === ANDROID) {\n        return <Headline weight=\"medium\" {...restProps} />;\n      }\n      return <Title level=\"3\" weight=\"2\" {...restProps} />;\n    case \"m\":\n      if (isCompact) {\n        return (\n          <Subhead weight={platform === VKCOM ? \"3\" : \"2\"} {...restProps} />\n        );\n      }\n\n      return <Text weight=\"medium\" {...restProps} />;\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"2\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption weight=\"2\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"2\" {...restProps} />;\n  }\n};\n\ninterface ResolvedButtonAppearance {\n  resolvedAppearance: ButtonProps[\"appearance\"];\n  resolvedMode: ButtonProps[\"mode\"];\n}\n\nfunction resolveButtonAppearance(\n  appearance: ButtonProps[\"appearance\"],\n  mode: ButtonProps[\"mode\"]\n): ResolvedButtonAppearance {\n  let resolvedAppearance: ButtonProps[\"appearance\"] = appearance;\n  let resolvedMode: ButtonProps[\"mode\"] = mode;\n\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n\n  return {\n    resolvedAppearance,\n    resolvedMode,\n  };\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    mode,\n    appearance,\n    stretched,\n    align,\n    children,\n    before,\n    after,\n    getRootRef,\n    sizeY,\n    Component = \"button\",\n    loading,\n    onClick,\n    ...restProps\n  } = props;\n  const hasIcons = Boolean(before || after);\n  const { resolvedMode, resolvedAppearance } = resolveButtonAppearance(\n    appearance,\n    mode\n  );\n  const hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? \"a\" : Component}\n      onClick={loading ? undefined : onClick}\n      focusVisibleMode=\"outside\"\n      vkuiClass={classNames(\n        \"Button\",\n        `Button--sz-${size}`,\n        `Button--lvl-${resolvedMode}`,\n        `Button--clr-${resolvedAppearance}`,\n        `Button--aln-${align}`,\n        `Button--sizeY-${sizeY}`,\n        {\n          [\"Button--stretched\"]: stretched,\n          [\"Button--with-icon\"]: hasIcons,\n          [\"Button--singleIcon\"]: Boolean(\n            (!children && !after && before) || (!children && after && !before)\n          ),\n        }\n      )}\n      getRootRef={getRootRef}\n      hoverMode={hasNewTokens ? \"Button--hover\" : \"background\"}\n      activeMode={hasNewTokens ? \"Button--active\" : \"opacity\"}\n    >\n      {loading && <Spinner size=\"small\" vkuiClass=\"Button__spinner\" />}\n      <span vkuiClass=\"Button__in\">\n        {before && <span vkuiClass=\"Button__before\">{before}</span>}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n            Component=\"span\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && <span vkuiClass=\"Button__after\">{after}</span>}\n      </span>\n    </Tappable>\n  );\n};\n\nButton.defaultProps = {\n  mode: \"primary\",\n  align: \"center\",\n  size: \"s\",\n  stretched: false,\n  stopPropagation: true,\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"],"file":"Button.js"}