{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"names":["calcStrokeDashOffset","value","radius","progress","Math","PI","PullToRefreshSpinner","on","size","strokeWidth","style","ariaLabel","dasharray","circleCenter","dashoffset","undefined","width","height","transformOrigin","React","memo"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA,SAASA,oBAAT,CAA8BC,KAA9B,EAA6CC,MAA7C,EAA6D;AAC3D,MAAMC,QAAQ,GAAGF,KAAK,GAAG,GAAzB;AACA,SAAO,IAAIG,IAAI,CAACC,EAAT,GAAcH,MAAd,IAAwB,IAAIC,QAA5B,CAAP;AACD;;AAWD,IAAMG,oBAEL,GAAG,SAFEA,oBAEF,OAO6B;AAAA,qBAN/BC,EAM+B;AAAA,MAN/BA,EAM+B,wBAN1B,IAM0B;AAAA,uBAL/BC,IAK+B;AAAA,MAL/BA,IAK+B,0BALxB,EAKwB;AAAA,8BAJ/BC,WAI+B;AAAA,MAJ/BA,WAI+B,iCAJjB,GAIiB;AAAA,MAH/BC,KAG+B,QAH/BA,KAG+B;AAAA,2BAF/BP,QAE+B;AAAA,MAF/BA,QAE+B,8BAFpB,CAEoB;AAAA,4BAD/B,YAC+B;AAAA,MADjBQ,SACiB,+BADL,0BACK;AAC/B,MAAMT,MAAM,GAAG,MAAMM,IAAN,GAAa,MAAMC,WAAlC;AACA,MAAMG,SAAS,GAAG,IAAIR,IAAI,CAACC,EAAT,GAAcH,MAAhC;AACA,MAAMW,YAAY,GAAG,MAAML,IAA3B;AAEA,MAAMM,UAAU,GAAGd,oBAAoB,CAACO,EAAE,GAAG,EAAH,GAAQJ,QAAX,EAAqBD,MAArB,CAAvC;AAEA,SACE;AACE,IAAA,SAAS,EAAE,4BAAW,wBAAX,EAAqC;AAC9C,oCAA8BK;AADgB,KAArC,CADb;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,kBAAYH,EAAE,GAAGI,SAAH,GAAeI;AAL/B,KAOE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAC,6BAFZ;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAER,IADF;AAELS,MAAAA,MAAM,EAAET;AAFH,KAHT;AAOE,IAAA,OAAO,gBAASA,IAAT,cAAiBA,IAAjB,CAPT;AAQE,IAAA,KAAK,EAAC;AARR,KAUE;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAER,IADF;AAELS,MAAAA,MAAM,EAAET,IAFH;AAGLU,MAAAA,eAAe,YAAKL,YAAL,gBAAuBA,YAAvB;AAHV;AADT,KAOE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,eAAe,EAAED,SAHnB;AAIE,IAAA,gBAAgB,EAAEE,UAJpB;AAKE,IAAA,WAAW,EAAEL,WALf;AAME,IAAA,aAAa,EAAC,OANhB;AAOE,IAAA,EAAE,EAAEI,YAPN;AAQE,IAAA,EAAE,EAAEA,YARN;AASE,IAAA,CAAC,EAAEX;AATL,IAPF,CAVF,CAPF,CADF;AAwCD,CAxDD,C,CA0DA;;;4BACeiB,KAAK,CAACC,IAAN,CAAWd,oBAAX,C","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./PullToRefresh.css\";\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n  \"aria-label\"?: string;\n}\n\nconst PullToRefreshSpinner: React.FunctionComponent<\n  PullToRefreshSpinnerProps\n> = ({\n  on = true,\n  size = 24,\n  strokeWidth = 2.5,\n  style,\n  progress = 0,\n  \"aria-label\": ariaLabel = \"Пожалуйста, подождите...\",\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      vkuiClass={classNames(\"PullToRefresh__spinner\", {\n        \"PullToRefresh__spinner--on\": on,\n      })}\n      style={style}\n      aria-label={on ? ariaLabel : undefined}\n    >\n      <svg\n        role=\"presentation\"\n        vkuiClass=\"PullToRefresh__spinner-self\"\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            vkuiClass=\"PullToRefresh__spinner-path\"\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default React.memo(PullToRefreshSpinner);\n"],"file":"PullToRefreshSpinner.js"}