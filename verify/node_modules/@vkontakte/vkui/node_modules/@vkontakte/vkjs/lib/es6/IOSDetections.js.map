{"version":3,"sources":["../../src/IOSDetections.ts"],"names":["canUseDOM","IPHONE_SAFARI_BOTTOM_BAR","IPHONE_X_SAFARI_BOTTOM_BAR","IPHONE_KEYBOARD_REJECT_OFFSET","IOS_NO_KEYBOARD_ALLOWED_OFFSET","detectIOS","ua","navigator","userAgent","toLowerCase","isIPadOS","checkIPadOS","isIPad","indexOf","isIPhone","search","isIOS","iosVersion","match","iosMajor","iosMinor","split","isScrollBasedViewport","isWKWebView","checkWKWebView","isIPhoneX","screen","width","height","window","devicePixelRatio","isIOSChrome","isLandscapePhone","Math","abs","orientation","webkit","messageHandlers","lte9","test","String","HTMLElement","idb","indexedDB","standalone","statusbar","visible","notIOS","macOS"],"mappings":"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","sourcesContent":["import { canUseDOM } from './dom';\n\nexport const IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport const IPHONE_X_SAFARI_BOTTOM_BAR = 85;\n\nexport const IPHONE_KEYBOARD_REJECT_OFFSET = 180;\n\n// 44 iPhone, 55 iPad, iPad Pro 69\nexport const IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\n\nexport function detectIOS(ua?: string) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent.toLowerCase() : '';\n  }\n\n  const isIPadOS = checkIPadOS(ua);\n  const isIPad = isIPadOS || ua.indexOf('ipad') !== -1;\n  const isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  const isIOS = isIPhone || isIPad;\n\n  let iosVersion = isIOS && ua.match(/OS ([\\d_]+) like Mac OS X/i);\n  let iosMajor = 0;\n  let iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split('_');\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n\n  const isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  const isWKWebView = isIOS && checkWKWebView(ua);\n\n  let isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX = isIOS && screen.width === 375 &&\n      screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  const isIOSChrome = ua.search(/crios/i) !== -1;\n\n  return {\n    isIPad, isIPhone, isIOS, isIPadOS,\n    iosMajor, iosMinor,\n    isWKWebView, isScrollBasedViewport,\n    isIPhoneX,\n    isIOSChrome,\n  };\n}\n\nconst {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n} = detectIOS();\n\nexport {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n};\n\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation as number) === 90 && !isIPad;\n}\n\n// Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\nfunction checkWKWebView(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const webkit = (window as any).webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  const lte9 = /constructor/i.test(String(window.HTMLElement));\n  const idb = !!window.indexedDB;\n\n  if (\n    ua.indexOf('safari') !== -1 &&\n    ua.indexOf('version') !== -1 &&\n    !(navigator as any).standalone\n  ) {\n    // Safari (WKWebView/Nitro since 6+)\n  } else if ((!idb && lte9) || !(window.statusbar && window.statusbar.visible)) {\n    // UIWebView\n  } else if (!lte9 || idb) {\n    // WKWebView\n    return true;\n  }\n\n  return false;\n}\n\nexport function checkIPadOS(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const notIOS = !/ipad|iphone|ipod/.test(ua);\n  const macOS = /mac os/.test(ua);\n\n  if (macOS && notIOS && typeof (navigator as any).standalone === 'boolean') {\n    return true;\n  }\n\n  return false;\n}\n"],"file":"IOSDetections.js"}