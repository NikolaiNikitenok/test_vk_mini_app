{"version":3,"sources":["../src/async.ts"],"names":["asyncImportLoader","asyncImport","attempts","Promise","resolve","reject","then","error","setTimeout"],"mappings":";;;;;;;AAAA;;;;;;;;;;;AAWO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAIC,WAAJ,EAAiE;AAAA,MAA9BC,QAA8B,uEAAnB,EAAmB;AAChG,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,IAAAA,WAAW,GACRK,IADH,CACQF,OADR,WAES,UAACG,KAAD,EAAW;AAChBC,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIN,QAAQ,KAAK,CAAjB,EAAoB;AAClBG,UAAAA,MAAM,CAACE,KAAD,CAAN;AACA;AACD;;AACDP,QAAAA,iBAAiB,CAACC,WAAD,EAAcC,QAAQ,GAAG,CAAzB,CAAjB,CAA6CI,IAA7C,CAAkDF,OAAlD,EAA2DC,MAA3D;AACD,OANS,EAMP,IANO,CAAV;AAOD,KAVH;AAWD,GAZM,CAAP;AAaD,CAdM","sourcesContent":["/**\n * Loads async import with retries. It can be useful for bad internet connection\n *\n * @example\n * const HeaderLazyComponent = React.lazy(() => asyncImportLoader(() => import('../components/Header/Header')));\n *\n * @example\n * asyncImportLoader(() => import('some-module'), 20).then((someModule) => {\n *   someModule.init();\n * });\n */\nexport const asyncImportLoader = <T>(asyncImport: () => Promise<T>, attempts = 10): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    asyncImport()\n      .then(resolve)\n      .catch((error) => {\n        setTimeout(() => {\n          if (attempts === 0) {\n            reject(error);\n            return;\n          }\n          asyncImportLoader(asyncImport, attempts - 1).then(resolve, reject);\n        }, 1000);\n      });\n  });\n};\n"],"file":"async.js"}