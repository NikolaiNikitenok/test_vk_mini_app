{"version":3,"sources":["../src/functions.ts"],"names":["noop","throttle","fn","threshold","scope","window","last","deferTimer","args","context","now","Date","clearTimeout","setTimeout","apply","debounce","delay","timeout","later","a"],"mappings":";;;;;;;;;AAAO,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB,C,CAAuB;;;;;AAEvB,SAASC,QAAT,CAAmCC,EAAnC,EAAgG;AAAA,MAAhCC,SAAgC,uEAApB,EAAoB;AAAA,MAAhBC,KAAgB,uEAARC,MAAQ;AACrG,MAAIC,IAAJ;AACA,MAAIC,UAAJ;AAEA,SAAO,YAAqB;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAC1B,QAAMC,OAAO,GAAGL,KAAhB;AACA,QAAMM,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AAEA,QAAIJ,IAAI,IAAII,GAAG,GAAGJ,IAAI,GAAGH,SAAzB,EAAoC;AAClCS,MAAAA,YAAY,CAACL,UAAD,CAAZ;AACAA,MAAAA,UAAU,GAAGM,UAAU,CAAC,YAAM;AAC5BP,QAAAA,IAAI,GAAGI,GAAP;AACAR,QAAAA,EAAE,CAACY,KAAH,CAASL,OAAT,EAAkBD,IAAlB;AACD,OAHsB,EAGpBL,SAHoB,CAAvB;AAID,KAND,MAMO;AACLG,MAAAA,IAAI,GAAGI,GAAP;AACAR,MAAAA,EAAE,CAACY,KAAH,CAASL,OAAT,EAAkBD,IAAlB;AACD;AACF,GAdD;AAeD;;AAEM,SAASO,QAAT,CAAmCb,EAAnC,EAAgEc,KAAhE,EAAiG;AAAA,MAAlBP,OAAkB,uEAARJ,MAAQ;AACtG,MAAIY,OAAJ;AACA,MAAIT,IAAJ;;AAEA,MAAMU,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMhB,EAAE,CAACY,KAAH,CAASL,OAAT,EAAkBD,IAAlB,CAAN;AAAA,GAAd;;AAEA,SAAO,YAAa;AAAA,uCAATW,CAAS;AAATA,MAAAA,CAAS;AAAA;;AAClBX,IAAAA,IAAI,GAAGW,CAAP;AACAP,IAAAA,YAAY,CAACK,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGJ,UAAU,CAACK,KAAD,EAAQF,KAAR,CAApB;AACD,GAJD;AAKD","sourcesContent":["export const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport function throttle<T extends any[]>(fn: (...args: T) => unknown, threshold = 50, scope = window) {\n  let last: number;\n  let deferTimer: ReturnType<typeof setTimeout>;\n\n  return function(...args: T) {\n    const context = scope;\n    const now = Date.now();\n\n    if (last && now < last + threshold) {\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(() => {\n        last = now;\n        fn.apply(context, args);\n      }, threshold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}\n\nexport function debounce<T extends any[]>(fn: (...args: T) => unknown, delay: number, context = window) {\n  let timeout: ReturnType<typeof setTimeout>;\n  let args: T;\n\n  const later = () => fn.apply(context, args);\n\n  return (...a: T) => {\n    args = a;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n  };\n}\n"],"file":"functions.js"}