function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { createContext, useMemo } from 'react';
export var IconSettingsContext = /*#__PURE__*/createContext({});
export var IconSettingsProvider = function IconSettingsProvider(_ref) {
  var children = _ref.children,
      settings = _objectWithoutProperties(_ref, ["children"]);

  var contextValue = useMemo(function () {
    return settings;
  }, [settings.classPrefix, settings.globalClasses]);
  return /*#__PURE__*/React.createElement(IconSettingsContext.Provider, {
    value: contextValue
  }, children);
};
//# sourceMappingURL=IconSettings.js.map