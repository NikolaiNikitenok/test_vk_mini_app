import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'error_circle_fill_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="error_circle_fill_16"><path d="M8 16c-4.416 0-8-3.584-8-8s3.584-8 8-8 8 3.584 8 8-3.584 8-8 8zm0-7.059c.468 0 .847-.38.847-.847V4.612a.847.847 0 10-1.694 0v3.482c0 .468.38.847.847.847zm0 3.294a.941.941 0 100-1.882.941.941 0 000 1.882z" fill="#e64646" /><path d="M8 8.941c.468 0 .847-.38.847-.847V4.612a.847.847 0 10-1.694 0v3.482c0 .468.38.847.847.847zm0 3.294a.941.941 0 100-1.882.941.941 0 000 1.882z" fill="#fff" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16ErrorCircleFill = function Icon16ErrorCircleFill(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16ErrorCircleFill.mountIcon = mountIcon;
export default Icon16ErrorCircleFill;
//# sourceMappingURL=error_circle_fill.js.map