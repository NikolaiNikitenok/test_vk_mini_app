import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'attach_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="attach_16"><clipPath id="attach_16_a"><path d="M0 0h16v16H0z" /></clipPath><g clip-path="url(#attach_16_a)"><path clip-rule="evenodd" d="M8.568 1.093a3.795 3.795 0 015.329 0 3.702 3.702 0 010 5.273l-6.018 5.953a2.29 2.29 0 01-3.21 0 2.226 2.226 0 010-3.17l2.998-2.96a.767.767 0 011.076 0 .746.746 0 01-.001 1.064l-2.996 2.959a.734.734 0 000 1.043.755.755 0 001.056 0l6.018-5.953a2.21 2.21 0 000-3.146 2.261 2.261 0 00-3.176 0L3.62 8.12a3.731 3.731 0 000 5.288 3.775 3.775 0 005.3.002l2.849-2.854a.767.767 0 011.076-.007c.299.292.302.768.007 1.064l-2.853 2.858a5.31 5.31 0 01-7.455 0 5.224 5.224 0 010-7.414z" fill="currentColor" fill-rule="evenodd" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16Attach = function Icon16Attach(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16Attach.mountIcon = mountIcon;
export default Icon16Attach;
//# sourceMappingURL=attach.js.map