import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 28 28';
var id = 'live_add_outline_28';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="live_add_outline_28"><g fill="currentColor"><path d="M14 16a2 2 0 100-4 2 2 0 000 4z" /><g clip-rule="evenodd" fill-rule="evenodd"><path d="M27 21a6 6 0 11-12 0 6 6 0 0112 0zm-6-4a1 1 0 011 1v2h2a1 1 0 110 2h-2v2a1 1 0 11-2 0v-2h-2a1 1 0 110-2h2v-2a1 1 0 011-1z" /><path d="M14 9a5 5 0 00-1.588 9.743 1 1 0 11-.634 1.897 7 7 0 118.861-8.863 1 1 0 01-1.896.634A5.002 5.002 0 0014 9z" /><path d="M14 4C8.477 4 4 8.477 4 14c0 5.188 3.95 9.454 9.007 9.951a1 1 0 11-.196 1.99C6.741 25.345 2 20.228 2 14 2 7.373 7.373 2 14 2c6.227 0 11.345 4.742 11.942 10.812a1 1 0 11-1.99.196C23.453 7.95 19.188 4 14 4z" /></g></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28LiveAddOutline = function Icon28LiveAddOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28LiveAddOutline.mountIcon = mountIcon;
export default Icon28LiveAddOutline;
//# sourceMappingURL=live_add_outline.js.map