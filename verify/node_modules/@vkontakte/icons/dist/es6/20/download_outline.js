import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'download_outline_20';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" id="download_outline_20"><g fill="currentColor"><path clip-rule="evenodd" d="M4 17.75a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75a.75.75 0 01-.75-.75z" fill-rule="evenodd" /><path d="M10.75 2.726c0-.401-.336-.726-.75-.726a.738.738 0 00-.75.726v9.722l-3.97-3.97a.75.75 0 00-1.06 1.06l5.245 5.246a.75.75 0 001.06 0l5.256-5.256a.75.75 0 00-1.06-1.061l-3.972 3.972z" /></g></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20DownloadOutline = function Icon20DownloadOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20DownloadOutline.mountIcon = mountIcon;
export default Icon20DownloadOutline;
//# sourceMappingURL=download_outline.js.map