{"version":3,"file":"index.es.js","sources":["../src/promisifySend.ts","../src/bridge.ts","../src/custom-event.ts","../src/types/data.ts","../src/applyMiddleware.ts","../src/index.ts"],"sourcesContent":["import {\n  VKBridgeSubscribeHandler,\n  AnyRequestMethodName,\n  RequestProps,\n  RequestIdProp,\n  ReceiveData,\n  AnyReceiveMethodName,\n} from './types/bridge';\n\n/**\n * Creates counter interface.\n */\nfunction createCounter() {\n  return {\n    current: 0,\n    next() {\n      return ++this.current;\n    },\n  };\n}\n\n/**\n * Creates interface for resolving request promises by request id's (or not).\n */\nfunction createRequestResolver() {\n  /**\n   * @prop resolve Resolve function.\n   * @prop reject Reject function.\n   */\n  type PromiseController = {\n    resolve: (value: any) => any;\n    reject: (reason: any) => any;\n  };\n\n  const counter = createCounter();\n  const promiseControllers: Record<number | string, PromiseController | null> = {};\n\n  return {\n    /**\n     * Adds new controller with resolve/reject methods.\n     *\n     * @param controller Object with `resolve` and `reject` functions\n     * @param customId Custom `request_id`\n     * @returns New request id of the added controller.\n     */\n    add(controller: PromiseController, customId?: number | string): number | string {\n      const id = customId != null ? customId : counter.next();\n\n      promiseControllers[id] = controller;\n\n      return id;\n    },\n\n    /**\n     * Resolves/rejects an added promise by request id and the `isSuccess`\n     * predicate.\n     *\n     * @param requestId Request ID.\n     * @param data Data to pass to the resolve- or reject-function.\n     * @param isSuccess Predicate to select the desired function.\n     */\n    resolve<T>(requestId: number | string, data: T, isSuccess: (data: T) => boolean) {\n      const requestPromise = promiseControllers[requestId];\n\n      if (requestPromise) {\n        if (isSuccess(data)) {\n          requestPromise.resolve(data);\n        } else {\n          requestPromise.reject(data);\n        }\n\n        promiseControllers[requestId] = null;\n      }\n    },\n  };\n}\n\n/**\n * Returns send function that returns promises.\n *\n * @param sendEvent Send event function.\n * @param subscribe Subscribe event function.\n * @returns Send function which returns the Promise object.\n */\nexport function promisifySend(\n  sendEvent: <K extends AnyRequestMethodName>(method: K, props?: RequestProps<K> & RequestIdProp) => void,\n  subscribe: (fn: VKBridgeSubscribeHandler) => void\n) {\n  const requestResolver = createRequestResolver();\n\n  // Subscribe to receive a data\n  subscribe((event) => {\n    if (!event.detail || !event.detail.data || typeof event.detail.data !== 'object') {\n      return;\n    }\n\n    // There is no request_id in receive-only events, so we check its existence.\n    if ('request_id' in event.detail.data) {\n      const { request_id: requestId, ...data } = event.detail.data;\n\n      if (requestId) {\n        requestResolver.resolve(requestId, data, (data) => !('error_type' in data));\n      }\n    }\n  });\n\n  return function promisifiedSend<K extends AnyRequestMethodName>(\n    method: K,\n    props: RequestProps<K> & RequestIdProp = {} as RequestProps<K> & RequestIdProp\n  ): Promise<K extends AnyReceiveMethodName ? ReceiveData<K> : void> {\n    return new Promise((resolve, reject) => {\n      const requestId = requestResolver.add({ resolve, reject }, props.request_id);\n\n      sendEvent(method, {\n        ...props,\n        request_id: requestId,\n      });\n    });\n  };\n}\n","import { promisifySend } from './promisifySend';\nimport { VKBridge, VKBridgeSubscribeHandler, AnyRequestMethodName, RequestProps, RequestIdProp } from './types/bridge';\n\n/** Is the client side runtime environment */\nexport const IS_CLIENT_SIDE = typeof window !== 'undefined';\n\n/** Is the runtime environment an Android app */\nexport const IS_ANDROID_WEBVIEW = Boolean(IS_CLIENT_SIDE && (window as any).AndroidBridge);\n\n/** Is the runtime environment an iOS app */\nexport const IS_IOS_WEBVIEW = Boolean(\n  IS_CLIENT_SIDE &&\n    (window as any).webkit &&\n    (window as any).webkit.messageHandlers &&\n    (window as any).webkit.messageHandlers.VKWebAppClose\n);\n\n/** Is the runtime environment a browser */\nexport const IS_WEB = IS_CLIENT_SIDE && !IS_ANDROID_WEBVIEW && !IS_IOS_WEBVIEW;\n\n/** Is the runtime environment m.vk.com */\nexport const IS_MVK = IS_WEB && /(^\\?|&)vk_platform=mobile_web(&|$)/.test(location.search);\n\n/** Is the runtime environment vk.com */\nexport const IS_DESKTOP_VK = IS_WEB && !IS_MVK;\n\n/** Type of subscribe event */\nexport const EVENT_TYPE = IS_WEB ? 'message' : 'VKWebAppEvent';\n\n/** Methods supported on the desktop */\nexport const DESKTOP_METHODS = [\n  'VKWebAppInit',\n  'VKWebAppGetCommunityAuthToken',\n  'VKWebAppAddToCommunity',\n  'VKWebAppAddToHomeScreenInfo',\n  'VKWebAppClose',\n  'VKWebAppCopyText',\n  'VKWebAppCreateHash',\n  'VKWebAppGetUserInfo',\n  'VKWebAppSetLocation',\n  'VKWebAppSendToClient',\n  'VKWebAppGetClientVersion',\n  'VKWebAppGetPhoneNumber',\n  'VKWebAppGetEmail',\n  'VKWebAppGetGroupInfo',\n  'VKWebAppGetGeodata',\n  'VKWebAppGetCommunityToken',\n  'VKWebAppGetConfig',\n  'VKWebAppGetLaunchParams',\n  'VKWebAppSetTitle',\n  'VKWebAppGetAuthToken',\n  'VKWebAppCallAPIMethod',\n  'VKWebAppJoinGroup',\n  'VKWebAppLeaveGroup',\n  'VKWebAppAllowMessagesFromGroup',\n  'VKWebAppDenyNotifications',\n  'VKWebAppAllowNotifications',\n  'VKWebAppOpenPayForm',\n  'VKWebAppOpenApp',\n  'VKWebAppShare',\n  'VKWebAppShowWallPostBox',\n  'VKWebAppScroll',\n  'VKWebAppShowOrderBox',\n  'VKWebAppShowLeaderBoardBox',\n  'VKWebAppShowInviteBox',\n  'VKWebAppShowRequestBox',\n  'VKWebAppAddToFavorites',\n  'VKWebAppShowCommunityWidgetPreviewBox',\n  'VKWebAppShowStoryBox',\n  'VKWebAppStorageGet',\n  'VKWebAppStorageGetKeys',\n  'VKWebAppStorageSet',\n  'VKWebAppFlashGetInfo',\n  'VKWebAppSubscribeStoryApp',\n  'VKWebAppOpenWallPost',\n  'VKWebAppCheckAllowedScopes',\n  'VKWebAppShowNativeAds',\n  'VKWebAppRetargetingPixel',\n  'VKWebAppConversionHit',\n\n  // Desktop web specific events\n  ...(IS_DESKTOP_VK ? ['VKWebAppResizeWindow', 'VKWebAppAddToMenu', 'VKWebAppShowSubscriptionBox', 'VKWebAppShowInstallPushBox', 'VKWebAppGetFriends'] : ['VKWebAppShowImages']),\n];\n\n/** Android VK Bridge interface. */\nconst androidBridge: Record<string, (serializedData: string) => void> | undefined = IS_CLIENT_SIDE\n  ? (window as any).AndroidBridge\n  : undefined;\n\n/** iOS VK Bridge interface. */\nconst iosBridge: Record<string, { postMessage?: (data: any) => void }> | undefined = IS_IOS_WEBVIEW\n  ? (window as any).webkit.messageHandlers\n  : undefined;\n\nlet webSdkHandlers: string[] | undefined;\n\n/**\n * Creates a VK Bridge API that holds functions for interact with runtime\n * environment.\n *\n * @param version Version of the package\n */\nexport function createVKBridge(version: string): VKBridge {\n  /** Current frame id. */\n  let webFrameId: string | undefined = undefined;\n\n  /** List of functions that subscribed on events. */\n  const subscribers: VKBridgeSubscribeHandler[] = [];\n\n  /**\n   * Sends an event to the runtime env. In the case of Android/iOS application\n   * env is the application itself. In the case of the browser, the parent\n   * frame in which the event handlers is located.\n   *\n   * @param method The method (event) name to send\n   * @param [props] Method properties\n   */\n  function send<K extends AnyRequestMethodName>(method: K, props?: RequestProps<K> & RequestIdProp) {\n    // Sending data through Android bridge\n    if (androidBridge && androidBridge[method]) {\n      androidBridge[method](JSON.stringify(props));\n    }\n\n    // Sending data through iOS bridge\n    else if (iosBridge && iosBridge[method] && typeof iosBridge[method].postMessage === 'function') {\n      iosBridge[method].postMessage!(props);\n    }\n\n    // Sending data through web bridge\n    else if (IS_WEB) {\n      parent.postMessage(\n        {\n          handler: method,\n          params: props,\n          type: 'vk-connect',\n          webFrameId,\n          connectVersion: version,\n        },\n        '*'\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener. It will be called any time a data is received.\n   *\n   * @param listener A callback to be invoked on every event receive.\n   */\n  function subscribe(listener: VKBridgeSubscribeHandler) {\n    subscribers.push(listener);\n  }\n\n  /**\n   * Removes an event listener which has been subscribed for event listening.\n   *\n   * @param listener A callback to unsubscribe.\n   */\n  function unsubscribe(listener: VKBridgeSubscribeHandler) {\n    const index = subscribers.indexOf(listener);\n\n    if (index > -1) {\n      subscribers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if a method is supported on runtime platform.\n   *\n   * @param method Method (event) name to check.\n   * @returns Result of checking.\n   */\n  function supports<K extends AnyRequestMethodName>(method: K): boolean {\n    if (IS_ANDROID_WEBVIEW) {\n      // Android support check\n      return !!(androidBridge && typeof androidBridge[method] === 'function');\n    } else if (IS_IOS_WEBVIEW) {\n      // iOS support check\n      return !!(iosBridge && iosBridge[method] && typeof iosBridge[method].postMessage === 'function');\n    } else if (IS_WEB) {\n      // Web support check\n      return DESKTOP_METHODS.indexOf(method) > -1;\n      // if (!webSdkHandlers) {\n      //   console.error('You should call bridge.send(\"VKWebAppInit\") first');\n      //   return false;\n      // }\n      // return webSdkHandlers.includes(method);\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks whether the runtime is a WebView.\n   *\n   * @returns Result of checking.\n   */\n  function isWebView(): boolean {\n    return IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW;\n  }\n\n  /**\n   * Checks whether the runtime is an iframe.\n   *\n   * @returns Result of checking.\n   */\n  function isIframe(): boolean {\n    return IS_WEB && window.parent !== window;\n  }\n\n  /**\n   * Checks whether the runtime is embedded.\n   *\n   * @returns Result of checking.\n   */\n  function isEmbedded(): boolean {\n    return isWebView() || isIframe();\n  }\n\n  /**\n   * Checks whether the runtime is standalone.\n   *\n   * @returns Result of checking.\n   */\n  function isStandalone(): boolean {\n    return !isEmbedded();\n  }\n\n  // Subscribes to listening messages from a runtime for calling each\n  // subscribed event listener.\n  if (typeof window !== 'undefined' && 'addEventListener' in window) {\n    window.addEventListener(EVENT_TYPE, (event: any) => {\n      if (IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW) {\n        // If it's webview\n        return [...subscribers].map((fn) => fn.call(null, event));\n      } else if (IS_WEB && event && event.data) {\n        // If it's web\n        const { type, data, frameId } = event.data;\n        if (type && type === 'SetSupportedHandlers') {\n          webSdkHandlers = data.supportedHandlers;\n        } else if (type && type === 'VKWebAppSettings') {\n          webFrameId = frameId;\n        } else {\n          [...subscribers].map((fn) => fn({ detail: { type, data } }));\n        }\n      }\n    });\n  }\n\n  /**\n   * Enhanced send functions for the ability to receive response data in\n   * the Promise object.\n   */\n  const sendPromise = promisifySend(send, subscribe);\n\n  return {\n    send: sendPromise,\n    sendPromise,\n    subscribe,\n    unsubscribe,\n    supports,\n    isWebView,\n    isIframe,\n    isEmbedded,\n    isStandalone,\n  };\n}\n","/**\n * Creates the CustomEvent polyfill. VK apps use the CustomEvent for transfer\n * data.\n */\nexport function createCustomEventPolyfill() {\n  function CustomEvent<T>(typeArg: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T> {\n    const params = eventInitDict || { bubbles: false, cancelable: false, detail: undefined };\n\n    const evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(typeArg, !!params.bubbles, !!params.cancelable, params.detail);\n\n    return evt;\n  }\n\n  CustomEvent.prototype = Event.prototype;\n\n  return CustomEvent;\n}\n","/** Type of the Personal Card */\nexport type PersonalCardType = 'phone' | 'email' | 'address';\n\n/** Access Permissions for User Token */\nexport type PersonalAuthScope =\n  | 'friends'\n  | 'photos'\n  | 'video'\n  | 'stories'\n  | 'pages'\n  | 'status'\n  | 'notes'\n  | 'wall'\n  | 'docs'\n  | 'groups'\n  | 'stats'\n  | 'market';\n\n/** Access Permissions for Community Token */\nexport type CommunityAuthScope =\n  | 'stories'\n  | 'photos'\n  | 'app_widget'\n  | 'messages'\n  | 'docs'\n  | 'manage';\n\n/**\n * Type of VKWebAppGetFriendsResult user\n */\nexport type UserGetFriendsFriend = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n}\n\n/**\n * Type of user info object\n */\nexport type UserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User's city */\n  city: {\n    /** City ID */\n    id: number;\n    /** City title */\n    title: string;\n  };\n  /** User's country */\n  country: {\n    /** Country ID */\n    id: number;\n    /** Country  title */\n    title: string;\n  };\n  /**\n   * Date of Birth. It is returned in the format D.M.YYYY or D.M (if the\n   * year of birth is hidden). If the date of birth is hidden entirely,\n   * the field is not in the response.\n   */\n  bdate?: string;\n  /**\n   * URL of the square user's photo with 100px width.\n   * https://vk.com/images/camera_100.png will be returned if the photo\n   * is not set.\n   */\n  photo_100: string;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n  /**\n   * URL of the square user's photo with maximum size.\n   * https://vk.com/images/camera_400.png will be returned if the photo\n   * is not set.\n   */\n  photo_max_orig?: string;\n  /** User's timezone */\n  timezone: number;\n};\n\n/**\n * User's contact data from the Personal Card from\n */\nexport type PersonalCardData = {\n  phone?: string;\n  email?: string;\n  address?: {\n    country?: {\n      id: number;\n      name: string;\n    };\n    city?: {\n      id: number;\n      name: string;\n    };\n    specified_address?: string;\n    postal_code?: string;\n  };\n};\n\n/**\n * Map of VK Pay request params\n */\nexport type VKPayActionParamsMap = {\n  /** Payment with a given amount to a user */\n  'pay-to-user': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount?: number;\n    /** User ID */\n    user_id: number;\n    /** Payment description */\n    description?: string;\n  };\n  /** Payment with a given amount to a community */\n  'pay-to-group': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount: number;\n    /** Community ID */\n    group_id: number;\n    /** Payment description */\n    description?: string;\n    /** Dictionary with arbitrary parameters */\n    data?: string;\n  };\n  /** Transferring an arbitrary amount to a user */\n  'transfer-to-user': {\n    user_id: number;\n  };\n  /** Transferring an arbitrary amount to a community */\n  'transfer-to-group': {\n    group_id: number;\n  };\n  /**\n   * Payment in favor of the merchant\n   * @see {@link https://vk.com/@devpay-vk-pay-how-to VK Pay How To}\n   */\n  'pay-to-service': {\n    /**\n     * Amount of payment. The minimum value is 1. The amount field is\n     * involved in the formation of merchant_data for the signature of\n     * the seller.\n     */\n    amount: number | string;\n    /**\n     * Description of the payment for user. The text will be shown in\n     * payment dialog\n     */\n    description: string;\n    /**\n     * Merchant ID. This is your ID in the payment system, obtained after\n     * the conclusion of the contract along with the seller’s private key\n     */\n    merchant_id: number;\n    /** Version of the payment form */\n    version: number;\n    /** The signature of the VK app that caused the payment */\n    sign: string;\n    /** Service data */\n    data: {\n      /** Currency. Only RUB is currently supported */\n      currency: 'RUB';\n      /** Base64-string of data for the signature of the seller */\n      merchant_data: string;\n      /** SHA-1 seller sign */\n      merchant_sign: string;\n      /** Sales order id */\n      order_id: string | number;\n      /** Timestamp */\n      ts: number;\n      /** Cashback data */\n      cashback?: {\n        /** Cashback timestamp */\n        pay_time: number;\n        /** Cashback size */\n        amount?: number;\n        /** Percentage cashback size */\n        amount_percent?: number;\n      };\n    };\n  };\n};\n\n/**\n * Possible types VK Pay operations\n */\nexport type VKPayActionType = keyof VKPayActionParamsMap;\n\n/**\n * VK Pay request props\n */\nexport type VKPayProps<ActionType extends VKPayActionType> = {\n  app_id: number;\n  action: ActionType;\n  params: VKPayActionParamsMap[ActionType];\n};\n\n/**\n * Appearance type\n */\nexport type AppearanceType = 'light' | 'dark';\n\n/**\n * Application color scheme type\n */\nexport type AppearanceSchemeType = 'client_light' | 'client_dark' | 'space_gray' | 'bright_light';\n\n/**\n * Vibration type for Taptic Engine\n */\nexport type TapticVibrationPowerType = 'light' | 'medium' | 'heavy';\n\n/**\n * Notification type for Taptic Engine\n */\nexport type TapticNotificationType = 'error' | 'success' | 'warning';\n\n/** Status of showing order box */\nexport type OrderBoxShowingStatus = 'cancel' | 'success' | 'fail';\n\n/**\n * Community widget type\n */\nexport type CommunityWidgetType =\n  | 'text'\n  | 'list'\n  | 'table'\n  | 'tiles'\n  | 'compact_list'\n  | 'cover_list'\n  | 'match'\n  | 'matches'\n  | 'donation';\n\n/**\n * Output data from code reader\n */\nexport type CodeReaderOutput = {\n  /** Read QR code data */\n  code_data: string;\n};\n\n/**\n * Selected contact data\n */\nexport type SelectedContact = {\n  phone: string;\n  first_name: string;\n  last_name: string;\n};\n\n/**\n * Request result data\n */\nexport type RequestResult = {\n  /** Operation success */\n  success: boolean;\n  /** `requestKey` from request */\n  requestKey: string;\n};\n\n/**\n * Result data of transaction\n */\nexport type TransactionResult = {\n  /** Payment (true — successful, false — unsuccessful). */\n  status: boolean;\n  /** Payment transaction identifier (for `status=true`). */\n  transaction_id: string;\n  /** Payment amount */\n  amount: string;\n  /** Additional information of the seller */\n  extra?: string | null;\n};\n\n/**\n * Screen insets.\n */\nexport type Insets = {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n};\n\n/**\n * Update config type for mvk (mobile browser).\n */\nexport type MVKUpdateConfigData = {\n  /** Server API host for direct requests. */\n  api_host: string;\n  scheme: AppearanceSchemeType;\n};\n\nexport type VKUpdateConfigData = {\n  /** Server API host for direct requests. */\n  api_host: string;\n  /** window.innerWidth of the parent window */\n  viewport_width: number;\n  /** window.innerHeight of the parent window */\n  viewport_height: number;\n  scheme: AppearanceSchemeType;\n};\n\n/**\n * Update config type data for mobile clients and desktop.\n */\nexport type DefaultUpdateConfigData = {\n  app: 'vkclient' | 'vkme';\n  app_id: string;\n  appearance: AppearanceType;\n  scheme: AppearanceSchemeType;\n  insets: Insets;\n};\n\n/**\n * Update config data\n */\nexport type ParentConfigData = DefaultUpdateConfigData | MVKUpdateConfigData | VKUpdateConfigData;\n\nexport type WidgetPreviewRequestOptions = {\n  /** Widget type */\n  type: CommunityWidgetType;\n  /** Community ID */\n  group_id: number;\n  /**\n   * Widget code\n   * @see {@link https://vk.com/dev/execute Execute method}\n   */\n  code: string;\n};\n\nexport type VKWebAppLibverifyOnFailedCode =\n  | 'GENERAL_ERROR'\n  | 'UNSUPPORTED_NUMBER'\n  | 'INCORRECT_PHONE_NUMBER'\n  | 'INCORRECT_SMS_CODE'\n  | 'RATELIMIT'\n  | 'NETWORK_ERROR'\n  | 'NO_NETWORK';\n\n/**\n * App close status\n */\nexport type AppCloseStatus = 'success' | 'failed';\n\nexport type CommunityTokenRequestOptions = {\n  app_id: number;\n  group_id: number;\n  scope: CommunityAuthScope | string;\n};\n\nexport type MessageRequestOptions = {\n  /** Receiver ID (user, community, chat) */\n  peer_id: number;\n  /** Message text */\n  message: string;\n  /** List of attaches */\n  attachment?: string;\n  /** Geographic latitude of a point, specified in degrees (from -90 to 90). */\n  lat?: number;\n  /** Geographic longitude of a point, specified in degrees (from -180 to 180). */\n  lng?: number;\n};\n\nexport type NativeAdsOptions = {\n  ad_format: 'preloader' | 'reward' | 'interstitial';\n};\n\nexport type OrderRequestOptions = {\n  /** Always `item` */\n  type: 'item';\n  /**\n   * Name of product. Will be transmitted in the notification of receipt\n   * of product information\n   */\n  item: string;\n};\n\nexport type RequestForRequestOptions = {\n  /** User Id */\n  uid: number;\n  /** Request test */\n  message: string;\n  /**\n   * Optional parameter. Custom string to track conversion. It is passed\n   * in the application launch parameters in case of launch from the\n   * request.\n   */\n  requestKey?: string;\n};\n\nexport type WallPostRequestOptions = {\n  /**\n   * ID of the user or community on whose wall the post is to be\n   * published\n   */\n  owner_id?: number;\n  /**\n   * `true` - the post posted on behalf of the community will have a\n   * signature added (the name of the user who posted the post)\n   * `false` - the signature will not be added. The parameter is taken\n   * into account only when publishing on the community wall and\n   * specifying the from_group parameter. By default, the signature is\n   * not added\n   */\n  signed?: boolean;\n  /** Latitude, specified in degrees (from -90 to 90) */\n  lat?: number;\n  /** Longitude, specified in degrees (from -180 to 180) */\n  long?: number;\n  /** The place ID where the user is marked */\n  place_id?: number;\n  /**\n   * `true` - post will be available to friends only\n   * `false` - post will be available to all users (default)\n   */\n  friends_only?: boolean\n  /**\n   * List of services or websites the update will be exported to, if the user has so requested.\n   * Sample values: 'twitter', 'facebook'\n   */\n  services?: 'twitter' | 'facebook' | string\n  /** Publication date (in Unix time). If used, posting will be delayed until the set time */\n  publish_date?: number\n  /**\n   * `true` - post comments will be closed\n   * `false` - permission to leave post comments will be up to user's settings (default)\n   */\n  close_comments?: boolean\n  /** Source of the post. Internal and external links supported */\n  copyright?: string\n} & (\n  | {\n      message?: string;\n      attachments: string;\n    }\n  | {\n      message: string;\n      attachments?: string;\n    }\n);\n\n/**\n * Result data user in Share\n */\nexport type ShareUserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User profile photo */\n  photo: string;\n};\n\n/**\n * Result data of link share\n */\nexport type LinkShareResult =\n  | { type: 'message', users: ShareUserInfo[] }\n  | { type: 'post'; post_id: string }\n  | { type: 'story'; story_id: string }\n  | { type: 'qr' | 'link' | 'other' };\n\nexport type StoryObjectTransform = {\n  /** Rotation, from 0 to 359 deg. Counterclockwise rotation. */\n  rotation?: number;\n  /**\n   * The desired width of the sticker relative to the screen is (0, 1), the\n   * height will be calculated taking into account maintaining the aspect ratio\n   * of the content.\n   */\n  relation_width?: number;\n  /** From -1 to 1 of screen with */\n  translation_x?: number;\n  /** From -1 to 1 of screen height */\n  translation_y?: number;\n  /** Gravity. Default: center. */\n  gravity?:\n    | 'left_top'\n    | 'left_center'\n    | 'left_bottom'\n    | 'center_top'\n    | 'center'\n    | 'center_bottom'\n    | 'right_top'\n    | 'right_center'\n    | 'right_bottom';\n};\n\nexport type StoryActionHashtag = {\n  /** Hashtag text */\n  hashtag: string;\n  /** Hashtag style. Default: `blue_gradient` */\n  style?: 'transparent' | 'blue_gradient';\n};\n\nexport type StoryActionMention = {\n  /**\n   * Text in mention format:\n   * for users: \"[id123|name]\"\n   * for communities: \"[club123|name]\"\n   */\n  mention: string;\n  /** Mention style. Default: `red_gradient` */\n  style?: 'transparent' | 'red_gradient';\n};\n\nexport type StoryActionPlace = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  title: string;\n  /** Category id */\n  category_id?: number;\n  /** Style */\n  style?: 'transparent' | 'blue' | 'green' | 'white';\n};\n\n/**\n * Story action link\n */\nexport type StoryActionLink = {\n  /** Content link */\n  link: string;\n  /**\n   * The value of the string that will be displayed on the client when\n   * clicking on the tooltip.\n   */\n  tooltip_text_key: 'tooltip_open_post' | 'tooltip_open_photo' | 'tooltip_open_page' | 'tooltip_open_default';\n};\n\nexport type StoryActionTime = {\n  /** Time style. Default: `date` */\n  style?: 'black' | 'white' | 'green' | 'text' | 'date';\n  /** Timestamp in milliseconds */\n  timestamp_ms?: number;\n  /**\n   * Date (`timestamp_ms` alternative) in format:\n   * `yyyy:MM:dd HH:mm:ss`\n   * (this format is chosen to unify dates from exif fields https://vk.cc/9NrgMr) */\n  date?: string;\n  /** Top sticker title, meaning only for date style */\n  title?: string;\n};\n\nexport type StoryActionGeo = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  text: string;\n  /** Category id */\n  category_id?: number;\n  /** Sticker style. Default: `blue`*/\n  style?: 'blue' | 'green' | 'white' | 'transparent';\n};\n\nexport type StoryActionQuestion = {\n  /** Question text */\n  question: string;\n  /** Button text */\n  button: string;\n};\n\nexport type StoryActionText = {\n  /**\n   * The text may contain mentions/hashtags in the formats specified with\n   * the corresponding objects\n   */\n  text: string;\n  /** Text style */\n  style?: 'classic' | 'cursive' | 'marker' | 'italics' | 'typewriter' | 'poster' | 'retro';\n  /** Background/border style. Default: `none` */\n  background_style?: 'none' | 'alpha' | 'solid' | 'sticker' | 'neon';\n  /** Horizontal alignment */\n  alignment?: 'center' | 'left' | 'right';\n  /** HEX color */\n  selection_color?: string;\n};\n\nexport type StoryActionEmoji = {\n  emoji: string;\n};\n\nexport type StoryActionSticker = {\n  /** Sticker id */\n  sticker_id: number;\n  /** Sticker url */\n  url?: string;\n  /** JSON sticker url */\n  animation_url?: string;\n  /** Sticker pack id */\n  pack_id?: number;\n};\n\nexport type StoryActionMarketItem = {\n  /** Product name */\n  title: string;\n  /** Product id in VK Market */\n  product_id?: number;\n  /** Owner id of product in VK Market */\n  owner_id?: number;\n  /** Aliexpress product link */\n  link?: string;\n};\n\n/**\n * Story action type\n */\nexport type StoryAction =\n  | StoryActionHashtag\n  | StoryActionMention\n  | StoryActionPlace\n  | StoryActionLink\n  | StoryActionTime\n  | StoryActionGeo\n  | StoryActionQuestion\n  | StoryActionText\n  | StoryActionEmoji\n  | StoryActionSticker\n  | StoryActionMarketItem;\n\nexport type StoryClickableZoneOrigin = {\n  x: number;\n  y: number;\n};\n\nexport type StoryClickableZone = {\n  /** Action type */\n  action_type: 'hashtag' | 'mention' | 'link' | 'place' | 'question' | 'market_item';\n  /** Action data */\n  action: StoryAction;\n  /**\n   * Clickable area border on the sticker. The points should be located\n   * clockwise, forming a closed square.\n   */\n  clickable_area?: StoryClickableZoneOrigin[];\n};\n\nexport type StoryRenderableSticker = (\n  | {\n      /** Content url */\n      url: string;\n    }\n  | {\n      /** Base64 string with BLOB */\n      blob: string;\n    }\n) & {\n  /** Story type */\n  content_type: 'image' | 'gif' | 'video';\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Clickable zones */\n  clickable_zones?: StoryClickableZone[];\n  /** Content width */\n  original_width?: number;\n  /** Content height */\n  original_height?: number;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\nexport type StoryNativeSticker = {\n  /** Story action type */\n  action_type: 'text' | 'hashtag' | 'mention' | 'time' | 'place' | 'question' | 'emoji' | 'sticker' | 'market_item';\n  /** Story action */\n  action: StoryAction;\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\n/**\n * Sticker container\n */\nexport type StickerContainer =\n  | {\n      sticker_type: 'renderable';\n      sticker: StoryRenderableSticker;\n    }\n  | {\n      sticker_type: 'native';\n      sticker: StoryNativeSticker;\n    };\n\n/** Link text for moving from a story (community stories only) */\nexport type StoryButtonText =\n  | 'learn_more' // «Подробнее» (default)\n  | 'to_store' // «В магазин»\n  | 'vote' // «Голосовать»\n  | 'more' // «Ещё»\n  | 'book' // «Забронировать»\n  | 'order' // «Заказать»\n  | 'enroll' // «Записаться»\n  | 'fill' // «Заполнить»\n  | 'signup' // «Зарегистрироваться»\n  | 'buy' // «Купить»\n  | 'ticket' // «Купить билет»\n  | 'write' // «Написать»\n  | 'open' // «Открыть»\n  | 'view' // «Посмотреть»\n  | 'go_to' // «Перейти»\n  | 'contact' // «Связаться»\n  | 'watch' // «Смотреть»\n  | 'play' // «Слушать»\n  | 'install' // «Установить»\n  | 'read'; // «Читать»\n\nexport type StoryAttachment = {\n  /** Button text key (см. link_text в stories.getVideoUploadServer) */\n  text: string;\n  /** Attach type */\n  type: 'url' | 'audio' | 'video' | 'photo';\n  /** Content url */\n  url?: string;\n  /** Owner id */\n  owner_id?: number;\n  /** Object id */\n  id?: number;\n  /** Access key for the attachment */\n  access_key?: string;\n};\n\nexport type ShowStoryBoxOptions = {\n  /** Story type */\n  background_type: 'image' | 'video' | 'none';\n  /** Camera type (only for `background_type: none`). Default: `back` */\n  camera_type?: 'back' | 'front';\n  /** Link to an image or video (should follow a direct link to mp4) */\n  url?: string;\n  /** Base64 string with BLOB (supported only for image) */\n  blob?: string;\n  /** Lock to move the photo */\n  locked?: boolean;\n  /** Story attachment object */\n  attachment?: StoryAttachment;\n  /** Array of sticker objects */\n  stickers?: StickerContainer[];\n};\n\n/**\n * Params of method for subscribing to a story updates\n */\nexport type SubscribeStoryAppOptions = {\n  /** Story owner id */\n  story_owner_id: number;\n  /** Story id */\n  story_id: number;\n  /** Clickable sticker id */\n  sticker_id: number;\n  /** Private stories access key */\n  access_key?: string;\n};\n\n/**\n * Group info\n */\nexport type GroupInfo = {\n  id: number;\n  name: string;\n  screen_name: string;\n  is_closed: number;\n  type: string;\n  is_member: number;\n  description: string;\n  photo_50: string;\n  photo_100: string;\n  photo_200: string;\n};\n\n/*\n * Options for request to adding a user to an audience with a retargeting pixel\n */\nexport type RetargetingPixelOptions = {\n  /** Pixel code, e.g. `VK-RTRG-447253-dUuM` */\n  pixel_code: string;\n  /** Event id, pixel rule */\n  event?: string;\n  /** ID of the retargeting group to which the current user should be added */\n  target_group_id?: number;\n  /** ID of the price list */\n  price_list_id?: number;\n  /** Type of product event */\n  products_event?: string;\n  /** Product params */\n  products_params?: string;\n};\n\n/**\n * Type for params field in OKWebAppCallAPIMethod\n */\nexport type OKCallApiParams = {\n  application_key: string\n  access_token: string\n  format?: string\n\n  [key: string]: any\n};\n\n/**\n * Type for VKWebAppCheckAllowedScopes method results\n */\nexport type VKWebAppCheckAllowedScopesResponseEntry = {\n  scope: string;\n  allowed: boolean;\n};\n\nexport enum EGrantedPermission {\n  CAMERA = 'camera',\n  LOCATION = 'location',\n  PHOTO = 'photo',\n}\n\nexport type GetGrantedPermissionsResponse = {\n  permissions: EGrantedPermission[];\n};\n\nexport type CreateHashRequest = {\n  payload?: string;\n};\n\nexport type CreateHashResponse = {\n  ts: number;\n  hash: string;\n  payload?: string;\n};\n\nexport type ChangeFragmentResponse = {\n  location: string;\n};\n\nexport enum  EGetLaunchParamsResponseLanguages {\n  RU = 'ru',\n  UK = 'uk',\n  UA = 'ua',\n  EN = 'en',\n  BE = 'be',\n  KZ = 'kz',\n  PT = 'pt',\n  ES = 'es',\n}\n\nexport enum EGetLaunchParamsResponseGroupRole {\n  ADMIN = 'admin',\n  EDITOR = 'editor',\n  MEMBER = 'member',\n  MODER = 'moder',\n  NONE = 'none',\n}\n\nexport enum EGetLaunchParamsResponsePlatforms {\n  DESKTOP_WEB = 'desktop_web',\n  MOBILE_WEB = 'mobile_web',\n  MOBILE_ANDROID = 'mobile_android',\n  MOBILE_ANDROID_MESSENGER = 'mobile_android_messenger',\n  MOBILE_IPHONE = 'mobile_iphone',\n  MOBILE_IPHONE_MESSENGER = 'mobile_iphone_messenger',\n  MOBILE_IPAD = 'mobile_ipad',\n}\n\nexport type GetLaunchParamsResponse = {\n  vk_user_id: number;\n  vk_app_id: number;\n  vk_is_app_user: 0 | 1;\n  vk_are_notifications_enabled: 0 | 1;\n  vk_language: EGetLaunchParamsResponseLanguages;\n  vk_ref: string;\n  vk_access_token_settings: string;\n  vk_group_id?: number;\n  vk_viewer_group_role?: EGetLaunchParamsResponseGroupRole;\n  vk_platform: EGetLaunchParamsResponsePlatforms;\n  vk_is_favorite: 0 | 1;\n  vk_ts: number;\n  sign: string;\n};\n\nexport type ConversionHitRequest = {\n  pixel_code: string;\n  conversion_event: string;\n  conversion_value: number;\n};\n\nexport type ConversionHitResponse = {\n  result: true;\n};\n\n/**\n * Map of types of request props of VK Bridge methods\n */\nexport type RequestPropsMap = {\n  VKWebAppInit: {};\n  VKWebAppAddToCommunity: {};\n  VKWebAppAddToHomeScreen: {};\n  VKWebAppAddToHomeScreenInfo: {},\n  VKWebAppAllowMessagesFromGroup: { group_id: number; key?: string };\n  VKWebAppAllowNotifications: {};\n  OKWebAppCallAPIMethod: { method: string; params: OKCallApiParams };\n  VKWebAppCallAPIMethod: { method: string; params: Record<'access_token' | 'v', string> & Record<string, string | number> };\n  VKWebAppCopyText: { text: string };\n  VKWebAppCreateHash: CreateHashRequest;\n  VKWebAppDownloadFile: { url: string; filename: string };\n  VKWebAppGetAuthToken: { app_id: number; scope: PersonalAuthScope | string };\n  VKWebAppClose: { status: AppCloseStatus; payload?: any };\n  VKWebAppOpenApp: { app_id: number; location?: string };\n  VKWebAppDenyNotifications: {};\n  VKWebAppFlashGetInfo: {};\n  VKWebAppFlashSetLevel: { level: number };\n  VKWebAppGetClientVersion: {};\n  VKWebAppGetCommunityToken: CommunityTokenRequestOptions;\n  VKWebAppGetConfig: {},\n  VKWebAppGetLaunchParams: {},\n  VKWebAppAudioPause: {};\n  VKWebAppGetEmail: {};\n  VKWebAppGetFriends: { multi?: boolean };\n  VKWebAppGetGeodata: {};\n  VKWebAppGetGrantedPermissions: {};\n  VKWebAppGetPersonalCard: { type: PersonalCardType[] };\n  VKWebAppGetPhoneNumber: {};\n  VKWebAppGetUserInfo: { user_id?: number };\n  VKWebAppJoinGroup: { group_id: number };\n  VKWebAppLeaveGroup: { group_id: number };\n  VKWebAppAddToMenu: {};\n  VKWebAppOpenCodeReader: {};\n  VKWebAppOpenContacts: {};\n  VKWebAppOpenPayForm: VKPayProps<VKPayActionType>;\n  VKWebAppOpenQR: {};\n  VKWebAppResizeWindow: { width: number; height?: number };\n  VKWebAppScroll: { top: number; speed?: number };\n  VKWebAppSendToClient: { fragment?: string };\n  VKWebAppSetLocation: { location: string };\n  VKWebAppSetViewSettings: {\n    status_bar_style: AppearanceType;\n    /** Android only */\n    action_bar_color?: 'none' | string;\n    /** Android only */\n    navigation_bar_color?: string;\n  };\n  VKWebAppShare: { link?: string };\n  VKWebAppShowCommunityWidgetPreviewBox: WidgetPreviewRequestOptions;\n  VKWebAppShowImages: { images: string[]; start_index?: number };\n  VKWebAppShowInviteBox: {};\n  VKWebAppShowLeaderBoardBox: { user_result: number };\n  VKWebAppShowMessageBox: MessageRequestOptions;\n  VKWebAppShowNativeAds: NativeAdsOptions;\n  VKWebAppShowOrderBox: OrderRequestOptions;\n  VKWebAppShowRequestBox: RequestForRequestOptions;\n  VKWebAppShowWallPostBox: WallPostRequestOptions;\n  VKWebAppOpenWallPost: { post_id: number, owner_id: number };\n  VKWebAppStorageGet: { keys: string[] };\n  VKWebAppStorageGetKeys: { count: number; offset: number };\n  VKWebAppStorageSet: { key: string; value: string };\n  VKWebAppTapticImpactOccurred: { style: TapticVibrationPowerType };\n  VKWebAppTapticNotificationOccurred: { type: TapticNotificationType };\n  VKWebAppTapticSelectionChanged: {};\n  VKWebAppAddToFavorites: {};\n  VKWebAppSendPayload: { group_id: number; payload: any };\n  VKWebAppDisableSwipeBack: {};\n  VKWebAppEnableSwipeBack: {};\n  VKWebAppSetSwipeSettings: { history: boolean };\n  VKWebAppShowStoryBox: ShowStoryBoxOptions;\n  VKWebAppAccelerometerStart: { refresh_rate?: string };\n  VKWebAppAccelerometerStop: {};\n  VKWebAppGyroscopeStart: {};\n  VKWebAppGyroscopeStop: {};\n  VKWebAppDeviceMotionStart: {};\n  VKWebAppDeviceMotionStop: {};\n  VKWebAppSubscribeStoryApp: SubscribeStoryAppOptions;\n  VKWebAppGetGroupInfo: { group_id: number };\n  VKWebAppLibverifyRequest: { phone: string };\n  VKWebAppLibverifyCheck: { code: string };\n  VKWebAppRetargetingPixel: RetargetingPixelOptions;\n  VKWebAppCheckAllowedScopes: { scopes: string };\n  VKWebAppConversionHit: ConversionHitRequest;\n};\n\n/**\n * Map of types of response data of VK Bridge methods\n */\nexport type ReceiveDataMap = {\n  VKWebAppInit: { result: true };\n  VKWebAppAddToCommunity: { group_id: number };\n  VKWebAppAddToHomeScreen: { result: true };\n  VKWebAppAddToHomeScreenInfo: { is_feature_supported: boolean, is_added_to_home_screen: boolean },\n  VKWebAppAllowMessagesFromGroup: { result: true };\n  VKWebAppAllowNotifications: { result: true };\n  OKWebAppCallAPIMethod: { response: any };\n  VKWebAppCallAPIMethod: { response: any };\n  VKWebAppCopyText: { result: true };\n  VKWebAppCreateHash: CreateHashResponse;\n  VKWebAppDownloadFile: { result: true };\n  VKWebAppGetAuthToken: { access_token: string; scope: string };\n  VKWebAppClose: { payload: any };\n  VKWebAppOpenApp: { result: true };\n  VKWebAppDenyNotifications: { result: true };\n  VKWebAppFlashGetInfo: { is_available: boolean; level: number };\n  VKWebAppFlashSetLevel: { result: true };\n  VKWebAppGetClientVersion: { platform: string; version: string };\n  VKWebAppGetEmail: { email: string; sign: string };\n  VKWebAppGetFriends: { users: UserGetFriendsFriend[] };\n  VKWebAppGetGeodata: { available: 0 } | { available: 1; lat: number; long: number; accuracy: number; };\n  VKWebAppGetGrantedPermissions: GetGrantedPermissionsResponse;\n  VKWebAppGetPersonalCard: PersonalCardData;\n  VKWebAppGetPhoneNumber: { phone_number: string; sign: string; is_verified: boolean };\n  VKWebAppGetUserInfo: UserInfo;\n  VKWebAppJoinGroup: { result: true };\n  VKWebAppLeaveGroup: { result: true };\n  VKWebAppAddToMenu: { result: true };\n  VKWebAppOpenCodeReader: CodeReaderOutput;\n  VKWebAppOpenQR: CodeReaderOutput;\n  VKWebAppOpenContacts: SelectedContact;\n  VKWebAppOpenPayForm: TransactionResult | { result: TransactionResult };\n  VKWebAppResizeWindow: { width: number; height: number };\n  VKWebAppScroll: { top: number; height: number };\n  VKWebAppSendToClient: { result: true };\n  VKWebAppSetLocation: { result: true };\n  VKWebAppSetViewSettings: { result: true };\n  VKWebAppShare: LinkShareResult;\n  VKWebAppShowCommunityWidgetPreviewBox: { result: true };\n  VKWebAppShowImages: { result: true };\n  VKWebAppShowInviteBox: { success: true };\n  VKWebAppShowLeaderBoardBox: { success: boolean };\n  VKWebAppShowMessageBox: { result: true };\n  VKWebAppShowNativeAds: { result: true };\n  VKWebAppShowOrderBox: { status: OrderBoxShowingStatus };\n  VKWebAppShowRequestBox: RequestResult;\n  VKWebAppShowWallPostBox: { post_id: number | string };\n  VKWebAppOpenWallPost: { result: true };\n  VKWebAppStorageGet: { keys: { key: string; value: string }[] };\n  VKWebAppStorageGetKeys: { keys: string[] };\n  VKWebAppStorageSet: { result: true };\n  VKWebAppTapticImpactOccurred: { result: true };\n  VKWebAppTapticNotificationOccurred: { result: true };\n  VKWebAppTapticSelectionChanged: { result: true };\n  VKWebAppAddToFavorites: { result: true };\n  VKWebAppSendPayload: { result: true };\n  VKWebAppGetCommunityToken: { access_token: string };\n  VKWebAppAudioPause: { result: true };\n  VKWebAppAudioPaused: { position: number; type: string; id: string };\n  VKWebAppAudioStopped: {}; // Always empty\n  VKWebAppAudioTrackChanged: { type: string; id: string };\n  VKWebAppAudioUnpaused: { type: string; id: string };\n  VKWebAppInitAds: { init: 'true' | 'false' };\n  VKWebAppLoadAds: { load: 'true' | 'false' };\n  VKWebAppUpdateConfig: ParentConfigData;\n  VKWebAppGetConfig: ParentConfigData;\n  VKWebAppGetLaunchParams: GetLaunchParamsResponse;\n  VKWebAppUpdateInsets: { insets: Insets };\n  VKWebAppViewHide: {}; // Always empty\n  VKWebAppViewRestore: {}; // Always empty\n  VKWebAppDisableSwipeBack: { result: true };\n  VKWebAppEnableSwipeBack: { result: true };\n  VKWebAppSetSwipeSettings: { result: true };\n  VKWebAppShowStoryBox: { result: true };\n  VKWebAppAccelerometerStart: { result: true };\n  VKWebAppAccelerometerStop: { result: true };\n  VKWebAppGyroscopeStart: { result: true };\n  VKWebAppGyroscopeStop: { result: true };\n  VKWebAppAccelerometerChanged: { x: string; y: string; z: string };\n  VKWebAppGyroscopeChanged: { x: string; y: string; z: string };\n  VKWebAppDeviceMotionStart: { result: true };\n  VKWebAppDeviceMotionChanged: { alpha: string; beta: string; gamma: string };\n  VKWebAppDeviceMotionStop: { result: true };\n  VKWebAppLocationChanged: { location: string };\n  VKWebAppSubscribeStoryApp: { access_key: string };\n  VKWebAppGetGroupInfo: GroupInfo;\n  VKWebAppLibverifyOnConfirmed: { validate_session: string; validate_token: string };\n  VKWebAppLibverifyOnFailed: { code: VKWebAppLibverifyOnFailedCode };\n  VKWebAppRetargetingPixel: { result: true };\n  VKWebAppCheckAllowedScopes: { result: VKWebAppCheckAllowedScopesResponseEntry[] };\n  VKWebAppChangeFragment: ChangeFragmentResponse;\n  VKWebAppConversionHit: ConversionHitResponse;\n};\n\ntype EventReceiveNames<T extends keyof RequestPropsMap, R extends string, F extends string> = Record<\n  T,\n  { result: R; failed: F }\n>;\n\n/**\n * Map of event names.\n */\nexport type ReceiveEventMap = EventReceiveNames<'VKWebAppInit', 'VKWebAppInitResult', 'VKWebAppInitFailed'> &\n  EventReceiveNames<'VKWebAppAddToCommunity', 'VKWebAppAddToCommunityResult', 'VKWebAppAddToCommunityFailed'> &\n  EventReceiveNames<'VKWebAppAddToHomeScreen', 'VKWebAppAddToHomeScreenResult', 'VKWebAppAddToHomeScreenFailed'> &\n  EventReceiveNames<'VKWebAppAddToHomeScreenInfo', 'VKWebAppAddToHomeScreenInfoResult', 'VKWebAppAddToHomeScreenInfoFailed'> &\n  EventReceiveNames<\n    'VKWebAppAllowMessagesFromGroup',\n    'VKWebAppAllowMessagesFromGroupResult',\n    'VKWebAppAllowMessagesFromGroupFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAllowNotifications',\n    'VKWebAppAllowNotificationsResult',\n    'VKWebAppAllowNotificationsFailed'\n  > &\n  EventReceiveNames<'OKWebAppCallAPIMethod', 'OKWebAppCallAPIMethodResult', 'OKWebAppCallAPIMethodFailed'> &\n  EventReceiveNames<'VKWebAppCallAPIMethod', 'VKWebAppCallAPIMethodResult', 'VKWebAppCallAPIMethodFailed'> &\n  EventReceiveNames<'VKWebAppCopyText', 'VKWebAppCopyTextResult', 'VKWebAppCopyTextFailed'> &\n  EventReceiveNames<'VKWebAppCreateHash', 'VKWebAppCreateHashResult', 'VKWebAppCreateHashFailed'> &\n  EventReceiveNames<'VKWebAppDownloadFile', 'VKWebAppDownloadFileResult', 'VKWebAppDownloadFileFailed'> &\n  // NOTE: Different request/response events\n  EventReceiveNames<'VKWebAppGetAuthToken', 'VKWebAppAccessTokenReceived', 'VKWebAppAccessTokenFailed'> &\n  EventReceiveNames<'VKWebAppClose', 'VKWebAppCloseResult', 'VKWebAppCloseFailed'> &\n  EventReceiveNames<'VKWebAppOpenApp', 'VKWebAppOpenAppResult', 'VKWebAppOpenAppFailed'> &\n  EventReceiveNames<'VKWebAppDenyNotifications', 'VKWebAppDenyNotificationsResult', 'VKWebAppDenyNotificationsFailed'> &\n  EventReceiveNames<'VKWebAppFlashGetInfo', 'VKWebAppFlashGetInfoResult', 'VKWebAppFlashGetInfoFailed'> &\n  EventReceiveNames<'VKWebAppFlashSetLevel', 'VKWebAppFlashSetLevelResult', 'VKWebAppFlashSetLevelFailed'> &\n  EventReceiveNames<'VKWebAppGetClientVersion', 'VKWebAppGetClientVersionResult', 'VKWebAppGetClientVersionFailed'> &\n  EventReceiveNames<'VKWebAppGetCommunityToken', 'VKWebAppGetCommunityTokenResult', 'VKWebAppGetCommunityTokenFailed'> &\n  EventReceiveNames<'VKWebAppGetConfig', 'VKWebAppGetConfigResult', 'VKWebAppGetConfigFailed'> &\n  EventReceiveNames<'VKWebAppGetLaunchParams', 'VKWebAppGetLaunchParamsResult', 'VKWebAppGetLaunchParamsFailed'> &\n  EventReceiveNames<'VKWebAppAudioPause', 'VKWebAppAudioPauseResult', 'VKWebAppAudioPauseFailed'> &\n  EventReceiveNames<'VKWebAppGetEmail', 'VKWebAppGetEmailResult', 'VKWebAppGetEmailFailed'> &\n  EventReceiveNames<'VKWebAppGetFriends', 'VKWebAppGetFriendsResult', 'VKWebAppGetFriendsFailed'> &\n  EventReceiveNames<'VKWebAppGetGeodata', 'VKWebAppGetGeodataResult', 'VKWebAppGetGeodataFailed'> &\n  EventReceiveNames<'VKWebAppGetGrantedPermissions', 'VKWebAppGetGrantedPermissionsResult', 'VKWebAppGetGrantedPermissionsFailed'> &\n  EventReceiveNames<'VKWebAppGetPersonalCard', 'VKWebAppGetPersonalCardResult', 'VKWebAppGetPersonalCardFailed'> &\n  EventReceiveNames<'VKWebAppGetPhoneNumber', 'VKWebAppGetPhoneNumberResult', 'VKWebAppGetPhoneNumberFailed'> &\n  EventReceiveNames<'VKWebAppGetUserInfo', 'VKWebAppGetUserInfoResult', 'VKWebAppGetUserInfoFailed'> &\n  EventReceiveNames<'VKWebAppJoinGroup', 'VKWebAppJoinGroupResult', 'VKWebAppJoinGroupFailed'> &\n  EventReceiveNames<'VKWebAppLeaveGroup', 'VKWebAppLeaveGroupResult', 'VKWebAppLeaveGroupFailed'> &\n  EventReceiveNames<'VKWebAppAddToMenu', 'VKWebAppAddToMenuResult', 'VKWebAppAddToMenuFailed'> &\n  EventReceiveNames<'VKWebAppOpenCodeReader', 'VKWebAppOpenCodeReaderResult', 'VKWebAppOpenCodeReaderFailed'> &\n  EventReceiveNames<'VKWebAppOpenContacts', 'VKWebAppOpenContactsResult', 'VKWebAppOpenContactsFailed'> &\n  EventReceiveNames<'VKWebAppOpenPayForm', 'VKWebAppOpenPayFormResult', 'VKWebAppOpenPayFormFailed'> &\n  EventReceiveNames<'VKWebAppOpenQR', 'VKWebAppOpenQRResult', 'VKWebAppOpenQRFailed'> &\n  EventReceiveNames<'VKWebAppResizeWindow', 'VKWebAppResizeWindowResult', 'VKWebAppResizeWindowFailed'> &\n  EventReceiveNames<'VKWebAppScroll', 'VKWebAppScrollResult', 'VKWebAppScrollFailed'> &\n  EventReceiveNames<'VKWebAppSendToClient', 'VKWebAppSendToClientResult', 'VKWebAppSendToClientFailed'> &\n  EventReceiveNames<'VKWebAppSetLocation', 'VKWebAppSetLocationResult', 'VKWebAppSetLocationFailed'> &\n  EventReceiveNames<'VKWebAppSetViewSettings', 'VKWebAppSetViewSettingsResult', 'VKWebAppSetViewSettingsFailed'> &\n  EventReceiveNames<'VKWebAppShare', 'VKWebAppShareResult', 'VKWebAppShareFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowCommunityWidgetPreviewBox',\n    'VKWebAppShowCommunityWidgetPreviewBoxResult',\n    'VKWebAppShowCommunityWidgetPreviewBoxFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowImages', 'VKWebAppShowImagesResult', 'VKWebAppShowImagesFailed'> &\n  EventReceiveNames<'VKWebAppShowInviteBox', 'VKWebAppShowInviteBoxResult', 'VKWebAppShowInviteBoxFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowLeaderBoardBox',\n    'VKWebAppShowLeaderBoardBoxResult',\n    'VKWebAppShowLeaderBoardBoxFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowMessageBox', 'VKWebAppShowMessageBoxResult', 'VKWebAppShowMessageBoxFailed'> &\n  EventReceiveNames<'VKWebAppShowNativeAds', 'VKWebAppShowNativeAdsResult', 'VKWebAppShowNativeAdsFailed'> &\n  EventReceiveNames<'VKWebAppShowOrderBox', 'VKWebAppShowOrderBoxResult', 'VKWebAppShowOrderBoxFailed'> &\n  EventReceiveNames<'VKWebAppShowRequestBox', 'VKWebAppShowRequestBoxResult', 'VKWebAppShowRequestBoxFailed'> &\n  EventReceiveNames<'VKWebAppShowWallPostBox', 'VKWebAppShowWallPostBoxResult', 'VKWebAppShowWallPostBoxFailed'> &\n  EventReceiveNames<'VKWebAppOpenWallPost', 'VKWebAppOpenWallPostResult', 'VKWebAppOpenWallPostFailed'> &\n  EventReceiveNames<'VKWebAppStorageGet', 'VKWebAppStorageGetResult', 'VKWebAppStorageGetFailed'> &\n  EventReceiveNames<'VKWebAppStorageGetKeys', 'VKWebAppStorageGetKeysResult', 'VKWebAppStorageGetKeysFailed'> &\n  EventReceiveNames<'VKWebAppStorageSet', 'VKWebAppStorageSetResult', 'VKWebAppStorageSetFailed'> &\n  EventReceiveNames<\n    'VKWebAppTapticImpactOccurred',\n    'VKWebAppTapticImpactOccurredResult',\n    'VKWebAppTapticImpactOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticNotificationOccurred',\n    'VKWebAppTapticNotificationOccurredResult',\n    'VKWebAppTapticNotificationOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticSelectionChanged',\n    'VKWebAppTapticSelectionChangedResult',\n    'VKWebAppTapticSelectionChangedFailed'\n  > &\n  EventReceiveNames<'VKWebAppAddToFavorites', 'VKWebAppAddToFavoritesResult', 'VKWebAppAddToFavoritesFailed'> &\n  EventReceiveNames<'VKWebAppSendPayload', 'VKWebAppSendPayloadResult', 'VKWebAppSendPayloadFailed'> &\n  EventReceiveNames<'VKWebAppDisableSwipeBack', 'VKWebAppDisableSwipeBackResult', 'VKWebAppDisableSwipeBackFailed'> &\n  EventReceiveNames<'VKWebAppEnableSwipeBack', 'VKWebAppEnableSwipeBackResult', 'VKWebAppEnableSwipeBackFailed'> &\n  EventReceiveNames<'VKWebAppSetSwipeSettings', 'VKWebAppSetSwipeSettingsResult', 'VKWebAppSetSwipeSettingsFailed'> &\n  EventReceiveNames<'VKWebAppShowStoryBox', 'VKWebAppShowStoryBoxResult', 'VKWebAppShowStoryBoxFailed'> &\n  EventReceiveNames<\n    'VKWebAppAccelerometerStart',\n    'VKWebAppAccelerometerStartResult',\n    'VKWebAppAccelerometerStartFailed'\n  > &\n  EventReceiveNames<'VKWebAppAccelerometerStop', 'VKWebAppAccelerometerStopResult', 'VKWebAppAccelerometerStopFailed'> &\n  EventReceiveNames<'VKWebAppGyroscopeStart', 'VKWebAppGyroscopeStartResult', 'VKWebAppGyroscopeStartFailed'> &\n  EventReceiveNames<'VKWebAppGyroscopeStop', 'VKWebAppGyroscopeStopResult', 'VKWebAppGyroscopeStopFailed'> &\n  EventReceiveNames<'VKWebAppDeviceMotionStart', 'VKWebAppDeviceMotionStartResult', 'VKWebAppDeviceMotionStartFailed'> &\n  EventReceiveNames<'VKWebAppDeviceMotionStop', 'VKWebAppDeviceMotionStopResult', 'VKWebAppDeviceMotionStopFailed'> &\n  EventReceiveNames<'VKWebAppSubscribeStoryApp', 'VKWebAppSubscribeStoryAppResult', 'VKWebAppSubscribeStoryAppFailed'> &\n  EventReceiveNames<'VKWebAppGetGroupInfo', 'VKWebAppGetGroupInfoResult', 'VKWebAppGetGroupInfoFailed'> &\n  EventReceiveNames<'VKWebAppRetargetingPixel', 'VKWebAppRetargetingPixelResult', 'VKWebAppRetargetingPixelFailed'> &\n  EventReceiveNames<'VKWebAppCheckAllowedScopes', 'VKWebAppCheckAllowedScopesResult', 'VKWebAppCheckAllowedScopesFailed'> &\n  EventReceiveNames<'VKWebAppConversionHit', 'VKWebAppConversionHitResult', 'VKWebAppConversionHitFailed'>;\n","import { VKBridge, VKBridgeSend } from './types/bridge';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\n\n/**\n * Creates the VK Bridge enhancer that applies middleware to the `send`\n * method. This is handy for a variety of task such as logging every sent\n * event.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns The VK Bridge enhancer applying the middleware.\n */\nexport function applyMiddleware(...middlewares: Array<Middleware | undefined | null>): (bridge: VKBridge) => VKBridge {\n  if (middlewares.includes(undefined) || middlewares.includes(null)) {\n    return applyMiddleware(...middlewares.filter((item): item is Middleware => typeof item === 'function'));\n  }\n\n  return (bridge) => {\n    if (middlewares.length === 0) {\n      return bridge;\n    }\n\n    let send: VKBridgeSend = () => {\n      throw new Error(\n        'Sending events while constructing your middleware is not allowed. ' +\n          'Other middleware would not be applied to this send.'\n      );\n    };\n\n    const middlewareAPI: MiddlewareAPI = {\n      subscribe: bridge.subscribe,\n      send: (...args) => bridge.send(...args),\n    };\n\n    const chain = middlewares\n      .filter((item): item is Middleware => typeof item === 'function')\n      .map((middleware) => middleware(middlewareAPI)) //\n      .reduce((a, b) => (send) => a(b(send)));\n\n    send = chain(bridge.send);\n\n    return {\n      ...bridge,\n      send,\n    };\n  };\n}\n","import { createVKBridge } from './bridge';\nimport { createCustomEventPolyfill } from './custom-event';\nimport { version } from '../package.json';\nimport './custom-event';\n\n// Applying CustomEvent polyfill\nif (typeof window !== 'undefined' && !window.CustomEvent) {\n  (window as any).CustomEvent = createCustomEventPolyfill();\n}\n\n// VK Bridge API\nconst bridge = createVKBridge(version);\n\n// Export typings\nexport * from './types/data';\nexport * from './types/bridge';\nexport * from './types/middleware';\nexport * from './types/deprecated';\n\nexport { applyMiddleware } from './applyMiddleware';\nexport { bridge as default };\n"],"names":[],"mappings":"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"}