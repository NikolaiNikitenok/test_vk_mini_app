{"ast":null,"code":"/**\r\n *  A constant for the order N for the secp256k1 curve.\r\n *\r\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\r\n */\nexport const N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n/**\r\n *  A constant for the number of wei in a single ether.\r\n *\r\n *  (**i.e.** ``1000000000000000000n``)\r\n */\n\nexport const WeiPerEther = BigInt(\"1000000000000000000\");\n/**\r\n *  A constant for the maximum value for a ``uint256``.\r\n *\r\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\r\n */\n\nexport const MaxUint256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\r\n *  A constant for the minimum value for an ``int256``.\r\n *\r\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\r\n */\n\nexport const MinInt256 = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n/**\r\n *  A constant for the maximum value for an ``int256``.\r\n *\r\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\r\n */\n\nexport const MaxInt256 = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");","map":{"version":3,"mappings":"AACA;;;;;AAKA,OAAO,MAAMA,CAAC,GAAWC,MAAM,CAAC,oEAAD,CAAxB;AAEP;;;;;;AAKA,OAAO,MAAMC,WAAW,GAAWD,MAAM,CAAC,qBAAD,CAAlC;AAEP;;;;;;AAKA,OAAO,MAAME,UAAU,GAAWF,MAAM,CAAC,oEAAD,CAAjC;AAEP;;;;;;AAKA,OAAO,MAAMG,SAAS,GAAWH,MAAM,CAAC,oEAAD,CAAN,GAA+EA,MAAM,CAAC,CAAC,CAAF,CAA/G;AAEP;;;;;;AAKA,OAAO,MAAMI,SAAS,GAAWJ,MAAM,CAAC,oEAAD,CAAhC","names":["N","BigInt","WeiPerEther","MaxUint256","MinInt256","MaxInt256"],"sourceRoot":"","sources":["../../src.ts/constants/numbers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}