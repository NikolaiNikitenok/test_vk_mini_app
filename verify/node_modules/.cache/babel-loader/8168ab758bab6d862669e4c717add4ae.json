{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enableTime\", \"shouldDisableDate\", \"disableFuture\", \"disablePast\", \"value\", \"onChange\", \"calendarPlacement\", \"style\", \"className\", \"doneButtonText\", \"closeOnChange\", \"disablePickers\", \"getRootRef\", \"name\", \"autoFocus\", \"disabled\", \"onClick\", \"onFocus\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"showNeighboringMonth\", \"size\", \"changeMonthAriaLabel\", \"changeYearAriaLabel\", \"changeDayAriaLabel\", \"changeHoursAriaLabel\", \"changeMinutesAriaLabel\", \"clearFieldAriaLabel\", \"showCalendarAriaLabel\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { format, isMatch, parse } from \"date-fns\";\nimport { Icon16Clear, Icon20CalendarOutline } from \"@vkontakte/icons\";\nimport { Calendar } from \"../Calendar/Calendar\";\nimport { Popper } from \"../Popper/Popper\";\nimport { multiRef } from \"../../lib/utils\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { useDateInput } from \"../../hooks/useDateInput\";\nimport { InputLike } from \"../InputLike/InputLike\";\nimport { InputLikeDivider } from \"../InputLike/InputLikeDivider\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\n\nvar elementsConfig = function elementsConfig(index) {\n  var length = 2;\n  var min = 1;\n  var max = 0;\n\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n\n    case 1:\n      max = 12;\n      break;\n\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n\n    case 3:\n      max = 23;\n      break;\n\n    case 4:\n      max = 59;\n      break;\n  }\n\n  return {\n    length: length,\n    min: min,\n    max: max\n  };\n};\n\nvar getInternalValue = function getInternalValue(value) {\n  var newValue = [\"\", \"\", \"\", \"\", \"\"];\n\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, \"0\");\n    newValue[1] = String(value.getMonth() + 1).padStart(2, \"0\");\n    newValue[2] = String(value.getFullYear()).padStart(4, \"0\");\n    newValue[3] = String(value.getHours()).padStart(2, \"0\");\n    newValue[4] = String(value.getMinutes()).padStart(2, \"0\");\n  }\n\n  return newValue;\n};\n\nexport var DateInput = function DateInput(_ref) {\n  var enableTime = _ref.enableTime,\n      shouldDisableDate = _ref.shouldDisableDate,\n      disableFuture = _ref.disableFuture,\n      disablePast = _ref.disablePast,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$calendarPlacemen = _ref.calendarPlacement,\n      calendarPlacement = _ref$calendarPlacemen === void 0 ? \"bottom-start\" : _ref$calendarPlacemen,\n      style = _ref.style,\n      className = _ref.className,\n      doneButtonText = _ref.doneButtonText,\n      _ref$closeOnChange = _ref.closeOnChange,\n      closeOnChange = _ref$closeOnChange === void 0 ? true : _ref$closeOnChange,\n      disablePickers = _ref.disablePickers,\n      getRootRef = _ref.getRootRef,\n      name = _ref.name,\n      autoFocus = _ref.autoFocus,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      onFocus = _ref.onFocus,\n      prevMonthAriaLabel = _ref.prevMonthAriaLabel,\n      nextMonthAriaLabel = _ref.nextMonthAriaLabel,\n      showNeighboringMonth = _ref.showNeighboringMonth,\n      size = _ref.size,\n      _ref$changeMonthAriaL = _ref.changeMonthAriaLabel,\n      changeMonthAriaLabel = _ref$changeMonthAriaL === void 0 ? \"Изменить месяц\" : _ref$changeMonthAriaL,\n      _ref$changeYearAriaLa = _ref.changeYearAriaLabel,\n      changeYearAriaLabel = _ref$changeYearAriaLa === void 0 ? \"Изменить год\" : _ref$changeYearAriaLa,\n      _ref$changeDayAriaLab = _ref.changeDayAriaLabel,\n      changeDayAriaLabel = _ref$changeDayAriaLab === void 0 ? \"Изменить день\" : _ref$changeDayAriaLab,\n      _ref$changeHoursAriaL = _ref.changeHoursAriaLabel,\n      changeHoursAriaLabel = _ref$changeHoursAriaL === void 0 ? \"Изменить час\" : _ref$changeHoursAriaL,\n      _ref$changeMinutesAri = _ref.changeMinutesAriaLabel,\n      changeMinutesAriaLabel = _ref$changeMinutesAri === void 0 ? \"Изменить минуту\" : _ref$changeMinutesAri,\n      _ref$clearFieldAriaLa = _ref.clearFieldAriaLabel,\n      clearFieldAriaLabel = _ref$clearFieldAriaLa === void 0 ? \"Очистить поле\" : _ref$clearFieldAriaLa,\n      _ref$showCalendarAria = _ref.showCalendarAriaLabel,\n      showCalendarAriaLabel = _ref$showCalendarAria === void 0 ? \"Показать календарь\" : _ref$showCalendarAria,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var daysRef = React.useRef(null);\n  var monthsRef = React.useRef(null);\n  var yearsRef = React.useRef(null);\n  var hoursRef = React.useRef(null);\n  var minutesRef = React.useRef(null);\n  var maxElement = enableTime ? 4 : 2;\n  var onInternalValueChange = React.useCallback(function (internalValue) {\n    for (var i = 0; i <= maxElement; i += 1) {\n      if (internalValue[i].length < elementsConfig(i).length) {\n        return;\n      }\n    }\n\n    var formattedValue = \"\".concat(internalValue[0], \".\").concat(internalValue[1], \".\").concat(internalValue[2]);\n    var mask = \"dd.MM.yyyy\";\n\n    if (enableTime) {\n      formattedValue += \" \".concat(internalValue[3], \":\").concat(internalValue[4]);\n      mask += \" HH:mm\";\n    }\n\n    if (isMatch(formattedValue, mask)) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(parse(formattedValue, mask, value !== null && value !== void 0 ? value : new Date()));\n    }\n  }, [enableTime, maxElement, onChange, value]);\n  var refs = React.useMemo(function () {\n    return [daysRef, monthsRef, yearsRef, hoursRef, minutesRef];\n  }, [daysRef, monthsRef, yearsRef, hoursRef, minutesRef]);\n\n  var _useDateInput = useDateInput({\n    maxElement: maxElement,\n    refs: refs,\n    autoFocus: autoFocus,\n    disabled: disabled,\n    elementsConfig: elementsConfig,\n    onChange: onChange,\n    onInternalValueChange: onInternalValueChange,\n    getInternalValue: getInternalValue,\n    value: value\n  }),\n      rootRef = _useDateInput.rootRef,\n      calendarRef = _useDateInput.calendarRef,\n      open = _useDateInput.open,\n      openCalendar = _useDateInput.openCalendar,\n      closeCalendar = _useDateInput.closeCalendar,\n      internalValue = _useDateInput.internalValue,\n      handleKeyDown = _useDateInput.handleKeyDown,\n      setFocusedElement = _useDateInput.setFocusedElement,\n      handleFieldEnter = _useDateInput.handleFieldEnter,\n      clear = _useDateInput.clear,\n      removeFocusFromField = _useDateInput.removeFocusFromField;\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var onCalendarChange = React.useCallback(function (value) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(value);\n\n    if (closeOnChange && !enableTime) {\n      removeFocusFromField();\n    }\n  }, [onChange, removeFocusFromField, closeOnChange, enableTime]);\n  return createScopedElement(FormField, _extends({\n    vkuiClass: classNames(\"DateInput\", \"DateInput--sizeY-\".concat(sizeY)),\n    style: style,\n    className: className,\n    getRootRef: multiRef(rootRef, getRootRef),\n    after: value ? createScopedElement(IconButton, {\n      hoverMode: \"opacity\",\n      \"aria-label\": clearFieldAriaLabel,\n      onClick: clear\n    }, createScopedElement(Icon16Clear, null)) : createScopedElement(IconButton, {\n      hoverMode: \"opacity\",\n      \"aria-label\": showCalendarAriaLabel,\n      onClick: openCalendar\n    }, createScopedElement(Icon20CalendarOutline, null)),\n    disabled: disabled,\n    onClick: callMultiple(handleFieldEnter, onClick),\n    onFocus: callMultiple(handleFieldEnter, onFocus)\n  }, props), createScopedElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : \"dd.MM.yyyy\") : \"\"\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"DateInput__input\",\n    onKeyDown: handleKeyDown\n  }, createScopedElement(InputLike, {\n    tabIndex: 1,\n    length: 2,\n    getRootRef: daysRef,\n    index: 0,\n    onElementSelect: setFocusedElement,\n    value: internalValue[0],\n    \"aria-label\": changeDayAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \".\"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: monthsRef,\n    index: 1,\n    onElementSelect: setFocusedElement,\n    value: internalValue[1],\n    \"aria-label\": changeMonthAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \".\"), createScopedElement(InputLike, {\n    length: 4,\n    getRootRef: yearsRef,\n    index: 2,\n    onElementSelect: setFocusedElement,\n    value: internalValue[2],\n    \"aria-label\": changeYearAriaLabel\n  }), enableTime && createScopedElement(React.Fragment, null, createScopedElement(InputLikeDivider, {\n    vkuiClass: \"DateInput__input-time-divider\"\n  }, \" \"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: hoursRef,\n    index: 3,\n    onElementSelect: setFocusedElement,\n    value: internalValue[3],\n    \"aria-label\": changeHoursAriaLabel\n  }), createScopedElement(InputLikeDivider, null, \":\"), createScopedElement(InputLike, {\n    length: 2,\n    getRootRef: minutesRef,\n    index: 4,\n    onElementSelect: setFocusedElement,\n    value: internalValue[4],\n    \"aria-label\": changeMinutesAriaLabel\n  }))), open && createScopedElement(Popper, {\n    targetRef: rootRef,\n    offsetDistance: 8,\n    placement: calendarPlacement\n  }, createScopedElement(Calendar, {\n    value: value,\n    onChange: onCalendarChange,\n    enableTime: enableTime,\n    disablePast: disablePast,\n    disableFuture: disableFuture,\n    shouldDisableDate: shouldDisableDate,\n    onClose: closeCalendar,\n    getRootRef: calendarRef,\n    doneButtonText: doneButtonText,\n    disablePickers: disablePickers,\n    changeHoursAriaLabel: changeHoursAriaLabel,\n    changeMinutesAriaLabel: changeMinutesAriaLabel,\n    prevMonthAriaLabel: prevMonthAriaLabel,\n    nextMonthAriaLabel: nextMonthAriaLabel,\n    changeMonthAriaLabel: changeMonthAriaLabel,\n    changeYearAriaLabel: changeYearAriaLabel,\n    changeDayAriaLabel: changeDayAriaLabel,\n    showNeighboringMonth: showNeighboringMonth,\n    size: size\n  })));\n};","map":{"version":3,"mappings":"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","names":["React","format","isMatch","parse","Icon16Clear","Icon20CalendarOutline","Calendar","Popper","multiRef","IconButton","classNames","FormField","useDateInput","InputLike","InputLikeDivider","useAdaptivity","callMultiple","elementsConfig","index","length","min","max","getInternalValue","value","newValue","String","getDate","padStart","getMonth","getFullYear","getHours","getMinutes","DateInput","enableTime","shouldDisableDate","disableFuture","disablePast","onChange","calendarPlacement","style","className","doneButtonText","closeOnChange","disablePickers","getRootRef","name","autoFocus","disabled","onClick","onFocus","prevMonthAriaLabel","nextMonthAriaLabel","showNeighboringMonth","size","changeMonthAriaLabel","changeYearAriaLabel","changeDayAriaLabel","changeHoursAriaLabel","changeMinutesAriaLabel","clearFieldAriaLabel","showCalendarAriaLabel","props","daysRef","useRef","monthsRef","yearsRef","hoursRef","minutesRef","maxElement","onInternalValueChange","useCallback","internalValue","i","formattedValue","mask","Date","refs","useMemo","rootRef","calendarRef","open","openCalendar","closeCalendar","handleKeyDown","setFocusedElement","handleFieldEnter","clear","removeFocusFromField","sizeY","onCalendarChange","createScopedElement","vkuiClass","after","hoverMode","type","onKeyDown","tabIndex","onElementSelect","Fragment","targetRef","offsetDistance","placement","onClose"],"sources":["../../../src/components/DateInput/DateInput.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { format, isMatch, parse } from \"date-fns\";\nimport { Icon16Clear, Icon20CalendarOutline } from \"@vkontakte/icons\";\nimport { Calendar, CalendarProps } from \"../Calendar/Calendar\";\nimport { Popper, Placement } from \"../Popper/Popper\";\nimport { multiRef } from \"../../lib/utils\";\nimport IconButton from \"../IconButton/IconButton\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField } from \"../FormField/FormField\";\nimport { HasRootRef } from \"../../types\";\nimport { useDateInput } from \"../../hooks/useDateInput\";\nimport { InputLike } from \"../InputLike/InputLike\";\nimport { InputLikeDivider } from \"../InputLike/InputLikeDivider\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport \"./DateInput.css\";\n\nexport interface DateInputProps\n  extends Omit<\n      React.InputHTMLAttributes<HTMLDivElement>,\n      \"value\" | \"onChange\" | \"size\"\n    >,\n    Pick<\n      CalendarProps,\n      | \"disablePast\"\n      | \"disableFuture\"\n      | \"enableTime\"\n      | \"shouldDisableDate\"\n      | \"onChange\"\n      | \"value\"\n      | \"doneButtonText\"\n      | \"weekStartsOn\"\n      | \"disablePickers\"\n      | \"changeHoursAriaLabel\"\n      | \"changeMinutesAriaLabel\"\n      | \"prevMonthAriaLabel\"\n      | \"nextMonthAriaLabel\"\n      | \"changeMonthAriaLabel\"\n      | \"changeYearAriaLabel\"\n      | \"changeDayAriaLabel\"\n      | \"showNeighboringMonth\"\n      | \"size\"\n    >,\n    HasRootRef<HTMLDivElement> {\n  calendarPlacement?: Placement;\n  closeOnChange?: boolean;\n  clearFieldAriaLabel?: string;\n  showCalendarAriaLabel?: string;\n}\n\nconst elementsConfig = (index: number) => {\n  let length = 2;\n  let min = 1;\n  let max = 0;\n\n  switch (index) {\n    case 0:\n      max = 31;\n      break;\n    case 1:\n      max = 12;\n      break;\n    case 2:\n      max = 2100;\n      min = 1900;\n      length = 4;\n      break;\n    case 3:\n      max = 23;\n      break;\n    case 4:\n      max = 59;\n      break;\n  }\n\n  return { length, min, max };\n};\n\nconst getInternalValue = (value: CalendarProps[\"value\"]) => {\n  const newValue = [\"\", \"\", \"\", \"\", \"\"];\n  if (value) {\n    newValue[0] = String(value.getDate()).padStart(2, \"0\");\n    newValue[1] = String(value.getMonth() + 1).padStart(2, \"0\");\n    newValue[2] = String(value.getFullYear()).padStart(4, \"0\");\n    newValue[3] = String(value.getHours()).padStart(2, \"0\");\n    newValue[4] = String(value.getMinutes()).padStart(2, \"0\");\n  }\n  return newValue;\n};\n\nexport const DateInput: React.FC<DateInputProps> = ({\n  enableTime,\n  shouldDisableDate,\n  disableFuture,\n  disablePast,\n  value,\n  onChange,\n  calendarPlacement = \"bottom-start\",\n  style,\n  className,\n  doneButtonText,\n  closeOnChange = true,\n  disablePickers,\n  getRootRef,\n  name,\n  autoFocus,\n  disabled,\n  onClick,\n  onFocus,\n  prevMonthAriaLabel,\n  nextMonthAriaLabel,\n  showNeighboringMonth,\n  size,\n  changeMonthAriaLabel = \"Изменить месяц\",\n  changeYearAriaLabel = \"Изменить год\",\n  changeDayAriaLabel = \"Изменить день\",\n  changeHoursAriaLabel = \"Изменить час\",\n  changeMinutesAriaLabel = \"Изменить минуту\",\n  clearFieldAriaLabel = \"Очистить поле\",\n  showCalendarAriaLabel = \"Показать календарь\",\n  ...props\n}) => {\n  const daysRef = React.useRef<HTMLSpanElement>(null);\n  const monthsRef = React.useRef<HTMLSpanElement>(null);\n  const yearsRef = React.useRef<HTMLSpanElement>(null);\n  const hoursRef = React.useRef<HTMLSpanElement>(null);\n  const minutesRef = React.useRef<HTMLSpanElement>(null);\n\n  const maxElement = enableTime ? 4 : 2;\n\n  const onInternalValueChange = React.useCallback(\n    (internalValue: string[]) => {\n      for (let i = 0; i <= maxElement; i += 1) {\n        if (internalValue[i].length < elementsConfig(i).length) {\n          return;\n        }\n      }\n\n      let formattedValue = `${internalValue[0]}.${internalValue[1]}.${internalValue[2]}`;\n      let mask = \"dd.MM.yyyy\";\n      if (enableTime) {\n        formattedValue += ` ${internalValue[3]}:${internalValue[4]}`;\n        mask += \" HH:mm\";\n      }\n\n      if (isMatch(formattedValue, mask)) {\n        onChange?.(parse(formattedValue, mask, value ?? new Date()));\n      }\n    },\n    [enableTime, maxElement, onChange, value]\n  );\n\n  const refs = React.useMemo(\n    () => [daysRef, monthsRef, yearsRef, hoursRef, minutesRef],\n    [daysRef, monthsRef, yearsRef, hoursRef, minutesRef]\n  );\n\n  const {\n    rootRef,\n    calendarRef,\n    open,\n    openCalendar,\n    closeCalendar,\n    internalValue,\n    handleKeyDown,\n    setFocusedElement,\n    handleFieldEnter,\n    clear,\n    removeFocusFromField,\n  } = useDateInput({\n    maxElement,\n    refs,\n    autoFocus,\n    disabled,\n    elementsConfig,\n    onChange,\n    onInternalValueChange,\n    getInternalValue,\n    value,\n  });\n\n  const { sizeY } = useAdaptivity();\n\n  const onCalendarChange = React.useCallback(\n    (value?: Date | undefined) => {\n      onChange?.(value);\n      if (closeOnChange && !enableTime) {\n        removeFocusFromField();\n      }\n    },\n    [onChange, removeFocusFromField, closeOnChange, enableTime]\n  );\n\n  return (\n    <FormField\n      vkuiClass={classNames(\"DateInput\", `DateInput--sizeY-${sizeY}`)}\n      style={style}\n      className={className}\n      getRootRef={multiRef(rootRef, getRootRef)}\n      after={\n        value ? (\n          <IconButton\n            hoverMode=\"opacity\"\n            aria-label={clearFieldAriaLabel}\n            onClick={clear}\n          >\n            <Icon16Clear />\n          </IconButton>\n        ) : (\n          <IconButton\n            hoverMode=\"opacity\"\n            aria-label={showCalendarAriaLabel}\n            onClick={openCalendar}\n          >\n            <Icon20CalendarOutline />\n          </IconButton>\n        )\n      }\n      disabled={disabled}\n      onClick={callMultiple(handleFieldEnter, onClick)}\n      onFocus={callMultiple(handleFieldEnter, onFocus)}\n      {...props}\n    >\n      <input\n        type=\"hidden\"\n        name={name}\n        value={\n          value\n            ? format(value, enableTime ? \"dd.MM.yyyy'T'HH:mm\" : \"dd.MM.yyyy\")\n            : \"\"\n        }\n      />\n      <span vkuiClass=\"DateInput__input\" onKeyDown={handleKeyDown}>\n        <InputLike\n          tabIndex={1}\n          length={2}\n          getRootRef={daysRef}\n          index={0}\n          onElementSelect={setFocusedElement}\n          value={internalValue[0]}\n          aria-label={changeDayAriaLabel}\n        />\n        <InputLikeDivider>.</InputLikeDivider>\n        <InputLike\n          length={2}\n          getRootRef={monthsRef}\n          index={1}\n          onElementSelect={setFocusedElement}\n          value={internalValue[1]}\n          aria-label={changeMonthAriaLabel}\n        />\n        <InputLikeDivider>.</InputLikeDivider>\n        <InputLike\n          length={4}\n          getRootRef={yearsRef}\n          index={2}\n          onElementSelect={setFocusedElement}\n          value={internalValue[2]}\n          aria-label={changeYearAriaLabel}\n        />\n        {enableTime && (\n          <React.Fragment>\n            <InputLikeDivider vkuiClass=\"DateInput__input-time-divider\">\n              {\" \"}\n            </InputLikeDivider>\n            <InputLike\n              length={2}\n              getRootRef={hoursRef}\n              index={3}\n              onElementSelect={setFocusedElement}\n              value={internalValue[3]}\n              aria-label={changeHoursAriaLabel}\n            />\n            <InputLikeDivider>:</InputLikeDivider>\n            <InputLike\n              length={2}\n              getRootRef={minutesRef}\n              index={4}\n              onElementSelect={setFocusedElement}\n              value={internalValue[4]}\n              aria-label={changeMinutesAriaLabel}\n            />\n          </React.Fragment>\n        )}\n      </span>\n      {open && (\n        <Popper\n          targetRef={rootRef}\n          offsetDistance={8}\n          placement={calendarPlacement}\n        >\n          <Calendar\n            value={value}\n            onChange={onCalendarChange}\n            enableTime={enableTime}\n            disablePast={disablePast}\n            disableFuture={disableFuture}\n            shouldDisableDate={shouldDisableDate}\n            onClose={closeCalendar}\n            getRootRef={calendarRef}\n            doneButtonText={doneButtonText}\n            disablePickers={disablePickers}\n            changeHoursAriaLabel={changeHoursAriaLabel}\n            changeMinutesAriaLabel={changeMinutesAriaLabel}\n            prevMonthAriaLabel={prevMonthAriaLabel}\n            nextMonthAriaLabel={nextMonthAriaLabel}\n            changeMonthAriaLabel={changeMonthAriaLabel}\n            changeYearAriaLabel={changeYearAriaLabel}\n            changeDayAriaLabel={changeDayAriaLabel}\n            showNeighboringMonth={showNeighboringMonth}\n            size={size}\n          />\n        </Popper>\n      )}\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}