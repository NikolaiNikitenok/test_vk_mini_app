{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"text\", \"caption\", \"before\", \"after\", \"bottom\", \"actions\", \"multiline\", \"sizeY\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\n\nvar RichCell = function RichCell(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      sizeY = _ref.sizeY,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"RichCell\", platform), {\n      \"RichCell--mult\": multiline\n    }, \"RichCell--sizeY-\".concat(sizeY))\n  }), before, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__in\"\n  }, after, createScopedElement(Text, {\n    weight: \"medium\",\n    vkuiClass: \"RichCell__content\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__children\"\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__after\"\n  }, after)), hasReactNode(text) && createScopedElement(Text, {\n    weight: \"regular\",\n    vkuiClass: \"RichCell__text\"\n  }, text), hasReactNode(caption) && createScopedElement(Subhead, {\n    Component: \"span\",\n    vkuiClass: \"RichCell__caption\"\n  }, caption), (hasReactNode(bottom) || hasReactNode(actions)) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__bottom\"\n  }, bottom, hasReactNode(actions) && createScopedElement(\"div\", {\n    vkuiClass: \"RichCell__actions\"\n  }, actions))));\n}; // eslint-disable-next-line import/no-default-export\n\n\nexport default withAdaptivity(RichCell, {\n  sizeY: true\n});","map":{"version":3,"mappings":";;;;AACA,SAASA,UAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,SAASC,YAAT;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,cAAT;;AAoCA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAWpC;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;;AACJ,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,SACEmB,oBAACjB,QAAD,eACMe,SADN;AAEEG,aAAS,EAAErB,UAAU,CACnBE,YAAY,CAAC,UAAD,EAAaiB,QAAb,CADO,EAEnB;AACE,wBAAkBH;AADpB,KAFmB,4BAKAC,KALA;AAFvB,MAUGL,MAVH,EAWEQ;AAAKC,aAAS,EAAC;AAAf,KAEGR,KAFH,EAGEO,oBAACf,IAAD;AAAMiB,UAAM,EAAC,QAAb;AAAsBD,aAAS,EAAC;AAAhC,KACED;AAAKC,aAAS,EAAC;AAAf,KAAqCZ,QAArC,CADF,EAEGL,YAAY,CAACS,KAAD,CAAZT,IACCgB;AAAKC,aAAS,EAAC;AAAf,KAAkCR,KAAlC,CAHJ,CAHF,EASGT,YAAY,CAACM,IAAD,CAAZN,IACCgB,oBAACf,IAAD;AAAMiB,UAAM,EAAC,SAAb;AAAuBD,aAAS,EAAC;AAAjC,KACGX,IADH,CAVJ,EAcGN,YAAY,CAACO,OAAD,CAAZP,IACCgB,oBAACd,OAAD;AAASiB,aAAS,EAAC,MAAnB;AAA0BF,aAAS,EAAC;AAApC,KACGV,OADH,CAfJ,EAmBG,CAACP,YAAY,CAACU,MAAD,CAAZV,IAAwBA,YAAY,CAACW,OAAD,CAArC,KACCK;AAAKC,aAAS,EAAC;AAAf,KACGP,MADH,EAEGV,YAAY,CAACW,OAAD,CAAZX,IACCgB;AAAKC,aAAS,EAAC;AAAf,KAAoCN,OAApC,CAHJ,CApBJ,CAXF,CADF;AAdF,E,CA0DA;;;AACA,eAAeR,cAAc,CAACC,QAAD,EAAW;AAAES,OAAK,EAAE;AAAT,CAAX,CAA7B","names":["classNames","usePlatform","getClassName","Tappable","hasReactNode","Text","Subhead","withAdaptivity","RichCell","children","text","caption","before","after","bottom","actions","multiline","sizeY","restProps","platform","createScopedElement","vkuiClass","weight","Component"],"sources":["../../../src/components/RichCell/RichCell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./RichCell.css\";\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопка `<Button size=\"s\" />`. Располагается под `bottom`.\n   * Для набора кнопок следует использовать обёртку `<ButtonGroup mode=\"horizontal\" gap=\"s\">...</ButtonGroup>`.\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCell: React.FC<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"RichCell\", platform),\n        {\n          \"RichCell--mult\": multiline,\n        },\n        `RichCell--sizeY-${sizeY}`\n      )}\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n        {after}\n        <Text weight=\"medium\" vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__children\">{children}</div>\n          {hasReactNode(after) && (\n            <div vkuiClass=\"RichCell__after\">{after}</div>\n          )}\n        </Text>\n        {hasReactNode(text) && (\n          <Text weight=\"regular\" vkuiClass=\"RichCell__text\">\n            {text}\n          </Text>\n        )}\n        {hasReactNode(caption) && (\n          <Subhead Component=\"span\" vkuiClass=\"RichCell__caption\">\n            {caption}\n          </Subhead>\n        )}\n        {(hasReactNode(bottom) || hasReactNode(actions)) && (\n          <div vkuiClass=\"RichCell__bottom\">\n            {bottom}\n            {hasReactNode(actions) && (\n              <div vkuiClass=\"RichCell__actions\">{actions}</div>\n            )}\n          </div>\n        )}\n      </div>\n    </Tappable>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(RichCell, { sizeY: true });\n"]},"metadata":{},"sourceType":"module"}