{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"monthNames\", \"day\", \"month\", \"year\", \"onDateChange\", \"disabled\"],\n    _excluded2 = [\"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"day\", \"month\", \"year\", \"onDateChange\"],\n    _excluded3 = [\"hasMouse\", \"defaultValue\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport Input from \"../Input/Input\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nvar DefaultMonths = [\"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"]; // Переводим state к формату гг-мм-дд\n\nfunction convertToInputFormat(_ref) {\n  var _ref$day = _ref.day,\n      day = _ref$day === void 0 ? 0 : _ref$day,\n      _ref$month = _ref.month,\n      month = _ref$month === void 0 ? 0 : _ref$month,\n      _ref$year = _ref.year,\n      year = _ref$year === void 0 ? 0 : _ref$year;\n  return \"\".concat(year, \"-\").concat(leadingZero(month), \"-\").concat(leadingZero(day));\n} // Переводим дату формата гг-мм-дд к объекту\n\n\nfunction parseInputDate(date) {\n  var splited = date.split(\"-\");\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0])\n  };\n}\n\nfunction getMonthMaxDay(month, year) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nvar range = function range(start, end) {\n  var swap = start > end;\n  var arr = [];\n\n  for (var i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n\n  return swap ? arr.reverse() : arr;\n};\n\nvar DatePickerCustom = function DatePickerCustom(_ref2) {\n  var name = _ref2.name,\n      _ref2$min = _ref2.min,\n      min = _ref2$min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _ref2$min,\n      _ref2$max = _ref2.max,\n      max = _ref2$max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _ref2$max,\n      dayPlaceholder = _ref2.dayPlaceholder,\n      monthPlaceholder = _ref2.monthPlaceholder,\n      yearPlaceholder = _ref2.yearPlaceholder,\n      popupDirection = _ref2.popupDirection,\n      defaultValue = _ref2.defaultValue,\n      hasMouse = _ref2.hasMouse,\n      monthNames = _ref2.monthNames,\n      _ref2$day = _ref2.day,\n      day = _ref2$day === void 0 ? 0 : _ref2$day,\n      _ref2$month = _ref2.month,\n      month = _ref2$month === void 0 ? 0 : _ref2$month,\n      _ref2$year = _ref2.year,\n      year = _ref2$year === void 0 ? 0 : _ref2$year,\n      onDateChange = _ref2.onDateChange,\n      disabled = _ref2.disabled,\n      restProps = _objectWithoutProperties(_ref2, _excluded);\n\n  var onSelectChange = function onSelectChange(e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(_defineProperty({\n      day: day,\n      month: month,\n      year: year\n    }, e.target.name, Number(e.target.value)));\n  };\n\n  var dayOptions = range(1, getMonthMaxDay(month, year)).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  var monthOptions = (monthNames || DefaultMonths).map(function (name, index) {\n    return {\n      label: name,\n      value: index + 1\n    };\n  });\n  var yearOptions = range(max.year, min.year).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: \"DatePicker\"\n  }, restProps), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__container\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__day\"\n  }, createScopedElement(CustomSelect, {\n    name: \"day\",\n    value: day,\n    options: dayOptions,\n    placeholder: dayPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__month\"\n  }, createScopedElement(CustomSelect, {\n    vkuiClass: \"DatePicker__monthSelect\",\n    name: \"month\",\n    value: month,\n    options: monthOptions,\n    placeholder: monthPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__year\"\n  }, createScopedElement(CustomSelect, {\n    name: \"year\",\n    value: year,\n    options: yearOptions,\n    placeholder: yearPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  }))), createScopedElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  }));\n};\n\nvar DatePickerNative = function DatePickerNative(_ref3) {\n  var _ref3$min = _ref3.min,\n      min = _ref3$min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _ref3$min,\n      _ref3$max = _ref3.max,\n      max = _ref3$max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _ref3$max,\n      dayPlaceholder = _ref3.dayPlaceholder,\n      monthPlaceholder = _ref3.monthPlaceholder,\n      yearPlaceholder = _ref3.yearPlaceholder,\n      popupDirection = _ref3.popupDirection,\n      defaultValue = _ref3.defaultValue,\n      hasMouse = _ref3.hasMouse,\n      day = _ref3.day,\n      month = _ref3.month,\n      year = _ref3.year,\n      onDateChange = _ref3.onDateChange,\n      restProps = _objectWithoutProperties(_ref3, _excluded2);\n\n  var defProps = day && month && year ? {\n    defaultValue: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  } : {};\n  var onStringChange = React.useCallback(function (e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return createScopedElement(Input, _extends({}, restProps, {\n    type: \"date\",\n    onChange: onStringChange,\n    min: convertToInputFormat(min),\n    max: convertToInputFormat(max)\n  }, defProps));\n};\n\nvar DatePicker = function DatePicker(_ref4) {\n  var hasMouse = _ref4.hasMouse,\n      defaultValue = _ref4.defaultValue,\n      props = _objectWithoutProperties(_ref4, _excluded3);\n\n  var _React$useState = React.useState(function () {\n    return {\n      day: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.day) || 0,\n      month: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.month) || 0,\n      year: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.year) || 0\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var onDateChange = React.useCallback(function (update) {\n    setValue(update);\n    props.onDateChange && props.onDateChange(_objectSpread({}, update));\n  }, [props]);\n  var Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return createScopedElement(Cmp, _extends({}, props, value, {\n    onDateChange: onDateChange\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\n\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true\n});","map":{"version":3,"mappings":"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","names":["React","Input","withAdaptivity","leadingZero","CustomSelect","DefaultMonths","convertToInputFormat","day","month","year","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","range","start","end","swap","arr","i","Math","min","max","push","reverse","DatePickerCustom","name","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","hasMouse","monthNames","onDateChange","disabled","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","createScopedElement","vkuiClass","options","placeholder","onChange","type","DatePickerNative","defProps","onStringChange","useCallback","currentTarget","DatePicker","props","useState","setValue","update","Cmp"],"sources":["../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Input from \"../Input/Input\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { HasPlatform } from \"../../types\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport \"./DatePicker.css\";\n\nconst DefaultMonths: string[] = [\n  \"Января\",\n  \"Февраля\",\n  \"Марта\",\n  \"Апреля\",\n  \"Мая\",\n  \"Июня\",\n  \"Июля\",\n  \"Августа\",\n  \"Сентября\",\n  \"Октября\",\n  \"Ноября\",\n  \"Декабря\",\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<\n      React.HTMLAttributes<HTMLDivElement>,\n      \"defaultValue\" | \"min\" | \"max\"\n    >,\n    HasPlatform,\n    AdaptivityProps {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: \"top\" | \"bottom\";\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({\n  day = 0,\n  month = 0,\n  year = 0,\n}: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split(\"-\");\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst range = (start: number, end: number) => {\n  const swap = start > end;\n  const arr = [];\n  for (let i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n  return swap ? arr.reverse() : arr;\n};\n\nconst DatePickerCustom: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  ...restProps\n}) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div vkuiClass=\"DatePicker\" {...restProps}>\n      <div vkuiClass=\"DatePicker__container\">\n        <div vkuiClass=\"DatePicker__day\">\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__month\">\n          <CustomSelect\n            vkuiClass=\"DatePicker__monthSelect\"\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__year\">\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input\n        type=\"hidden\"\n        name={name}\n        value={convertToInputFormat({ day, month, year })}\n      />\n    </div>\n  );\n};\n\nconst DatePickerNative: React.FC<\n  DatePickerProps & Partial<DatePickerDateFormat>\n> = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}) => {\n  const defProps =\n    day && month && year\n      ? { defaultValue: convertToInputFormat({ day, month, year }) }\n      : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> =\n    React.useCallback(\n      (e) => {\n        onDateChange?.(parseInputDate(e.currentTarget.value));\n      },\n      [onDateChange]\n    );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\nconst DatePicker: React.FC<DatePickerProps> = ({\n  hasMouse,\n  defaultValue,\n  ...props\n}) => {\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(\n    () => ({\n      day: defaultValue?.day || 0,\n      month: defaultValue?.month || 0,\n      year: defaultValue?.year || 0,\n    })\n  );\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props]\n  );\n\n  const Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}