{"ast":null,"code":"import { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\nexport var AppRootPortal = function AppRootPortal(_ref) {\n  var _forcePortal;\n\n  var children = _ref.children,\n      className = _ref.className,\n      forcePortal = _ref.forcePortal;\n\n  var _React$useContext = React.useContext(AppRootContext),\n      portalRoot = _React$useContext.portalRoot,\n      mode = _React$useContext.mode;\n\n  var appearance = useAppearance();\n  forcePortal = (_forcePortal = forcePortal) !== null && _forcePortal !== void 0 ? _forcePortal : mode !== \"full\";\n  return portalRoot && forcePortal ? /*#__PURE__*/createPortal(createScopedElement(AppearanceProvider, {\n    appearance: appearance\n  }, createScopedElement(\"div\", {\n    className: className\n  }, children)), portalRoot) : createScopedElement(React.Fragment, null, children);\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,cAAT;AACA,SAASC,kBAAT;AACA,SAASC,aAAT;AAEA,OAAO,IAAMC,aAEZ,GAAG,SAFSA,aAET,OAA0C;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC5C,0BAA6BR,KAAK,CAACS,UAANT,CAAiBE,cAAjBF,CAA7B;AAAA,MAAQU,UAAR,qBAAQA,UAAR;AAAA,MAAoBC,IAApB,qBAAoBA,IAApB;;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AAEAI,aAAW,mBAAGA,WAAH,uDAAkBG,IAAI,KAAK,MAAtCH;AACA,SAAOE,UAAU,IAAIF,WAAdE,gBACLT,YAAY,CACVY,oBAACV,kBAAD;AAAoBS,cAAU,EAAEA;AAAhC,KACEC;AAAKN,aAAS,EAAEA;AAAhB,KAA4BD,QAA5B,CADF,CADU,EAIVI,UAJU,CADPA,GAQLG,oBAACb,KAAD,CAAOc,QAAP,QAAiBR,QAAjB,CARF;AAPK","names":["React","createPortal","AppRootContext","AppearanceProvider","useAppearance","AppRootPortal","children","className","forcePortal","useContext","portalRoot","mode","appearance","createScopedElement","Fragment"],"sources":["../../../src/components/AppRoot/AppRootPortal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\n\nexport const AppRootPortal: React.FC<\n  React.PropsWithChildren<{ className?: string; forcePortal?: boolean }>\n> = ({ children, className, forcePortal }) => {\n  const { portalRoot, mode } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}