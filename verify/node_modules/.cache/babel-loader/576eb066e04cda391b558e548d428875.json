{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { hasMouse as _hasMouse, hasHover as _hasHover } from \"@vkontakte/vkjs\";\nimport { AdaptivityContext, SizeType, ViewHeight, ViewWidth } from \"./AdaptivityContext\";\nimport { useDOM } from \"../../lib/dom\";\nexport var DESKTOP_SIZE = 1280;\nexport var TABLET_SIZE = 1024;\nexport var SMALL_TABLET_SIZE = 768;\nexport var MOBILE_SIZE = 320;\nexport var MOBILE_LANDSCAPE_HEIGHT = 414;\nexport var MEDIUM_HEIGHT = 720;\n\nvar AdaptivityProvider = function AdaptivityProvider(props) {\n  var adaptivityRef = React.useRef(null);\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updateAdaptivity = _React$useState2[1];\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  if (!adaptivityRef.current) {\n    adaptivityRef.current = calculateAdaptivity(window ? window.innerWidth : 0, window ? window.innerHeight : 0, props);\n  }\n\n  React.useEffect(function () {\n    function onResize() {\n      if (adaptivityRef.current === null) {\n        return;\n      }\n\n      var calculated = calculateAdaptivity(window.innerWidth, window.innerHeight, props);\n      var _adaptivityRef$curren = adaptivityRef.current,\n          viewWidth = _adaptivityRef$curren.viewWidth,\n          viewHeight = _adaptivityRef$curren.viewHeight,\n          sizeX = _adaptivityRef$curren.sizeX,\n          sizeY = _adaptivityRef$curren.sizeY,\n          hasMouse = _adaptivityRef$curren.hasMouse,\n          deviceHasHover = _adaptivityRef$curren.deviceHasHover;\n\n      if (viewWidth !== calculated.viewWidth || viewHeight !== calculated.viewHeight || sizeX !== calculated.sizeX || sizeY !== calculated.sizeY || hasMouse !== calculated.hasMouse || deviceHasHover !== calculated.deviceHasHover) {\n        adaptivityRef.current = calculated;\n        updateAdaptivity({});\n      }\n    }\n\n    onResize();\n    window.addEventListener(\"resize\", onResize, false);\n    return function () {\n      window.removeEventListener(\"resize\", onResize, false);\n    };\n  }, [props.viewWidth, props.viewHeight, props.sizeX, props.sizeY, props.hasMouse, props.deviceHasHover, window, props]);\n  return createScopedElement(AdaptivityContext.Provider, {\n    value: adaptivityRef.current\n  }, props.children);\n};\n\nfunction calculateAdaptivity(windowWidth, windowHeight, props) {\n  var _props$hasMouse, _props$deviceHasHover;\n\n  var viewWidth = ViewWidth.SMALL_MOBILE;\n  var viewHeight = ViewHeight.SMALL;\n  var sizeY = SizeType.REGULAR;\n  var sizeX = SizeType.REGULAR;\n  var hasMouse = (_props$hasMouse = props.hasMouse) !== null && _props$hasMouse !== void 0 ? _props$hasMouse : _hasMouse;\n  var deviceHasHover = (_props$deviceHasHover = props.deviceHasHover) !== null && _props$deviceHasHover !== void 0 ? _props$deviceHasHover : _hasHover;\n\n  if (windowWidth >= DESKTOP_SIZE) {\n    viewWidth = ViewWidth.DESKTOP;\n  } else if (windowWidth >= TABLET_SIZE) {\n    viewWidth = ViewWidth.TABLET;\n  } else if (windowWidth >= SMALL_TABLET_SIZE) {\n    viewWidth = ViewWidth.SMALL_TABLET;\n  } else if (windowWidth >= MOBILE_SIZE) {\n    viewWidth = ViewWidth.MOBILE;\n  } else {\n    viewWidth = ViewWidth.SMALL_MOBILE;\n  }\n\n  if (windowHeight >= MEDIUM_HEIGHT) {\n    viewHeight = ViewHeight.MEDIUM;\n  } else if (windowHeight > MOBILE_LANDSCAPE_HEIGHT) {\n    viewHeight = ViewHeight.SMALL;\n  } else {\n    viewHeight = ViewHeight.EXTRA_SMALL;\n  }\n\n  props.viewWidth && (viewWidth = props.viewWidth);\n  props.viewHeight && (viewHeight = props.viewHeight);\n\n  if (viewWidth <= ViewWidth.MOBILE) {\n    sizeX = SizeType.COMPACT;\n  }\n\n  if (viewWidth >= ViewWidth.SMALL_TABLET && hasMouse || viewHeight <= ViewHeight.EXTRA_SMALL) {\n    sizeY = SizeType.COMPACT;\n  }\n\n  props.sizeX && (sizeX = props.sizeX);\n  props.sizeY && (sizeY = props.sizeY);\n  return {\n    viewWidth: viewWidth,\n    viewHeight: viewHeight,\n    sizeX: sizeX,\n    sizeY: sizeY,\n    hasMouse: hasMouse,\n    deviceHasHover: deviceHasHover\n  };\n}\n\nexport { AdaptivityProvider };","map":{"version":3,"mappings":"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","names":["React","hasMouse","_hasMouse","hasHover","_hasHover","AdaptivityContext","SizeType","ViewHeight","ViewWidth","useDOM","DESKTOP_SIZE","TABLET_SIZE","SMALL_TABLET_SIZE","MOBILE_SIZE","MOBILE_LANDSCAPE_HEIGHT","MEDIUM_HEIGHT","AdaptivityProvider","props","adaptivityRef","useRef","useState","updateAdaptivity","window","current","calculateAdaptivity","innerWidth","innerHeight","useEffect","onResize","calculated","viewWidth","viewHeight","sizeX","sizeY","deviceHasHover","addEventListener","removeEventListener","createScopedElement","Provider","value","children","windowWidth","windowHeight","SMALL_MOBILE","SMALL","REGULAR","DESKTOP","TABLET","SMALL_TABLET","MOBILE","MEDIUM","EXTRA_SMALL","COMPACT"],"sources":["../../../src/components/AdaptivityProvider/AdaptivityProvider.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { hasMouse as _hasMouse, hasHover as _hasHover } from \"@vkontakte/vkjs\";\nimport {\n  AdaptivityContext,\n  AdaptivityProps,\n  SizeType,\n  ViewHeight,\n  ViewWidth,\n} from \"./AdaptivityContext\";\nimport { useDOM } from \"../../lib/dom\";\n\nexport const DESKTOP_SIZE = 1280;\nexport const TABLET_SIZE = 1024;\nexport const SMALL_TABLET_SIZE = 768;\nexport const MOBILE_SIZE = 320;\n\nexport const MOBILE_LANDSCAPE_HEIGHT = 414;\nexport const MEDIUM_HEIGHT = 720;\n\nconst AdaptivityProvider: React.FC<AdaptivityProps> = (props) => {\n  const adaptivityRef = React.useRef<ReturnType<\n    typeof calculateAdaptivity\n  > | null>(null);\n  const [, updateAdaptivity] = React.useState({});\n\n  const { window } = useDOM();\n\n  if (!adaptivityRef.current) {\n    adaptivityRef.current = calculateAdaptivity(\n      window ? window.innerWidth : 0,\n      window ? window.innerHeight : 0,\n      props\n    );\n  }\n\n  React.useEffect(() => {\n    function onResize() {\n      if (adaptivityRef.current === null) {\n        return;\n      }\n      const calculated = calculateAdaptivity(\n        window!.innerWidth,\n        window!.innerHeight,\n        props\n      );\n      const { viewWidth, viewHeight, sizeX, sizeY, hasMouse, deviceHasHover } =\n        adaptivityRef.current;\n\n      if (\n        viewWidth !== calculated.viewWidth ||\n        viewHeight !== calculated.viewHeight ||\n        sizeX !== calculated.sizeX ||\n        sizeY !== calculated.sizeY ||\n        hasMouse !== calculated.hasMouse ||\n        deviceHasHover !== calculated.deviceHasHover\n      ) {\n        adaptivityRef.current = calculated;\n        updateAdaptivity({});\n      }\n    }\n\n    onResize();\n    window!.addEventListener(\"resize\", onResize, false);\n\n    return () => {\n      window!.removeEventListener(\"resize\", onResize, false);\n    };\n  }, [\n    props.viewWidth,\n    props.viewHeight,\n    props.sizeX,\n    props.sizeY,\n    props.hasMouse,\n    props.deviceHasHover,\n    window,\n    props,\n  ]);\n\n  return (\n    <AdaptivityContext.Provider value={adaptivityRef.current}>\n      {props.children}\n    </AdaptivityContext.Provider>\n  );\n};\n\nfunction calculateAdaptivity(\n  windowWidth: number,\n  windowHeight: number,\n  props: AdaptivityProps\n) {\n  let viewWidth = ViewWidth.SMALL_MOBILE;\n  let viewHeight = ViewHeight.SMALL;\n  let sizeY = SizeType.REGULAR;\n  let sizeX = SizeType.REGULAR;\n  let hasMouse = props.hasMouse ?? _hasMouse;\n  let deviceHasHover = props.deviceHasHover ?? _hasHover;\n\n  if (windowWidth >= DESKTOP_SIZE) {\n    viewWidth = ViewWidth.DESKTOP;\n  } else if (windowWidth >= TABLET_SIZE) {\n    viewWidth = ViewWidth.TABLET;\n  } else if (windowWidth >= SMALL_TABLET_SIZE) {\n    viewWidth = ViewWidth.SMALL_TABLET;\n  } else if (windowWidth >= MOBILE_SIZE) {\n    viewWidth = ViewWidth.MOBILE;\n  } else {\n    viewWidth = ViewWidth.SMALL_MOBILE;\n  }\n\n  if (windowHeight >= MEDIUM_HEIGHT) {\n    viewHeight = ViewHeight.MEDIUM;\n  } else if (windowHeight > MOBILE_LANDSCAPE_HEIGHT) {\n    viewHeight = ViewHeight.SMALL;\n  } else {\n    viewHeight = ViewHeight.EXTRA_SMALL;\n  }\n\n  props.viewWidth && (viewWidth = props.viewWidth);\n  props.viewHeight && (viewHeight = props.viewHeight);\n\n  if (viewWidth <= ViewWidth.MOBILE) {\n    sizeX = SizeType.COMPACT;\n  }\n\n  if (\n    (viewWidth >= ViewWidth.SMALL_TABLET && hasMouse) ||\n    viewHeight <= ViewHeight.EXTRA_SMALL\n  ) {\n    sizeY = SizeType.COMPACT;\n  }\n\n  props.sizeX && (sizeX = props.sizeX);\n  props.sizeY && (sizeY = props.sizeY);\n\n  return { viewWidth, viewHeight, sizeX, sizeY, hasMouse, deviceHasHover };\n}\n\nexport { AdaptivityProvider };\n"]},"metadata":{},"sourceType":"module"}