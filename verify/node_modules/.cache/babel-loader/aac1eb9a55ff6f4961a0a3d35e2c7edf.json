{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k8909\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\test_vk_mini_app\\\\verify\\\\src\\\\panels\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem, List, Footer, PopoutWrapper, Textarea, Checkbox, Link, Radio, FormLayout, FormItem, Input } from '@vkontakte/vkui';\nimport { Icon28SettingsOutline, Icon28LogoVk } from '@vkontakte/icons';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [contract, setContract] = useState('');\n  const [adress, setAdress] = useState('');\n  const [ethBalance, setEthBalance] = useState('');\n  const setStateAction = {\n    name: setName,\n    email: setEmail,\n    purpose: setPurpose,\n    quantity: setQuantity,\n    symbol: setSymbol,\n    description: setDescription,\n    date: setDate,\n    whiteList: setWhiteList\n  }[name];\n\n  const verify = async () => {\n    try {\n      const currentProvider = detectCurrentProvider();\n      const ABI = [{\n        \"inputs\": [{\n          \"internalType\": \"address\",\n          \"name\": \"_tiketStor\",\n          \"type\": \"address\"\n        }],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      }, {\n        \"inputs\": [],\n        \"name\": \"tiketStor\",\n        \"outputs\": [{\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [{\n          \"internalType\": \"address\",\n          \"name\": \"_collection\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"address\",\n          \"name\": \"_user\",\n          \"type\": \"address\"\n        }],\n        \"name\": \"verifier\",\n        \"outputs\": [{\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n      }];\n\n      if (currentProvider) {\n        await currentProvider.request({\n          method: 'eth_requestAccounts'\n        });\n        const web3 = new Web3(currentProvider);\n        const userAccount = await web3.eth.getAccounts();\n        const account = userAccount[0];\n        let ethBalance = await web3.eth.getBalance(account);\n        console.log(account); // setDoneScreenSpinner();\n\n        setEthBalance(ethBalance);\n        setEthAcc(account);\n        setIsConnected(true);\n        const Address = \"0x59a195a6524b231Ce41F3Cbc8263d57F426E90E0\";\n        setEthAdd(Address);\n        window.web3 = await new Web3(window.ethereum);\n        window.contract = await new window.web3.eth.Contract(ABI, Address);\n        setWalletIsConnected(true); // counter\n\n        const countEv = await window.contract.methods.countEvent().call({\n          from: ethAcc\n        });\n        setCountEventik(countEv);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    children: /*#__PURE__*/_jsxDEV(FormLayout, {\n      children: [/*#__PURE__*/_jsxDEV(FormItem, {\n        top: \"\\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u043A\\u0442\",\n        status: contract ? 'valid' : 'error',\n        bottom: contract ? '' : 'Обязательное поле!',\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"name\",\n          name: \"contract\",\n          value: contract,\n          onChange: event => setContract(event.target.value),\n          maxLength: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n        top: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n        status: adress ? 'valid' : 'error',\n        bottom: adress ? '' : 'Обязательное поле!',\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"name\",\n          name: \"adress\",\n          value: adress,\n          onChange: event => setAdress(event.target.value),\n          maxLength: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"za6GXFDlNZiINmLxDCP96Ip5FFk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/verify/src/panels/Home.js"],"names":["React","useState","useEffect","PropTypes","string","Panel","PanelHeader","PanelHeaderBack","Header","Button","Group","Cell","Div","Avatar","Tabs","TabsItem","List","Footer","PopoutWrapper","Textarea","Checkbox","Link","Radio","FormLayout","FormItem","Input","Icon28SettingsOutline","Icon28LogoVk","Web3","Home","contract","setContract","adress","setAdress","ethBalance","setEthBalance","setStateAction","name","setName","email","setEmail","purpose","setPurpose","quantity","setQuantity","symbol","setSymbol","description","setDescription","date","setDate","whiteList","setWhiteList","verify","currentProvider","detectCurrentProvider","ABI","request","method","web3","userAccount","eth","getAccounts","account","getBalance","console","log","setEthAcc","setIsConnected","Address","setEthAdd","window","ethereum","Contract","setWalletIsConnected","countEv","methods","countEvent","call","from","ethAcc","setCountEventik","err","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport PropTypes, { string } from 'prop-types';\r\n\r\nimport { \r\n\tPanel, \r\n\tPanelHeader, \r\n\tPanelHeaderBack, \r\n\tHeader, \r\n\tButton, \r\n\tGroup, \r\n\tCell, \r\n\tDiv, \r\n\tAvatar, \r\n\tTabs, \r\n\tTabsItem, \r\n\tList, \r\n\tFooter, \r\n\tPopoutWrapper,\r\n\tTextarea,\r\n\tCheckbox,\r\n\tLink,\r\n\tRadio,\r\n\tFormLayout, \r\n\tFormItem, \r\n\tInput, \r\n} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\nimport Web3 from 'web3';\r\n\r\nconst Home = () => {\r\n\r\n\tconst[contract, setContract] = useState('')\r\n\tconst[adress, setAdress] = useState('')\r\n\tconst[ethBalance, setEthBalance] = useState('')\r\n\r\n\r\n\tconst setStateAction = {\r\n\t\tname: setName,\r\n\t\temail: setEmail,\r\n\t\tpurpose: setPurpose,\r\n\t\tquantity: setQuantity,\r\n\t\tsymbol: setSymbol,\r\n\t\tdescription: setDescription,\r\n\t\tdate: setDate,\r\n\t\twhiteList: setWhiteList,\r\n\t}[name];\r\n\r\n\tconst verify = async () => {\r\n\t\ttry {\r\n\t\t\tconst currentProvider = detectCurrentProvider();\r\n\t\t\tconst ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tiketStor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"tiketStor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\n\r\n\t\t\tif(currentProvider) {\r\n        \r\n        await currentProvider.request({method: 'eth_requestAccounts'});\r\n        const web3 = new Web3(currentProvider);\r\n        const userAccount = await web3.eth.getAccounts();\r\n        const account = userAccount[0];\r\n        let ethBalance = await web3.eth.getBalance(account);\r\n        console.log(account);\r\n        // setDoneScreenSpinner();\r\n        setEthBalance(ethBalance);\r\n        setEthAcc(account)\r\n        setIsConnected(true);\r\n      \r\n\t\t\t\tconst Address = \"0x59a195a6524b231Ce41F3Cbc8263d57F426E90E0\";\r\n\t\t\t\tsetEthAdd(Address)\r\n\t\t\t\twindow.web3 = await new Web3(window.ethereum);\r\n\t\t\t\twindow.contract = await new window.web3.eth.Contract(ABI, Address);\r\n\t\t\t\tsetWalletIsConnected(true);\r\n\r\n\r\n\t\t\t\t// counter\r\n\t\t\t\tconst countEv = await window.contract.methods.countEvent().call({ from: ethAcc })\r\n\t\t\t\tsetCountEventik(countEv)\r\n\t\t\t\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t<FormLayout>\r\n\r\n\t\t\t{/* Название */}\r\n\t\t\t<FormItem\r\n\t\t\ttop=\"Контракт\"\r\n\t\t\tstatus={contract ? 'valid' : 'error'}\r\n\t\t\tbottom={\r\n\t\t\t\tcontract ? '' : 'Обязательное поле!'\r\n\t\t\t}\r\n\t\t\t>\r\n\t\t\t<Input type=\"name\" name=\"contract\" value={contract} onChange={(event) => setContract(event.target.value)} maxLength={20}/>\r\n\t\t\t</FormItem>\r\n\t\t\t<FormItem\r\n\t\t\ttop=\"Адрес\"\r\n\t\t\tstatus={adress ? 'valid' : 'error'}\r\n\t\t\tbottom={\r\n\t\t\t\tadress ? '' : 'Обязательное поле!'\r\n\t\t\t}\r\n\t\t\t>\r\n\t\t\t<Input type=\"name\" name=\"adress\" value={adress} onChange={(event) => setAdress(event.target.value)} maxLength={20}/>\r\n\t\t\t</FormItem>\r\n\t\t\t</FormLayout>\r\n\t\t\t</Panel>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}