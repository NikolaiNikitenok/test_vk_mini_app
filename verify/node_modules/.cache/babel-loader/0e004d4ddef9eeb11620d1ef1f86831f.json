{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 36 36';\nvar id = 'replay_36';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" id=\"replay_36\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h36v36H0z\" /><path d=\"M16.976 3.524l-5.769 5.769a1 1 0 000 1.414l5.769 5.769A.6.6 0 0018 16.05V11c4.965 0 9.5 4.535 9.5 9.5S22.965 30 18 30c-4.273 0-8.228-3.36-9.247-7.46a7.558 7.558 0 01-.152-.895A1.3 1.3 0 007.31 20.5H7.25a1.165 1.165 0 00-1.16 1.274c.048.508.105.917.17 1.227C7.41 28.43 12.229 32.5 18 32.5c6.63 0 12-5.37 12-12s-5.37-12-12-12V3.949a.6.6 0 00-1.024-.425z\" fill=\"currentColor\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon36Replay = function Icon36Replay(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 36,\n    height: !isNaN(props.height) ? +props.height : 36\n  }));\n};\n\nIcon36Replay.mountIcon = mountIcon;\nexport default Icon36Replay;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,WAAX;AACA,IAAMC,OAAO,GAAG,0hBAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,YAAmC,GAAG,SAAtCA,YAAsC,CAACC,KAAD,EAAW;AACrDR,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,YAAD,CAAsBD,SAArBC,GAAiCD,SAAjCC;AAED,eAAeA,YAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon36Replay","props","createElement","width","isNaN","height"],"sources":["../../../tmp/36/replay.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 36 36';\nconst id = 'replay_36';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" id=\"replay_36\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h36v36H0z\" /><path d=\"M16.976 3.524l-5.769 5.769a1 1 0 000 1.414l5.769 5.769A.6.6 0 0018 16.05V11c4.965 0 9.5 4.535 9.5 9.5S22.965 30 18 30c-4.273 0-8.228-3.36-9.247-7.46a7.558 7.558 0 01-.152-.895A1.3 1.3 0 007.31 20.5H7.25a1.165 1.165 0 00-1.16 1.274c.048.508.105.917.17 1.227C7.41 28.43 12.229 32.5 18 32.5c6.63 0 12-5.37 12-12s-5.37-12-12-12V3.949a.6.6 0 00-1.024-.425z\" fill=\"currentColor\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon36ReplayProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon36Replay: FC<Icon36ReplayProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 36,\n    height: !isNaN(props.height) ? +props.height : 36,\n  }));\n};\n\n(Icon36Replay as any).mountIcon = mountIcon;\n\nexport default Icon36Replay;\n"]},"metadata":{},"sourceType":"module"}