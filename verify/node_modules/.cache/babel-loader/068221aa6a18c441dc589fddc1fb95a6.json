{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nvar initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\n\nfunction resolveInsets(e) {\n  var _e$detail = e.detail,\n      type = _e$detail.type,\n      data = _e$detail.data;\n\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\":\n      // Устаревшее событие vk-bridge\n      var insets = data.insets;\n\n      if (insets) {\n        return _objectSpread(_objectSpread({}, insets), {}, {\n          bottom: insets.bottom > 150 ? 0 : insets.bottom // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n\n        });\n      }\n\n  }\n\n  return null;\n}\n\nvkBridge.subscribe(function (e) {\n  var insets = resolveInsets(e);\n\n  if (insets) {\n    initialState = insets;\n  }\n});\nexport function useInsets() {\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      insets = _React$useState2[0],\n      setInsets = _React$useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    function connectListener(e) {\n      var insets = resolveInsets(e);\n\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return function () {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n  return insets;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAiD,sBAAjD;AACA,SAASC,yBAAT;AASA,IAAIC,YAAoB,GAAG;AACzBC,QAAM,EAAE,IADiB;AAEzBC,KAAG,EAAE,IAFoB;AAGzBC,MAAI,EAAE,IAHmB;AAIzBC,OAAK,EAAE;AAJkB,CAA3B;;AAgBA,SAASC,aAAT,CAAuBC,CAAvB,EAAsD;AACpD,kBAAuBA,CAAC,CAACC,MAAzB;AAAA,MAAQC,IAAR,aAAQA,IAAR;AAAA,MAAcC,IAAd,aAAcA,IAAd;;AACA,UAAQD,IAAR;AACE,SAAK,sBAAL;AACA,SAAK,sBAAL;AAA6B;AAC3B,UAAQE,MAAR,GAAmBD,IAAnB,CAAQC,MAAR;;AACA,UAAIA,MAAJ,EAAY;AACV,+CACKA,MADL;AAEET,gBAAM,EAAES,MAAM,CAACT,MAAPS,GAAgB,GAAhBA,GAAsB,CAAtBA,GAA0BA,MAAM,CAACT,MAF3C,CAEmD;;AAFnD;AAID;;AATL;;AAWA,SAAO,IAAP;AACD;;AAEDH,QAAQ,CAACa,SAATb,CAAmB,UAACQ,CAAD,EAAoB;AACrC,MAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,MAAII,MAAJ,EAAY;AACVV,gBAAY,GAAGU,MAAfV;AACD;AAJH;AAOA,OAAO,SAASY,SAAT,GAA6B;AAClC,wBAA4Bf,KAAK,CAACgB,QAANhB,CAAuBG,YAAvBH,CAA5B;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeI,SAAf;;AAEAf,2BAAyB,CAAC,YAAM;AAC9B,aAASgB,eAAT,CAAyBT,CAAzB,EAAyC;AACvC,UAAMI,MAAM,GAAGL,aAAa,CAACC,CAAD,CAA5B;;AACA,UAAII,MAAJ,EAAY;AACVI,iBAAS,CAACJ,MAAD,CAATI;AACD;AACF;;AAEDhB,YAAQ,CAACa,SAATb,CAAmBiB,eAAnBjB;AACA,WAAO,YAAM;AACXA,cAAQ,CAACkB,WAATlB,CAAqBiB,eAArBjB;AADF;AATuB,KAYtB,EAZsB,CAAzBC;AAcA,SAAOW,MAAP;AACD","names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","bottom","top","left","right","resolveInsets","e","detail","type","data","insets","subscribe","useInsets","useState","setInsets","connectListener","unsubscribe"],"sources":["../../src/hooks/useInsets.ts"],"sourcesContent":["import * as React from \"react\";\nimport vkBridge, { Insets as BridgeInsets } from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\nexport interface Insets {\n  bottom: BridgeInsets[\"bottom\"] | null;\n  top: BridgeInsets[\"top\"] | null;\n  left: BridgeInsets[\"left\"] | null;\n  right: BridgeInsets[\"right\"] | null;\n}\n\nlet initialState: Insets = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null,\n};\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nfunction resolveInsets(e: BridgeEvent): Insets | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\": // Устаревшее событие vk-bridge\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom, // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport function useInsets(): Insets {\n  const [insets, setInsets] = React.useState<Insets>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function connectListener(e: BridgeEvent) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return () => {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n"]},"metadata":{},"sourceType":"module"}