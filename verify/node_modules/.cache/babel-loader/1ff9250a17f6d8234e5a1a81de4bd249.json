{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nexport var useBooleanState = function useBooleanState() {\n  var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var setTrue = React.useCallback(function () {\n    setValue(true);\n  }, []);\n  var setFalse = React.useCallback(function () {\n    setValue(false);\n  }, []);\n  var toggle = React.useCallback(function () {\n    setValue(!value);\n  }, [value]);\n  return {\n    value: value,\n    setTrue: setTrue,\n    setFalse: setFalse,\n    toggle: toggle\n  };\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA0B;AAAA,MAAzBC,YAAyB,uEAAV,KAAU;;AACvD,wBAA0BF,KAAK,CAACG,QAANH,CAAeE,YAAfF,CAA1B;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,WAANP,CAAkB,YAAM;AACtCK,YAAQ,CAAC,IAAD,CAARA;AADc,KAEb,EAFaL,CAAhB;AAIA,MAAMQ,QAAQ,GAAGR,KAAK,CAACO,WAANP,CAAkB,YAAM;AACvCK,YAAQ,CAAC,KAAD,CAARA;AADe,KAEd,EAFcL,CAAjB;AAIA,MAAMS,MAAM,GAAGT,KAAK,CAACO,WAANP,CAAkB,YAAM;AACrCK,YAAQ,CAAC,CAACD,KAAF,CAARC;AADa,KAEZ,CAACD,KAAD,CAFYJ,CAAf;AAIA,SAAO;AAAEI,SAAK,EAALA,KAAF;AAASE,WAAO,EAAPA,OAAT;AAAkBE,YAAQ,EAARA,QAAlB;AAA4BC,UAAM,EAANA;AAA5B,GAAP;AAfK","names":["React","useBooleanState","defaultValue","useState","value","setValue","setTrue","useCallback","setFalse","toggle"],"sources":["../../src/hooks/useBooleanState.ts"],"sourcesContent":["import * as React from \"react\";\n\nexport const useBooleanState = (defaultValue = false) => {\n  const [value, setValue] = React.useState(defaultValue);\n\n  const setTrue = React.useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const setFalse = React.useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = React.useCallback(() => {\n    setValue(!value);\n  }, [value]);\n\n  return { value, setTrue, setFalse, toggle };\n};\n"]},"metadata":{},"sourceType":"module"}