{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"subtitle\", \"header\", \"text\", \"caption\", \"className\", \"mode\", \"style\", \"getRootRef\", \"getRef\", \"maxHeight\", \"image\", \"src\", \"srcSet\", \"alt\", \"width\", \"height\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"useMap\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Card } from \"../Card/Card\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { classNames } from \"../../lib/classNames\";\nvar warn = warnOnce(\"ContentCard\");\n\nvar ContentCard = function ContentCard(props) {\n  var subtitle = props.subtitle,\n      header = props.header,\n      text = props.text,\n      caption = props.caption,\n      className = props.className,\n      mode = props.mode,\n      style = props.style,\n      getRootRef = props.getRootRef,\n      getRef = props.getRef,\n      maxHeight = props.maxHeight,\n      image = props.image,\n      src = props.src,\n      srcSet = props.srcSet,\n      alt = props.alt,\n      width = props.width,\n      height = props.height,\n      crossOrigin = props.crossOrigin,\n      decoding = props.decoding,\n      loading = props.loading,\n      referrerPolicy = props.referrerPolicy,\n      sizes = props.sizes,\n      useMap = props.useMap,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var platform = usePlatform();\n  var source = image || src;\n\n  if (image && process.env.NODE_ENV === \"development\") {\n    warn(\"Свойство image устарело и будет удалено в 5.0.0. Используйте src\");\n  }\n\n  return createScopedElement(Card, {\n    mode: mode,\n    getRootRef: getRootRef,\n    vkuiClass: classNames(getClassName(\"ContentCard\", platform), {\n      \"ContentCard--disabled\": restProps.disabled\n    }),\n    style: style,\n    className: className\n  }, createScopedElement(Tappable, _extends({}, restProps, {\n    disabled: restProps.disabled || !restProps.onClick && !restProps.href,\n    hasHover: false,\n    hasActive: false,\n    vkuiClass: \"ContentCard__tappable\"\n  }), (source || srcSet) && createScopedElement(\"img\", {\n    ref: getRef,\n    vkuiClass: \"ContentCard__img\",\n    src: source,\n    srcSet: srcSet,\n    alt: alt,\n    crossOrigin: crossOrigin,\n    decoding: decoding,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    sizes: sizes,\n    useMap: useMap,\n    height: height,\n    style: {\n      maxHeight: maxHeight\n    },\n    width: \"100%\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"ContentCard__body\"\n  }, hasReactNode(subtitle) && createScopedElement(Caption, {\n    caps: true,\n    vkuiClass: \"ContentCard__text\",\n    weight: \"1\",\n    level: \"3\"\n  }, subtitle), hasReactNode(header) && createScopedElement(Title, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"3\",\n    level: \"1\"\n  }, header), hasReactNode(text) && createScopedElement(Text, {\n    vkuiClass: \"ContentCard__text\",\n    weight: \"regular\"\n  }, text), hasReactNode(caption) && createScopedElement(Caption, {\n    vkuiClass: \"ContentCard__text\"\n  }, caption))));\n};\n\nContentCard.defaultProps = {\n  mode: \"shadow\"\n}; // eslint-disable-next-line import/no-default-export\n\nexport default ContentCard;","map":{"version":3,"mappings":"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","names":["Card","Caption","Title","Text","Tappable","getClassName","usePlatform","hasReactNode","warnOnce","classNames","warn","ContentCard","props","subtitle","header","text","caption","className","mode","style","getRootRef","getRef","maxHeight","image","src","srcSet","alt","width","height","crossOrigin","decoding","loading","referrerPolicy","sizes","useMap","restProps","platform","source","process","env","NODE_ENV","createScopedElement","vkuiClass","disabled","onClick","href","hasHover","hasActive","ref","caps","weight","level","defaultProps"],"sources":["../../../src/components/ContentCard/ContentCard.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Card, CardProps } from \"../Card/Card\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./ContentCard.css\";\n\nexport interface ContentCardProps\n  extends HasRootRef<HTMLDivElement>,\n    Omit<TappableProps, \"getRootRef\" | \"crossOrigin\">,\n    Omit<\n      React.ImgHTMLAttributes<HTMLImageElement>,\n      keyof React.HTMLAttributes<HTMLImageElement>\n    >,\n    HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: React.ReactNode;\n  /**\n   Заголовок\n   */\n  header?: React.ReactNode;\n  /**\n   Текст\n   */\n  text?: React.ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: React.ReactNode;\n  /**\n    @deprecated будет удалено в 5.0.0. Используйте src\n   */\n  image?: string;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  mode?: CardProps[\"mode\"];\n}\n\nconst warn = warnOnce(\"ContentCard\");\nconst ContentCard: React.FC<ContentCardProps> = (props: ContentCardProps) => {\n  const {\n    subtitle,\n    header,\n    text,\n    caption,\n    // card props\n    className,\n    mode,\n    style,\n    getRootRef,\n    // img props\n    getRef,\n    maxHeight,\n    image,\n    src,\n    srcSet,\n    alt,\n    width,\n    height,\n    crossOrigin,\n    decoding,\n    loading,\n    referrerPolicy,\n    sizes,\n    useMap,\n    ...restProps\n  } = props;\n  const platform = usePlatform();\n\n  const source = image || src;\n\n  if (image && process.env.NODE_ENV === \"development\") {\n    warn(\"Свойство image устарело и будет удалено в 5.0.0. Используйте src\");\n  }\n\n  return (\n    <Card\n      mode={mode}\n      getRootRef={getRootRef}\n      vkuiClass={classNames(getClassName(\"ContentCard\", platform), {\n        \"ContentCard--disabled\": restProps.disabled,\n      })}\n      style={style}\n      className={className}\n    >\n      <Tappable\n        {...restProps}\n        disabled={restProps.disabled || (!restProps.onClick && !restProps.href)}\n        hasHover={false}\n        hasActive={false}\n        vkuiClass=\"ContentCard__tappable\"\n      >\n        {(source || srcSet) && (\n          <img\n            ref={getRef}\n            vkuiClass=\"ContentCard__img\"\n            src={source}\n            srcSet={srcSet}\n            alt={alt}\n            crossOrigin={crossOrigin}\n            decoding={decoding}\n            loading={loading}\n            referrerPolicy={referrerPolicy}\n            sizes={sizes}\n            useMap={useMap}\n            height={height}\n            style={{ maxHeight }}\n            width=\"100%\"\n          />\n        )}\n        <div vkuiClass=\"ContentCard__body\">\n          {hasReactNode(subtitle) && (\n            <Caption caps vkuiClass=\"ContentCard__text\" weight=\"1\" level=\"3\">\n              {subtitle}\n            </Caption>\n          )}\n          {hasReactNode(header) && (\n            <Title vkuiClass=\"ContentCard__text\" weight=\"3\" level=\"1\">\n              {header}\n            </Title>\n          )}\n          {hasReactNode(text) && (\n            <Text vkuiClass=\"ContentCard__text\" weight=\"regular\">\n              {text}\n            </Text>\n          )}\n          {hasReactNode(caption) && (\n            <Caption vkuiClass=\"ContentCard__text\">{caption}</Caption>\n          )}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n\nContentCard.defaultProps = {\n  mode: \"shadow\",\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ContentCard;\n"]},"metadata":{},"sourceType":"module"}