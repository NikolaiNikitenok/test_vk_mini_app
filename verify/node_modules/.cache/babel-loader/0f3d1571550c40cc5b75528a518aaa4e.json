{"ast":null,"code":"import { Interface, Typed } from \"../abi/index.js\";\nimport { resolveAddress } from \"../address/index.js\"; // import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\n\nimport { copyRequest, Log } from \"../providers/provider.js\";\nimport { defineProperties, isCallException, isHexString, resolveProperties, makeError, assert, assertArgument } from \"../utils/index.js\";\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog } from \"./wrappers.js\";\nconst BN_0 = BigInt(0);\n\nfunction canCall(value) {\n  return value && typeof value.call === \"function\";\n}\n\nfunction canEstimate(value) {\n  return value && typeof value.estimateGas === \"function\";\n}\n\nfunction canResolve(value) {\n  return value && typeof value.resolveName === \"function\";\n}\n\nfunction canSend(value) {\n  return value && typeof value.sendTransaction === \"function\";\n}\n\nclass PreparedTopicFilter {\n  #filter;\n  fragment;\n\n  constructor(contract, fragment, args) {\n    defineProperties(this, {\n      fragment\n    });\n\n    if (fragment.inputs.length < args.length) {\n      throw new Error(\"too many arguments\");\n    } // Recursively descend into args and resolve any addresses\n\n\n    const runner = getRunner(contract.runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n\n    this.#filter = async function () {\n      const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n        const arg = args[index];\n\n        if (arg == null) {\n          return null;\n        }\n\n        return param.walkAsync(args[index], (type, value) => {\n          if (type === \"address\") {\n            return resolveAddress(value, resolver);\n          }\n\n          return value;\n        });\n      }));\n      return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n    }();\n  }\n\n  getTopicFilter() {\n    return this.#filter;\n  }\n\n} // A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\n\n\nfunction _WrappedMethodBase() {\n  return Function;\n}\n\nfunction getRunner(value, feature) {\n  if (value == null) {\n    return null;\n  }\n\n  if (typeof value[feature] === \"function\") {\n    return value;\n  }\n\n  if (value.provider && typeof value.provider[feature] === \"function\") {\n    return value.provider;\n  }\n\n  return null;\n}\n\nfunction getProvider(value) {\n  if (value == null) {\n    return null;\n  }\n\n  return value.provider || null;\n}\n/**\n *  @_ignore:\n */\n\n\nexport async function copyOverrides(arg, allowed) {\n  // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n  const overrides = copyRequest(Typed.dereference(arg, \"overrides\"));\n  assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n  assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data); // Resolve any from\n\n  if (overrides.from) {\n    overrides.from = await resolveAddress(overrides.from);\n  }\n\n  return overrides;\n}\n/**\n *  @_ignore:\n */\n\nexport async function resolveArgs(_runner, inputs, args) {\n  // Recursively descend into args and resolve any addresses\n  const runner = getRunner(_runner, \"resolveName\");\n  const resolver = canResolve(runner) ? runner : null;\n  return await Promise.all(inputs.map((param, index) => {\n    return param.walkAsync(args[index], (type, value) => {\n      value = Typed.dereference(value, type);\n\n      if (type === \"address\") {\n        return resolveAddress(value, resolver);\n      }\n\n      return value;\n    });\n  }));\n}\n\nclass WrappedFallback {\n  _contract;\n\n  constructor(contract) {\n    defineProperties(this, {\n      _contract: contract\n    });\n    const proxy = new Proxy(this, {\n      // Perform send when called\n      apply: async (target, thisArg, args) => {\n        return await target.send(...args);\n      }\n    });\n    return proxy;\n  }\n\n  async populateTransaction(overrides) {\n    // If an overrides was passed in, copy it and normalize the values\n    const tx = await copyOverrides(overrides, [\"data\"]);\n    tx.to = await this._contract.getAddress();\n    const iface = this._contract.interface; // Only allow payable contracts to set non-zero value\n\n    const payable = iface.receive || iface.fallback && iface.fallback.payable;\n    assertArgument(payable || (tx.value || BN_0) === BN_0, \"cannot send value to non-payable contract\", \"overrides.value\", tx.value); // Only allow fallback contracts to set non-empty data\n\n    assertArgument(iface.fallback || (tx.data || \"0x\") === \"0x\", \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    return tx;\n  }\n\n  async staticCall(overrides) {\n    const runner = getRunner(this._contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await this.populateTransaction(overrides);\n\n    try {\n      return await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw this._contract.interface.makeError(error.data, tx);\n      }\n\n      throw error;\n    }\n  }\n\n  async send(overrides) {\n    const runner = this._contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await this.populateTransaction(overrides));\n    const provider = getProvider(this._contract.runner); // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n\n    return new ContractTransactionResponse(this._contract.interface, provider, tx);\n  }\n\n  async estimateGas(overrides) {\n    const runner = getRunner(this._contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await this.populateTransaction(overrides));\n  }\n\n}\n\nclass WrappedMethod extends _WrappedMethodBase() {\n  name = \"\"; // Investigate!\n\n  _contract;\n  _key;\n\n  constructor(contract, key) {\n    super();\n    defineProperties(this, {\n      name: contract.interface.getFunctionName(key),\n      _contract: contract,\n      _key: key\n    });\n    const proxy = new Proxy(this, {\n      // Perform the default operation for this fragment type\n      apply: async (target, thisArg, args) => {\n        const fragment = target.getFragment(...args);\n\n        if (fragment.constant) {\n          return await target.staticCall(...args);\n        }\n\n        return await target.send(...args);\n      }\n    });\n    return proxy;\n  } // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n\n\n  get fragment() {\n    const fragment = this._contract.interface.getFunction(this._key);\n\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n\n  getFragment() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const fragment = this._contract.interface.getFunction(this._key, args);\n\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n\n  async populateTransaction() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    const fragment = this.getFragment(...args); // If an overrides was passed in, copy it and normalize the values\n\n    let overrides = {};\n\n    if (fragment.inputs.length + 1 === args.length) {\n      overrides = await copyOverrides(args.pop());\n    }\n\n    if (fragment.inputs.length !== args.length) {\n      throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n    }\n\n    const resolvedArgs = await resolveArgs(this._contract.runner, fragment.inputs, args);\n    return Object.assign({}, overrides, await resolveProperties({\n      to: this._contract.getAddress(),\n      data: this._contract.interface.encodeFunctionData(fragment, resolvedArgs)\n    }));\n  }\n\n  async staticCall() {\n    const result = await this.staticCallResult(...arguments);\n\n    if (result.length === 1) {\n      return result[0];\n    }\n\n    return result;\n  }\n\n  async send() {\n    const runner = this._contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await this.populateTransaction(...arguments));\n    const provider = getProvider(this._contract.runner); // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n\n    return new ContractTransactionResponse(this._contract.interface, provider, tx);\n  }\n\n  async estimateGas() {\n    const runner = getRunner(this._contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await this.populateTransaction(...arguments));\n  }\n\n  async staticCallResult() {\n    const runner = getRunner(this._contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await this.populateTransaction(...arguments);\n    let result = \"0x\";\n\n    try {\n      result = await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw this._contract.interface.makeError(error.data, tx);\n      }\n\n      throw error;\n    }\n\n    const fragment = this.getFragment(...arguments);\n    return this._contract.interface.decodeFunctionResult(fragment, result);\n  }\n\n}\n\nfunction _WrappedEventBase() {\n  return Function;\n}\n\nclass WrappedEvent extends _WrappedEventBase() {\n  name = \"\"; // @TODO: investigate \n\n  _contract;\n  _key;\n\n  constructor(contract, key) {\n    super();\n    defineProperties(this, {\n      name: contract.interface.getEventName(key),\n      _contract: contract,\n      _key: key\n    });\n    return new Proxy(this, {\n      // Perform the default operation for this fragment type\n      apply: (target, thisArg, args) => {\n        return new PreparedTopicFilter(contract, target.getFragment(...args), args);\n      }\n    });\n  } // Only works on non-ambiguous keys\n\n\n  get fragment() {\n    const fragment = this._contract.interface.getEvent(this._key);\n\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n\n  getFragment() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    const fragment = this._contract.interface.getEvent(this._key, args);\n\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n\n}\n\n; // The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\n\nfunction setInternal(contract, values) {\n  internalValues.set(contract[internal], values);\n}\n\nfunction getInternal(contract) {\n  return internalValues.get(contract[internal]);\n}\n\nfunction isDeferred(value) {\n  return value && typeof value === \"object\" && \"getTopicFilter\" in value && typeof value.getTopicFilter === \"function\" && value.fragment;\n}\n\nasync function getSubInfo(contract, event) {\n  let topics;\n  let fragment = null; // Convert named events to topicHash and get the fragment for\n  // events which need deconstructing.\n\n  if (Array.isArray(event)) {\n    const topicHashify = function (name) {\n      if (isHexString(name, 32)) {\n        return name;\n      }\n\n      const fragment = contract.interface.getEvent(name);\n      assertArgument(fragment, \"unknown fragment\", \"name\", name);\n      return fragment.topicHash;\n    }; // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n\n\n    topics = event.map(e => {\n      if (e == null) {\n        return null;\n      }\n\n      if (Array.isArray(e)) {\n        return e.map(topicHashify);\n      }\n\n      return topicHashify(e);\n    });\n  } else if (event === \"*\") {\n    topics = [null];\n  } else if (typeof event === \"string\") {\n    if (isHexString(event, 32)) {\n      // Topic Hash\n      topics = [event];\n    } else {\n      // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n      fragment = contract.interface.getEvent(event);\n      assertArgument(fragment, \"unknown fragment\", \"event\", event);\n      topics = [fragment.topicHash];\n    }\n  } else if (isDeferred(event)) {\n    // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n    topics = await event.getTopicFilter();\n  } else if (\"fragment\" in event) {\n    // ContractEvent; e.g. `contract.filter.Transfer`\n    fragment = event.fragment;\n    topics = [fragment.topicHash];\n  } else {\n    assertArgument(false, \"unknown event name\", \"event\", event);\n  } // Normalize topics and sort TopicSets\n\n\n  topics = topics.map(t => {\n    if (t == null) {\n      return null;\n    }\n\n    if (Array.isArray(t)) {\n      const items = Array.from(new Set(t.map(t => t.toLowerCase())).values());\n\n      if (items.length === 1) {\n        return items[0];\n      }\n\n      items.sort();\n      return items;\n    }\n\n    return t.toLowerCase();\n  });\n  const tag = topics.map(t => {\n    if (t == null) {\n      return \"null\";\n    }\n\n    if (Array.isArray(t)) {\n      return t.join(\"|\");\n    }\n\n    return t;\n  }).join(\"&\");\n  return {\n    fragment,\n    tag,\n    topics\n  };\n}\n\nasync function hasSub(contract, event) {\n  const {\n    subs\n  } = getInternal(contract);\n  return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\nasync function getSub(contract, operation, event) {\n  // Make sure our runner can actually subscribe to events\n  const provider = getProvider(contract.runner);\n  assert(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n  const {\n    fragment,\n    tag,\n    topics\n  } = await getSubInfo(contract, event);\n  const {\n    addr,\n    subs\n  } = getInternal(contract);\n  let sub = subs.get(tag);\n\n  if (!sub) {\n    const address = addr ? addr : contract;\n    const filter = {\n      address,\n      topics\n    };\n\n    const listener = log => {\n      let foundFragment = fragment;\n\n      if (foundFragment == null) {\n        try {\n          foundFragment = contract.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      } // If fragment is null, we do not deconstruct the args to emit\n\n\n      if (foundFragment) {\n        const _foundFragment = foundFragment;\n        const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n        emit(contract, event, args, listener => {\n          return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n        });\n      } else {\n        emit(contract, event, [], listener => {\n          return new ContractUnknownEventPayload(contract, listener, event, log);\n        });\n      }\n    };\n\n    let starting = [];\n\n    const start = () => {\n      if (starting.length) {\n        return;\n      }\n\n      starting.push(provider.on(filter, listener));\n    };\n\n    const stop = async () => {\n      if (starting.length == 0) {\n        return;\n      }\n\n      let started = starting;\n      starting = [];\n      await Promise.all(started);\n      provider.off(filter, listener);\n    };\n\n    sub = {\n      tag,\n      listeners: [],\n      start,\n      stop\n    };\n    subs.set(tag, sub);\n  }\n\n  return sub;\n} // We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\n\n\nlet lastEmit = Promise.resolve();\n\nasync function _emit(contract, event, args, payloadFunc) {\n  await lastEmit;\n  const sub = await hasSub(contract, event);\n\n  if (!sub) {\n    return false;\n  }\n\n  const count = sub.listeners.length;\n  sub.listeners = sub.listeners.filter(_ref => {\n    let {\n      listener,\n      once\n    } = _ref;\n    const passArgs = Array.from(args);\n\n    if (payloadFunc) {\n      passArgs.push(payloadFunc(once ? null : listener));\n    }\n\n    try {\n      listener.call(contract, ...passArgs);\n    } catch (error) {}\n\n    return !once;\n  });\n  return count > 0;\n}\n\nasync function emit(contract, event, args, payloadFunc) {\n  try {\n    await lastEmit;\n  } catch (error) {}\n\n  const resultPromise = _emit(contract, event, args, payloadFunc);\n\n  lastEmit = resultPromise;\n  return await resultPromise;\n}\n\nconst passProperties = [\"then\"];\nexport class BaseContract {\n  target;\n  interface;\n  runner;\n  filters;\n  [internal];\n  fallback;\n\n  constructor(target, abi, runner, _deployTx) {\n    if (runner == null) {\n      runner = null;\n    }\n\n    const iface = Interface.from(abi);\n    defineProperties(this, {\n      target,\n      runner,\n      interface: iface\n    });\n    Object.defineProperty(this, internal, {\n      value: {}\n    });\n    let addrPromise;\n    let addr = null;\n    let deployTx = null;\n\n    if (_deployTx) {\n      const provider = getProvider(runner); // @TODO: the provider can be null; make a custom dummy provider that will throw a\n      // meaningful error\n\n      deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n    }\n\n    let subs = new Map(); // Resolve the target as the address\n\n    if (typeof target === \"string\") {\n      if (isHexString(target)) {\n        addr = target;\n        addrPromise = Promise.resolve(target);\n      } else {\n        const resolver = getRunner(runner, \"resolveName\");\n\n        if (!canResolve(resolver)) {\n          throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"resolveName\"\n          });\n        }\n\n        addrPromise = resolver.resolveName(target).then(addr => {\n          if (addr == null) {\n            throw new Error(\"TODO\");\n          }\n\n          getInternal(this).addr = addr;\n          return addr;\n        });\n      }\n    } else {\n      addrPromise = target.getAddress().then(addr => {\n        if (addr == null) {\n          throw new Error(\"TODO\");\n        }\n\n        getInternal(this).addr = addr;\n        return addr;\n      });\n    } // Set our private values\n\n\n    setInternal(this, {\n      addrPromise,\n      addr,\n      deployTx,\n      subs\n    }); // Add the event filters\n\n    const filters = new Proxy({}, {\n      get: (target, _prop, receiver) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n\n        const prop = String(_prop);\n        const result = this.getEvent(prop);\n\n        if (result) {\n          return result;\n        }\n\n        throw new Error(`unknown contract event: ${prop}`);\n      }\n    });\n    defineProperties(this, {\n      filters\n    });\n    defineProperties(this, {\n      fallback: iface.receive || iface.fallback ? new WrappedFallback(this) : null\n    }); // Return a Proxy that will respond to functions\n\n    return new Proxy(this, {\n      get: (target, _prop, receiver) => {\n        if (_prop in target || passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n\n        const prop = String(_prop);\n        const result = target.getFunction(prop);\n\n        if (result) {\n          return result;\n        }\n\n        throw new Error(`unknown contract method: ${prop}`);\n      }\n    });\n  }\n\n  connect(runner) {\n    return new BaseContract(this.target, this.interface, runner);\n  }\n\n  async getAddress() {\n    return await getInternal(this).addrPromise;\n  }\n\n  async getDeployedCode() {\n    const provider = getProvider(this.runner);\n    assert(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"getDeployedCode\"\n    });\n    const code = await provider.getCode(await this.getAddress());\n\n    if (code === \"0x\") {\n      return null;\n    }\n\n    return code;\n  }\n\n  async waitForDeployment() {\n    // We have the deployement transaction; just use that (throws if deployement fails)\n    const deployTx = this.deploymentTransaction();\n\n    if (deployTx) {\n      await deployTx.wait();\n      return this;\n    } // Check for code\n\n\n    const code = await this.getDeployedCode();\n\n    if (code != null) {\n      return this;\n    } // Make sure we can subscribe to a provider event\n\n\n    const provider = getProvider(this.runner);\n    assert(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"waitForDeployment\"\n    });\n    return new Promise((resolve, reject) => {\n      const checkCode = async () => {\n        try {\n          const code = await this.getDeployedCode();\n\n          if (code != null) {\n            return resolve(this);\n          }\n\n          provider.once(\"block\", checkCode);\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      checkCode();\n    });\n  }\n\n  deploymentTransaction() {\n    return getInternal(this).deployTx;\n  }\n\n  getFunction(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n\n    return new WrappedMethod(this, key);\n  }\n\n  getEvent(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n\n    return new WrappedEvent(this, key);\n  }\n\n  async queryTransaction(hash) {\n    // Is this useful?\n    throw new Error(\"@TODO\");\n  }\n\n  async queryFilter(event, fromBlock, toBlock) {\n    if (fromBlock == null) {\n      fromBlock = 0;\n    }\n\n    if (toBlock == null) {\n      toBlock = \"latest\";\n    }\n\n    const {\n      addr,\n      addrPromise\n    } = getInternal(this);\n    const address = addr ? addr : await addrPromise;\n    const {\n      fragment,\n      topics\n    } = await getSubInfo(this, event);\n    const filter = {\n      address,\n      topics,\n      fromBlock,\n      toBlock\n    };\n    const provider = getProvider(this.runner);\n    assert(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"queryFilter\"\n    });\n    return (await provider.getLogs(filter)).map(log => {\n      let foundFragment = fragment;\n\n      if (foundFragment == null) {\n        try {\n          foundFragment = this.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n\n      if (foundFragment) {\n        return new EventLog(log, this.interface, foundFragment);\n      } else {\n        return new Log(log, provider);\n      }\n    });\n  }\n\n  async on(event, listener) {\n    const sub = await getSub(this, \"on\", event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    sub.start();\n    return this;\n  }\n\n  async once(event, listener) {\n    const sub = await getSub(this, \"once\", event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    sub.start();\n    return this;\n  }\n\n  async emit(event) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    return await emit(this, event, args, null);\n  }\n\n  async listenerCount(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n\n      if (!sub) {\n        return 0;\n      }\n\n      return sub.listeners.length;\n    }\n\n    const {\n      subs\n    } = getInternal(this);\n    let total = 0;\n\n    for (const {\n      listeners\n    } of subs.values()) {\n      total += listeners.length;\n    }\n\n    return total;\n  }\n\n  async listeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n\n      if (!sub) {\n        return [];\n      }\n\n      return sub.listeners.map(_ref2 => {\n        let {\n          listener\n        } = _ref2;\n        return listener;\n      });\n    }\n\n    const {\n      subs\n    } = getInternal(this);\n    let result = [];\n\n    for (const {\n      listeners\n    } of subs.values()) {\n      result = result.concat(listeners.map(_ref3 => {\n        let {\n          listener\n        } = _ref3;\n        return listener;\n      }));\n    }\n\n    return result;\n  }\n\n  async off(event, listener) {\n    const sub = await hasSub(this, event);\n\n    if (!sub) {\n      return this;\n    }\n\n    if (listener) {\n      const index = sub.listeners.map(_ref4 => {\n        let {\n          listener\n        } = _ref4;\n        return listener;\n      }).indexOf(listener);\n\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n\n    if (listener == null || sub.listeners.length === 0) {\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    }\n\n    return this;\n  }\n\n  async removeAllListeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n\n      if (!sub) {\n        return this;\n      }\n\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    } else {\n      const {\n        subs\n      } = getInternal(this);\n\n      for (const {\n        tag,\n        stop\n      } of subs.values()) {\n        stop();\n        subs.delete(tag);\n      }\n    }\n\n    return this;\n  } // Alias for \"on\"\n\n\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  } // Alias for \"off\"\n\n\n  async removeListener(event, listener) {\n    return await this.off(event, listener);\n  }\n\n  static buildClass(abi) {\n    class CustomContract extends BaseContract {\n      constructor(address) {\n        let runner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        super(address, abi, runner);\n      }\n\n    }\n\n    return CustomContract;\n  }\n\n  static from(target, abi, runner) {\n    if (runner == null) {\n      runner = null;\n    }\n\n    const contract = new this(target, abi, runner);\n    return contract;\n  }\n\n}\n\nfunction _ContractBase() {\n  return BaseContract;\n}\n\nexport class Contract extends _ContractBase() {}","map":{"version":3,"mappings":"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","names":["Interface","Typed","resolveAddress","copyRequest","Log","defineProperties","isCallException","isHexString","resolveProperties","makeError","assert","assertArgument","ContractEventPayload","ContractUnknownEventPayload","ContractTransactionResponse","EventLog","BN_0","BigInt","canCall","value","call","canEstimate","estimateGas","canResolve","resolveName","canSend","sendTransaction","PreparedTopicFilter","fragment","constructor","contract","args","inputs","length","Error","runner","getRunner","resolver","resolvedArgs","Promise","all","map","param","index","arg","walkAsync","type","interface","encodeFilterTopics","getTopicFilter","_WrappedMethodBase","Function","feature","provider","getProvider","copyOverrides","allowed","overrides","dereference","to","indexOf","data","from","resolveArgs","_runner","WrappedFallback","_contract","proxy","Proxy","apply","target","thisArg","send","populateTransaction","tx","getAddress","iface","payable","receive","fallback","staticCall","operation","error","WrappedMethod","name","_key","key","getFunctionName","getFragment","constant","getFunction","pop","Object","assign","encodeFunctionData","result","staticCallResult","decodeFunctionResult","_WrappedEventBase","WrappedEvent","getEventName","getEvent","internal","Symbol","for","internalValues","WeakMap","setInternal","values","set","getInternal","get","isDeferred","getSubInfo","event","topics","Array","isArray","topicHashify","topicHash","e","t","items","Set","toLowerCase","sort","tag","join","hasSub","subs","getSub","addr","sub","address","filter","listener","log","foundFragment","_foundFragment","decodeEventLog","emit","starting","start","push","on","stop","started","off","listeners","lastEmit","resolve","_emit","payloadFunc","count","once","passArgs","resultPromise","passProperties","BaseContract","filters","abi","_deployTx","defineProperty","addrPromise","deployTx","Map","then","_prop","receiver","Reflect","prop","String","connect","getDeployedCode","code","getCode","waitForDeployment","deploymentTransaction","wait","reject","checkCode","format","queryTransaction","hash","queryFilter","fromBlock","toBlock","getLogs","listenerCount","total","concat","splice","delete","removeAllListeners","addListener","removeListener","buildClass","CustomContract","_ContractBase","Contract"],"sourceRoot":"","sources":["../../src.ts/contract/contract.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}