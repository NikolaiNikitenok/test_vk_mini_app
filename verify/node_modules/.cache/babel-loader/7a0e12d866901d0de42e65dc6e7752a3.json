{"ast":null,"code":"//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { getBytes } from \"./data.js\";\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  const data = Array.prototype.slice.call(getBytes(object, \"object\"));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nconst nibbles = \"0123456789abcdef\";\n/**\r\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\r\n */\n\nexport function encodeRlp(object) {\n  let result = \"0x\";\n\n  for (const v of _encode(object)) {\n    result += nibbles[v >> 4];\n    result += nibbles[v & 0xf];\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAASA,QAAT,QAAyB,WAAzB;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAsC;AAClC,QAAMC,MAAM,GAAG,EAAf;;AACA,SAAOD,KAAP,EAAc;AACVC,UAAM,CAACC,OAAP,CAAeF,KAAK,GAAG,IAAvB;AACAA,SAAK,KAAK,CAAV;AACH;;AACD,SAAOC,MAAP;AACH;;AAED,SAASE,OAAT,CAAiBC,MAAjB,EAA4C;AACxC,MAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACvB,QAAIG,OAAO,GAAkB,EAA7B;AACAH,UAAM,CAACI,OAAP,CAAe,UAASC,KAAT,EAAc;AACzBF,aAAO,GAAGA,OAAO,CAACG,MAAR,CAAeP,OAAO,CAACM,KAAD,CAAtB,CAAV;AACH,KAFD;;AAIA,QAAIF,OAAO,CAACI,MAAR,IAAkB,EAAtB,EAA0B;AACtBJ,aAAO,CAACL,OAAR,CAAgB,OAAOK,OAAO,CAACI,MAA/B;AACA,aAAOJ,OAAP;AACH;;AAED,UAAMI,MAAM,GAAGZ,eAAe,CAACQ,OAAO,CAACI,MAAT,CAA9B;AACAA,UAAM,CAACT,OAAP,CAAe,OAAOS,MAAM,CAACA,MAA7B;AAEA,WAAOA,MAAM,CAACD,MAAP,CAAcH,OAAd,CAAP;AAEH;;AAED,QAAMK,IAAI,GAAkBP,KAAK,CAACQ,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BjB,QAAQ,CAACM,MAAD,EAAS,QAAT,CAAnC,CAA5B;;AAEA,MAAIQ,IAAI,CAACD,MAAL,KAAgB,CAAhB,IAAqBC,IAAI,CAAC,CAAD,CAAJ,IAAW,IAApC,EAA0C;AACtC,WAAOA,IAAP;AAEH,GAHD,MAGO,IAAIA,IAAI,CAACD,MAAL,IAAe,EAAnB,EAAuB;AAC1BC,QAAI,CAACV,OAAL,CAAa,OAAOU,IAAI,CAACD,MAAzB;AACA,WAAOC,IAAP;AACH;;AAED,QAAMD,MAAM,GAAGZ,eAAe,CAACa,IAAI,CAACD,MAAN,CAA9B;AACAA,QAAM,CAACT,OAAP,CAAe,OAAOS,MAAM,CAACA,MAA7B;AAEA,SAAOA,MAAM,CAACD,MAAP,CAAcE,IAAd,CAAP;AACH;;AAED,MAAMI,OAAO,GAAG,kBAAhB;AAEA;;;;AAGA,OAAM,SAAUC,SAAV,CAAoBb,MAApB,EAA6C;AAC/C,MAAIH,MAAM,GAAG,IAAb;;AACA,OAAK,MAAMiB,CAAX,IAAgBf,OAAO,CAACC,MAAD,CAAvB,EAAiC;AAC7BH,UAAM,IAAIe,OAAO,CAACE,CAAC,IAAI,CAAN,CAAjB;AACAjB,UAAM,IAAIe,OAAO,CAACE,CAAC,GAAG,GAAL,CAAjB;AACH;;AACD,SAAOjB,MAAP;AACH","names":["getBytes","arrayifyInteger","value","result","unshift","_encode","object","Array","isArray","payload","forEach","child","concat","length","data","prototype","slice","call","nibbles","encodeRlp","v"],"sourceRoot":"","sources":["../../src.ts/utils/rlp-encode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}