{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k8909\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\test_vk_mini_app\\\\test\\\\src\\\\panels\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // import {ethers} from './dist/ethers.min.js'; \n\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton, ScreenSpinner } from '@vkontakte/vkui';\nimport { Icon28SettingsOutline, Icon28LogoVk, Icon16Done } from '@vkontakte/icons'; // import MetaMask from 'metamask-connect';\n\nimport Web3 from 'web3'; // import WalletConnectProvider from '@walletconnect/web3-provider';\n\nimport './Persik.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = _ref => {\n  _s();\n\n  let {\n    id,\n    go\n  } = _ref;\n  // const [userAccount, setUserAccount] = useState(null);\n  // const onConnect = () => {\n  // \tlet provider;\n  // \tif (window.ethereum) {\n  // \t\t//если есть метамаск\n  // \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\n  // \t\t\tsetUserAccount(account[0]);\n  // \t\t\tgetBalance(account[0]);\n  // \t\t})\n  // \t} else if (window.web3) {\n  // \t\tprovider = window.web3.currentProvider;\n  // \t} else {\n  // \t\talert(\"Установите МетаМаск!\")\n  // \t}\n  // };\n  // const getBalance = (account) => {\n  // \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\n  // \t\tconsole.log(balance)\t\n  // \t})\n  // };\n  const [isConnected, setIsConnected] = useState(false);\n  const [ethBalance, setEthBalance] = useState(\"\");\n  const [ethAcc, setEthAcc] = useState('');\n  const [ethAdd, setEthAdd] = useState('');\n  const [popout, setPopout] = useState(null);\n\n  const clearPopout = () => setPopout(null);\n\n  const setDoneScreenSpinner = () => {\n    setPopout( /*#__PURE__*/_jsxDEV(ScreenSpinner, {\n      state: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this));\n    setTimeout(() => {\n      setPopout( /*#__PURE__*/_jsxDEV(ScreenSpinner, {\n        state: \"done\",\n        \"aria-label\": \"\\u0423\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this));\n      setTimeout(clearPopout, 1000);\n    }, 2000);\n  };\n\n  const detectCurrentProvider = () => {\n    let provider;\n\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\n    }\n\n    return provider;\n  };\n\n  const onConnect = async () => {\n    try {\n      const currentProvider = detectCurrentProvider();\n\n      if (currentProvider) {\n        await currentProvider.request({\n          method: 'eth_requestAccounts'\n        });\n        const web3 = new Web3(currentProvider);\n        const userAccount = await web3.eth.getAccounts();\n        const account = userAccount[0];\n        let ethBalance = await web3.eth.getBalance(account);\n        console.log(account); // setDoneScreenSpinner();\n\n        setEthBalance(ethBalance);\n        setEthAcc(account);\n        setIsConnected(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectContract = async () => {\n    const ABI = [{\n      \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_name\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"_symbol\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"_discription\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"_supply\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"_format\",\n        \"type\": \"bool\"\n      }],\n      \"name\": \"createEvent\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"addressStor\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"addressTiket\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"incidents\",\n      \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"fabric\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"supply\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"discription\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"format\",\n        \"type\": \"bool\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"ticketCollection\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }];\n    const Address = \"0x14A0cc3D250631032c0A1E91036E817adDec51C1\";\n    setEthAdd(Address);\n    window.web3 = await new Web3(window.ethereum);\n    window.contract = await new window.web3.eth.Contract(ABI, Address); // document.getElementById(\"contractArea\").innerHTML = \"Connected to smart-contract\";\n  };\n\n  const onDisconnect = () => {\n    setIsConnected(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Panel>\n    // \t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\n    // \t</PanelHeader>\n    // \t<Tabs>\n    // \t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\n    // \t\t{/* <TabsItem>Купить билеты</TabsItem> */}\n    // \t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\n    // \t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\n    // \t</Tabs>\n    // \t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\n    // \t\t<Div>\t\n    // \t\t\t{userAccount ? (\n    //                     <>\n    //                         <span>Кошелек подключен!!!</span>\n    //                     </>\n    // \t\t\t\t) : (\n    // \t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\n    // \t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\n    // \t\t\t\t\t)}\n    // \t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\n    // \t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\n    // \t\t</Div>\n    // \t</Group>\n    // </Panel>\n    _jsxDEV(Panel, {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        left: /*#__PURE__*/_jsxDEV(Icon28LogoVk, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 26\n        }, this),\n        children: \" NFT for Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabsItem, {\n          onClick: go,\n          \"data-to\": \"home\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TabsItem, {\n          onClick: go,\n          \"data-to\": \"inventory\",\n          children: \"\\u041C\\u043E\\u0438 \\u041C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TabsItem, {\n          selected: true,\n          onClick: go,\n          \"data-to\": \"settings\",\n          children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        className: \"app-wrapper\",\n        header: /*#__PURE__*/_jsxDEV(Header, {\n          mode: \"secondary\",\n          children: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u0435 MetaMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 46\n        }, this),\n        children: [!isConnected && /*#__PURE__*/_jsxDEV(Div, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"app-button__login\",\n            stretched: true,\n            size: \"l\",\n            mode: \"secondary\",\n            onClick: onConnect,\n            children: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C MetaMask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), isConnected && /*#__PURE__*/_jsxDEV(Div, {\n          className: \"app-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" \\u0412\\u044B \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0438\\u0441\\u044C \\u043A MetaMask.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-balance\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), ethBalance / 10 ** 18]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u0410\\u0434\\u0440\\u0435\\u0441: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), ethAcc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u041A\\u043E\\u043D\\u0442\\u0440\\u0430\\u043A\\u0442\\u0430: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), ethAdd]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              stretched: true,\n              size: \"l\",\n              mode: \"secondary\",\n              onClick: connectContract,\n              children: \"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F \\u043A \\u043A\\u043E\\u043D\\u0442\\u0440\\u0430\\u043A\\u0442\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"app-buttons__logout\",\n              stretched: true,\n              size: \"l\",\n              mode: \"secondary\",\n              onClick: onDisconnect,\n              children: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }, this)\n  ); // const [isConnected, setIsConnected] = useState(false);\n  // const [ethBalance, setEthBalance] = useState(\"\");\n  // const detectCurrentProvider = () => {\n  //   let provider;\n  //   if (window.ethereum) {\n  //     provider = window.ethereum;\n  //   } else if (window.web3) {\n  //     provider = window.web3.currentProvider;\n  //   } else {\n  //     console.log(\"Non-ethereum browser detected. You should install Metamask\");\n  //   }\n  //   return provider;\n  // };\n  // const onConnect = async() => {\n  //   try {\n  //     const currentProvider = detectCurrentProvider();\n  //     if(currentProvider) {\n  //       await currentProvider.request({method: 'eth_requestAccounts'});\n  //       const web3 = new Web3(currentProvider);\n  //       const userAccount  =await web3.eth.getAccounts();\n  //       const account = userAccount[0];\n  //       let ethBalance = await web3.eth.getBalance(account);\n  //       setEthBalance(ethBalance);\n  //       setIsConnected(true);\n  //     }\n  //   } catch(err) {\n  //     console.log(err);\n  //   }\n  // }\n  // const onDisconnect = () => {\n  //   setIsConnected(false);\n  // }\n  // return (\n  //   <div className=\"app\">\n  //     <div className=\"app-header\">\n  //       <h1>React dApp authentication with React, We3.js and Metamask</h1>\n  //     </div>\n  //     <div className=\"app-wrapper\">\n  //       {!isConnected && (\n  //         <div>\n  //           <button className=\"app-button__login\" onClick={onConnect}>\n  //           Login\n  //           </button>\n  //         </div>\n  //       )}\n  //     </div>\n  //     {isConnected && (\n  //       <div className=\"app-wrapper\">\n  //         <div className=\"app-details\">\n  //           <h2> You are connected to metamask.</h2>\n  //           <div className=\"app-balance\">\n  //             <span>Balance: </span>\n  //             {ethBalance}\n  //           </div>\n  //         </div>\n  //         <div>\n  //           <button className=\"app-buttons__logout\" onClick={onDisconnect}>\n  //           Disconnect\n  //           </button>\n  //         </div>\n  //       </div>\n  //     )}\n  //   </div>\n  // );\n};\n\n_s(Settings, \"tohRVH/7GYT+Uhd2LqzCyiWsXho=\");\n\n_c = Settings;\nSettings.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n}; // Inventory.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\n\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/src/panels/Settings.js"],"names":["React","useState","useEffect","PropTypes","Button","Group","Panel","PanelHeader","PanelHeaderBack","Div","Header","TabsItem","Tabs","Snackbar","Avatar","CellButton","ScreenSpinner","Icon28SettingsOutline","Icon28LogoVk","Icon16Done","Web3","Settings","id","go","isConnected","setIsConnected","ethBalance","setEthBalance","ethAcc","setEthAcc","ethAdd","setEthAdd","popout","setPopout","clearPopout","setDoneScreenSpinner","setTimeout","detectCurrentProvider","provider","window","ethereum","web3","currentProvider","console","log","onConnect","request","method","userAccount","eth","getAccounts","account","getBalance","err","connectContract","ABI","Address","contract","Contract","onDisconnect","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from './dist/ethers.min.js'; \r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton, ScreenSpinner} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk, Icon16Done} from '@vkontakte/icons';\r\n// import MetaMask from 'metamask-connect';\r\nimport Web3 from 'web3';\r\n// import WalletConnectProvider from '@walletconnect/web3-provider';\r\n\r\nimport './Persik.css';\r\n\r\nconst Settings = ({id, go}) => {\r\n\t// const [userAccount, setUserAccount] = useState(null);\r\n\r\n\t// const onConnect = () => {\r\n\t// \tlet provider;\r\n\t// \tif (window.ethereum) {\r\n\t// \t\t//если есть метамаск\r\n\t// \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t// \t\t\tsetUserAccount(account[0]);\r\n\t// \t\t\tgetBalance(account[0]);\r\n\t// \t\t})\r\n\t// \t} else if (window.web3) {\r\n\t// \t\tprovider = window.web3.currentProvider;\r\n\t// \t} else {\r\n\t// \t\talert(\"Установите МетаМаск!\")\r\n\t// \t}\r\n\t// };\r\n\r\n\t// const getBalance = (account) => {\r\n\t// \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t// \t\tconsole.log(balance)\t\r\n\t// \t})\r\n\t// };\r\n    \r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [ethBalance, setEthBalance] = useState(\"\");\r\n  const [ethAcc, setEthAcc] = useState('');\r\n  const [ethAdd, setEthAdd] = useState('');\r\n  const [popout, setPopout] = useState(null);\r\n  const clearPopout = () => setPopout(null);\r\n\r\n  const setDoneScreenSpinner = () => {\r\n    setPopout(<ScreenSpinner state=\"loading\" />);\r\n  \r\n    setTimeout(() => {\r\n      setPopout(<ScreenSpinner state=\"done\" aria-label=\"Успешно\" />);\r\n  \r\n      setTimeout(clearPopout, 1000);\r\n    }, 2000);\r\n  };\r\n  \r\n  const detectCurrentProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n    }\r\n    return provider;\r\n  };\r\n  \r\n  const onConnect = async() => {\r\n    try {\r\n      const currentProvider = detectCurrentProvider();\r\n      if(currentProvider) {\r\n        \r\n        await currentProvider.request({method: 'eth_requestAccounts'});\r\n        const web3 = new Web3(currentProvider);\r\n        const userAccount = await web3.eth.getAccounts();\r\n        const account = userAccount[0];\r\n        let ethBalance = await web3.eth.getBalance(account);\r\n        console.log(account);\r\n        // setDoneScreenSpinner();\r\n        setEthBalance(ethBalance);\r\n        setEthAcc(account)\r\n        setIsConnected(true);\r\n        \r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const connectContract = async () => {\r\n    const ABI = [\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"_name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"_symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"_discription\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"_supply\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"_format\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"createEvent\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"inputs\": [],\r\n        \"name\": \"addressStor\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"_id\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"addressTiket\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"incidents\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"id\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"fabric\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"supply\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"discription\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"format\",\r\n            \"type\": \"bool\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"ticketCollection\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ]\r\n\r\n\r\n    const Address = \"0x14A0cc3D250631032c0A1E91036E817adDec51C1\";\r\n    setEthAdd(Address)\r\n    window.web3 = await new Web3(window.ethereum);\r\n    window.contract = await new window.web3.eth.Contract( ABI, Address); \r\n    // document.getElementById(\"contractArea\").innerHTML = \"Connected to smart-contract\";\r\n  }\r\n\r\n\r\n\r\n  const onDisconnect = () => {\r\n    setIsConnected(false);\r\n  }\r\n  \r\n\r\n\treturn(\r\n\t\t// <Panel>\r\n\t\t// \t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t// \t</PanelHeader>\r\n\t\t// \t<Tabs>\r\n\t\t// \t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t// \t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t// \t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n\t\t// \t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t// \t</Tabs>\r\n\t\t// \t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\r\n\t\t// \t\t<Div>\t\r\n\t\t// \t\t\t{userAccount ? (\r\n    //                     <>\r\n    //                         <span>Кошелек подключен!!!</span>\r\n    //                     </>\r\n\t\t// \t\t\t\t) : (\r\n\t\t// \t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t// \t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t// \t\t\t\t\t)}\r\n\t\t// \t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t// \t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t// \t\t</Div>\r\n\t\t// \t</Group>\r\n\t\t// </Panel>\r\n\r\n    <Panel className=\"app\">\r\n      <PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n      </PanelHeader>\r\n      <Tabs>\r\n        <TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n        {/* <TabsItem>Купить билеты</TabsItem> */}\r\n        <TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n        <TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n      </Tabs>\r\n      <Group className=\"app-wrapper\" header={<Header mode=\"secondary\">Подключение MetaMask</Header>}>\r\n        {!isConnected && (\r\n          <Div>\r\n            <br/>\r\n            <Button className=\"app-button__login\" stretched size=\"l\" mode=\"secondary\" onClick={onConnect}>\r\n            Подключить MetaMask\r\n            </Button>\r\n          </Div>\r\n        )}\r\n      \r\n        {isConnected && (\r\n          <Div className=\"app-wrapper\">\r\n            <div className=\"app-details\">\r\n              <h2> Вы подключились к MetaMask.</h2>\r\n              <div className=\"app-balance\">\r\n                <span>Баланс: </span>\r\n                {ethBalance / (10**18)}\r\n              </div>\r\n              <br/>\r\n              <div>\r\n                <span>Адрес: </span>\r\n                {ethAcc}\r\n              </div>\r\n              <br/>\r\n              <div>\r\n                <span>Адрес Контракта: </span>\r\n                {ethAdd}\r\n              </div>\r\n              \r\n              <Button stretched size=\"l\" mode=\"secondary\" onClick={connectContract}>\r\n                  Подключиться к контракту\r\n              </Button>\r\n              \r\n            </div>\r\n            <div>\r\n              <Button className=\"app-buttons__logout\" stretched size=\"l\" mode=\"secondary\" onClick={onDisconnect}>\r\n              Отключиться\r\n              </Button>\r\n            </div>\r\n          </Div>\r\n        )}\r\n      </Group>\r\n    </Panel>\r\n\t)\r\n\r\n\t// const [isConnected, setIsConnected] = useState(false);\r\n  // const [ethBalance, setEthBalance] = useState(\"\");\r\n  \r\n  // const detectCurrentProvider = () => {\r\n  //   let provider;\r\n  //   if (window.ethereum) {\r\n  //     provider = window.ethereum;\r\n  //   } else if (window.web3) {\r\n  //     provider = window.web3.currentProvider;\r\n  //   } else {\r\n  //     console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n  //   }\r\n  //   return provider;\r\n  // };\r\n  \r\n  // const onConnect = async() => {\r\n  //   try {\r\n  //     const currentProvider = detectCurrentProvider();\r\n  //     if(currentProvider) {\r\n  //       await currentProvider.request({method: 'eth_requestAccounts'});\r\n  //       const web3 = new Web3(currentProvider);\r\n  //       const userAccount  =await web3.eth.getAccounts();\r\n  //       const account = userAccount[0];\r\n  //       let ethBalance = await web3.eth.getBalance(account);\r\n  //       setEthBalance(ethBalance);\r\n  //       setIsConnected(true);\r\n  //     }\r\n  //   } catch(err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }\r\n  \r\n  // const onDisconnect = () => {\r\n  //   setIsConnected(false);\r\n  // }\r\n  \r\n  \r\n  \r\n  // return (\r\n  //   <div className=\"app\">\r\n  //     <div className=\"app-header\">\r\n  //       <h1>React dApp authentication with React, We3.js and Metamask</h1>\r\n  //     </div>\r\n  //     <div className=\"app-wrapper\">\r\n  //       {!isConnected && (\r\n  //         <div>\r\n  //           <button className=\"app-button__login\" onClick={onConnect}>\r\n  //           Login\r\n  //           </button>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //     {isConnected && (\r\n  //       <div className=\"app-wrapper\">\r\n  //         <div className=\"app-details\">\r\n  //           <h2> You are connected to metamask.</h2>\r\n  //           <div className=\"app-balance\">\r\n  //             <span>Balance: </span>\r\n  //             {ethBalance}\r\n  //           </div>\r\n  //         </div>\r\n  //         <div>\r\n  //           <button className=\"app-buttons__logout\" onClick={onDisconnect}>\r\n  //           Disconnect\r\n  //           </button>\r\n  //         </div>\r\n  //       </div>\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}