{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"id\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { Touch } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { setTransformStyle } from \"../../lib/styles\";\nimport { rubber } from \"../../lib/touch\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext from \"./ModalRootContext\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalType } from \"./types\";\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from \"./constants\";\nimport { withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { withModalManager } from \"./useModalManager\";\nvar warn = warnOnce(\"ModalRoot\");\nvar IS_DEV = process.env.NODE_ENV === \"development\";\n\nfunction numberInRange(number, range) {\n  if (!range) {\n    return false;\n  }\n\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nvar ModalRootTouchComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalRootTouchComponent, _React$Component);\n\n  var _super = _createSuper(ModalRootTouchComponent);\n\n  function ModalRootTouchComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ModalRootTouchComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"documentScrolling\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewportRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalRootContext\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"frameIds\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"restoreFocusTo\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (event) {\n      if (!event) {\n        return false;\n      }\n\n      while (event.originalEvent) {\n        event = event.originalEvent;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateModalTranslate\", function () {\n      var modalState = _this.getModalState(_this.props.activeModal);\n\n      modalState && _this.animateTranslate(modalState, modalState.translateY);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateModalHeight\", function () {\n      var modalState = _this.getModalState(_this.props.activeModal);\n\n      if (modalState && modalState.type === ModalType.PAGE && modalState.dynamicContentHeight) {\n        if (_this.props.enteringModal) {\n          _this.waitTransitionFinish(modalState, function () {\n            requestAnimationFrame(function () {\n              return _this.checkPageContentHeight();\n            });\n          });\n        } else {\n          requestAnimationFrame(function () {\n            return _this.checkPageContentHeight();\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (e) {\n      if (_this.props.exitingModal) {\n        return;\n      }\n\n      var modalState = _this.getModalState(_this.props.activeModal);\n\n      if (!modalState) {\n        return;\n      }\n\n      if (modalState.type === ModalType.PAGE) {\n        return _this.onPageTouchMove(e, modalState);\n      }\n\n      if (modalState.type === ModalType.CARD) {\n        return _this.onCardTouchMove(e, modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (e) {\n      var modalState = _this.getModalState(_this.props.activeModal);\n\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE) {\n        return _this.onPageTouchEnd(e, modalState);\n      }\n\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.CARD) {\n        return _this.onCardTouchEnd(e, modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var _modalState$contentEl;\n\n      var activeModal = _this.props.activeModal;\n      var target = e.target;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = _this.getModalState(activeModal);\n\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE && modalState !== null && modalState !== void 0 && (_modalState$contentEl = modalState.contentElement) !== null && _modalState$contentEl !== void 0 && _modalState$contentEl.contains(target)) {\n        modalState.contentScrolled = true;\n\n        if (modalState.contentScrollStopTimeout) {\n          clearTimeout(modalState.contentScrollStopTimeout);\n        }\n\n        modalState.contentScrollStopTimeout = setTimeout(function () {\n          if (modalState.contentScrolled) {\n            modalState.contentScrolled = false;\n          }\n        }, 250);\n      }\n    });\n\n    _this.state = {\n      touchDown: false,\n      dragging: false\n    };\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n    _this.modalRootContext = {\n      updateModalHeight: _this.updateModalHeight,\n      registerModal: function registerModal(_ref) {\n        var id = _ref.id,\n            data = _objectWithoutProperties(_ref, _excluded);\n\n        return Object.assign(_this.getModalState(id), data);\n      },\n      onClose: function onClose() {\n        return _this.props.closeActiveModal();\n      },\n      isInsideModal: true\n    };\n    _this.frameIds = {};\n    return _this;\n  }\n\n  _createClass(ModalRootTouchComponent, [{\n    key: \"timeout\",\n    get: function get() {\n      return this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"getModalState\",\n    value: function getModalState(id) {\n      if (!id) {\n        return undefined;\n      }\n\n      return this.props.getModalState(id);\n    }\n  }, {\n    key: \"getModals\",\n    value: function getModals() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n      if (this.props.platform === IOS) {\n        var _this$window;\n\n        (_this$window = this.window) === null || _this$window === void 0 ? void 0 : _this$window.addEventListener(\"resize\", this.updateModalTranslate, false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toggleDocumentScrolling(true);\n      this.window.removeEventListener(\"resize\", this.updateModalTranslate, false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this; // transition phase 2: animate exiting modal\n\n\n      if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n        this.closeModal(this.props.exitingModal);\n      } // transition phase 3: animate entering modal\n\n\n      if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n        var enteringModal = this.props.enteringModal;\n        var enteringState = this.getModalState(enteringModal);\n        this.waitTransitionFinish(enteringState, function () {\n          if (enteringState !== null && enteringState !== void 0 && enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = \"\";\n          }\n\n          _this2.props.onEnter(enteringModal);\n        });\n\n        if (enteringState !== null && enteringState !== void 0 && enteringState.innerElement) {\n          enteringState.innerElement.style.transitionDelay = this.props.delayEnter ? \"\".concat(this.timeout, \"ms\") : \"\";\n          this.animateTranslate(enteringState, enteringState.translateY);\n        }\n      } // focus restoration\n\n\n      if (this.props.activeModal && !prevProps.activeModal) {\n        this.restoreFocusTo = this.document.activeElement;\n      }\n\n      if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n        this.restoreFocusTo.focus();\n        this.restoreFocusTo = null;\n      }\n\n      this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n    }\n    /* Отключает скролл документа */\n\n  }, {\n    key: \"toggleDocumentScrolling\",\n    value: function toggleDocumentScrolling(enabled) {\n      if (this.documentScrolling === enabled) {\n        return;\n      }\n\n      this.documentScrolling = enabled;\n\n      if (enabled) {\n        // Здесь нужен последний аргумент с такими же параметрами, потому что\n        // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n        // https://github.com/VKCOM/VKUI/issues/444\n        this.window.removeEventListener(\"touchmove\", this.preventTouch, {\n          // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n          passive: false\n        });\n      } else {\n        this.window.addEventListener(\"touchmove\", this.preventTouch, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"checkPageContentHeight\",\n    value: function checkPageContentHeight() {\n      var modalState = this.getModalState(this.props.activeModal);\n\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE && modalState !== null && modalState !== void 0 && modalState.modalElement) {\n        var prevModalState = _objectSpread({}, modalState);\n\n        initPageModal(modalState);\n\n        var currentModalState = _objectSpread({}, modalState);\n\n        var needAnimate = false;\n\n        if (prevModalState.expandable === currentModalState.expandable) {\n          if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n            needAnimate = true;\n          }\n        } else {\n          needAnimate = true;\n        }\n\n        if (needAnimate) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n      }\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(id) {\n      var _this3 = this,\n          _prevModalState$trans,\n          _nextModalState$trans,\n          _nextModalState$trans2; // Сбрасываем состояния, которые могут помешать закрытию модального окна\n\n\n      this.setState({\n        touchDown: false\n      });\n      var prevModalState = this.getModalState(id);\n\n      if (!prevModalState) {\n        id && warn(\"[closeActiveModal] Modal \".concat(id, \" does not exist - not closing\"));\n        return;\n      }\n\n      var nextModalState = this.getModalState(this.props.activeModal);\n      var nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n      var prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n      this.waitTransitionFinish(prevModalState, function () {\n        return _this3.props.onExit(id);\n      });\n      var exitTranslate = prevIsPage && nextIsPage && ((_prevModalState$trans = prevModalState.translateY) !== null && _prevModalState$trans !== void 0 ? _prevModalState$trans : 0) <= ((_nextModalState$trans = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState$trans !== void 0 ? _nextModalState$trans : 0) && !this.props.isBack ? ((_nextModalState$trans2 = nextModalState === null || nextModalState === void 0 ? void 0 : nextModalState.translateYFrom) !== null && _nextModalState$trans2 !== void 0 ? _nextModalState$trans2 : 0) + 10 : 100;\n      this.animateTranslate(prevModalState, exitTranslate);\n\n      if (!nextModalState) {\n        // NOTE: was only for clean exit\n        this.setMaskOpacity(prevModalState, 0);\n      }\n    }\n  }, {\n    key: \"onPageTouchMove\",\n    value: function onPageTouchMove(event, modalState) {\n      var _modalState$innerElem, _modalState$headerEle;\n\n      var shiftY = event.shiftY,\n          originalEvent = event.originalEvent;\n      var target = originalEvent.target;\n\n      if (!event.isY) {\n        var _this$viewportRef$cur;\n\n        if ((_this$viewportRef$cur = this.viewportRef.current) !== null && _this$viewportRef$cur !== void 0 && _this$viewportRef$cur.contains(target)) {\n          originalEvent.preventDefault();\n        }\n\n        return;\n      }\n\n      if (!((_modalState$innerElem = modalState.innerElement) !== null && _modalState$innerElem !== void 0 && _modalState$innerElem.contains(target))) {\n        return originalEvent.preventDefault();\n      }\n\n      originalEvent.stopPropagation();\n      var expandable = modalState.expandable,\n          contentScrolled = modalState.contentScrolled,\n          collapsed = modalState.collapsed,\n          expanded = modalState.expanded;\n\n      if (!this.state.touchDown) {\n        var _modalState$contentEl2;\n\n        modalState.touchStartContentScrollTop = (_modalState$contentEl2 = modalState.contentElement) === null || _modalState$contentEl2 === void 0 ? void 0 : _modalState$contentEl2.scrollTop;\n        this.setState({\n          touchDown: true\n        });\n      }\n\n      if (contentScrolled) {\n        return;\n      }\n\n      if (modalState.touchMovePositive === null) {\n        modalState.touchMovePositive = shiftY > 0;\n      }\n\n      if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || (_modalState$headerEle = modalState.headerElement) !== null && _modalState$headerEle !== void 0 && _modalState$headerEle.contains(target)) {\n        var _modalState$translate;\n\n        originalEvent.preventDefault();\n\n        if (!expandable && shiftY < 0 || !this.window) {\n          return;\n        }\n\n        !this.state.dragging && this.setState({\n          dragging: true\n        });\n        var shiftYPercent = shiftY / this.window.innerHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform === ANDROID || this.props.platform === VKCOM);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = rangeTranslate(((_modalState$translate = modalState.translateY) !== null && _modalState$translate !== void 0 ? _modalState$translate : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onCardTouchMove\",\n    value: function onCardTouchMove(event, modalState) {\n      var _modalState$innerElem2;\n\n      var originalEvent = event.originalEvent,\n          shiftY = event.shiftY;\n      var target = originalEvent.target;\n\n      if ((_modalState$innerElem2 = modalState.innerElement) !== null && _modalState$innerElem2 !== void 0 && _modalState$innerElem2.contains(target)) {\n        var _modalState$translate2;\n\n        if (!this.state.touchDown) {\n          this.setState({\n            touchDown: true,\n            dragging: true\n          });\n        }\n\n        var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform === ANDROID || this.props.platform === VKCOM);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = Math.max(0, ((_modalState$translate2 = modalState.translateY) !== null && _modalState$translate2 !== void 0 ? _modalState$translate2 : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onPageTouchEnd\",\n    value: function onPageTouchEnd(event, modalState) {\n      var _this4 = this;\n\n      var startY = event.startY,\n          shiftY = event.shiftY;\n      modalState.contentScrolled = false;\n      modalState.touchMovePositive = null;\n      var setStateCallback;\n\n      if (this.state.dragging && this.window) {\n        var _modalState$translate3, _modalState$touchShif;\n\n        var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n        var translateY = (_modalState$translate3 = modalState.translateYCurrent) !== null && _modalState$translate3 !== void 0 ? _modalState$translate3 : 0;\n        var expectTranslateY = translateY / event.duration * 240 * 0.6 * (((_modalState$touchShif = modalState.touchShiftYPercent) !== null && _modalState$touchShif !== void 0 ? _modalState$touchShif : 0) < 0 ? -1 : 1);\n        translateY = rangeTranslate(translateY + expectTranslateY);\n\n        if (modalState.settlingHeight !== 100) {\n          if (numberInRange(translateY, modalState.expandedRange)) {\n            var _modalState$expandedR, _modalState$expandedR2;\n\n            translateY = (_modalState$expandedR = (_modalState$expandedR2 = modalState.expandedRange) === null || _modalState$expandedR2 === void 0 ? void 0 : _modalState$expandedR2[0]) !== null && _modalState$expandedR !== void 0 ? _modalState$expandedR : 0;\n          } else if (numberInRange(translateY, modalState.collapsedRange)) {\n            var _modalState$translate4;\n\n            translateY = (_modalState$translate4 = modalState.translateYFrom) !== null && _modalState$translate4 !== void 0 ? _modalState$translate4 : 0;\n          } else if (numberInRange(translateY, modalState.hiddenRange)) {\n            translateY = 100;\n          } else {\n            var _modalState$translate5;\n\n            translateY = (_modalState$translate5 = modalState.translateYFrom) !== null && _modalState$translate5 !== void 0 ? _modalState$translate5 : 0;\n          }\n        } else {\n          if (numberInRange(translateY, [0, 25])) {\n            translateY = 0;\n          } else {\n            translateY = 100;\n          }\n        }\n\n        if (translateY !== 100 && shiftYEndPercent >= 75) {\n          translateY = 100;\n        }\n\n        modalState.translateY = translateY;\n        modalState.translateYCurrent = translateY;\n        modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n        modalState.expanded = translateY === 0;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          this.props.closeActiveModal();\n        }\n\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this4.animateTranslate(modalState, modalState.translateY);\n          }\n\n          _this4.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"onCardTouchEnd\",\n    value: function onCardTouchEnd(_ref2, modalState) {\n      var _this5 = this;\n\n      var duration = _ref2.duration;\n      var setStateCallback;\n\n      if (this.state.dragging) {\n        var _modalState$translate6, _modalState$touchShif2;\n\n        var translateY = (_modalState$translate6 = modalState.translateYCurrent) !== null && _modalState$translate6 !== void 0 ? _modalState$translate6 : 0;\n        var expectTranslateY = translateY / duration * 240 * 0.6 * (((_modalState$touchShif2 = modalState.touchShiftYPercent) !== null && _modalState$touchShif2 !== void 0 ? _modalState$touchShif2 : 0) < 0 ? -1 : 1);\n        translateY = Math.max(0, translateY + expectTranslateY);\n\n        if (translateY >= 30) {\n          translateY = 100;\n        } else {\n          translateY = 0;\n        }\n\n        modalState.translateY = translateY;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          this.props.closeActiveModal();\n        }\n\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this5.animateTranslate(modalState, modalState.translateY);\n          }\n\n          _this5.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var _modalState$innerElem4;\n\n        var onceHandler = function onceHandler() {\n          var _modalState$innerElem3;\n\n          modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem3 = modalState.innerElement) === null || _modalState$innerElem3 === void 0 ? void 0 : _modalState$innerElem3.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n\n        modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem4 = modalState.innerElement) === null || _modalState$innerElem4 === void 0 ? void 0 : _modalState$innerElem4.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.timeout);\n      }\n    }\n    /**\n     * Анимирует сдвиг модалки\n     *\n     * @param {ModalsStateEntry} modalState\n     * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n     */\n\n  }, {\n    key: \"animateTranslate\",\n    value: function animateTranslate(modalState, percent) {\n      var frameId = \"animateTranslateFrame\".concat(modalState.id);\n      cancelAnimationFrame(this.frameIds[frameId]);\n      this.frameIds[frameId] = requestAnimationFrame(function () {\n        setTransformStyle(modalState.innerElement, \"translate3d(0, \".concat(percent, \"%, 0)\"));\n      });\n    }\n    /* Устанавливает прозрачность для полупрозрачной подложки */\n\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this$props$history,\n          _this6 = this;\n\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (forceOpacity === null && ((_this$props$history = this.props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history[0]) !== modalState.id) {\n        return;\n      }\n\n      if (this.maskAnimationFrame) {\n        cancelAnimationFrame(this.maskAnimationFrame);\n      }\n\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this6.maskElementRef.current) {\n          var _modalState$translate7 = modalState.translateY,\n              translateY = _modalState$translate7 === void 0 ? 0 : _modalState$translate7,\n              _modalState$translate8 = modalState.translateYCurrent,\n              translateYCurrent = _modalState$translate8 === void 0 ? 0 : _modalState$translate8;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this6.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$configPro,\n          _this7 = this;\n\n      var _this$props = this.props,\n          activeModal = _this$props.activeModal,\n          exitingModal = _this$props.exitingModal,\n          enteringModal = _this$props.enteringModal;\n      var _this$state = this.state,\n          touchDown = _this$state.touchDown,\n          dragging = _this$state.dragging;\n\n      if (!activeModal && !exitingModal) {\n        return null;\n      }\n\n      return createScopedElement(TouchRootContext.Provider, {\n        value: true\n      }, createScopedElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, createScopedElement(Touch, {\n        vkuiClass: classNames(getClassName(\"ModalRoot\", this.props.platform), {\n          \"ModalRoot--vkapps\": ((_this$props$configPro = this.props.configProvider) === null || _this$props$configPro === void 0 ? void 0 : _this$props$configPro.webviewType) === WebviewType.VKAPPS,\n          \"ModalRoot--touched\": touchDown,\n          \"ModalRoot--switching\": !!(enteringModal || exitingModal)\n        }),\n        onMove: this.onTouchMove,\n        onEnd: this.onTouchEnd,\n        onScroll: this.onScroll\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__mask\",\n        onClick: this.props.closeActiveModal,\n        ref: this.maskElementRef\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__viewport\",\n        ref: this.viewportRef\n      }, this.getModals().map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n\n        var _modalState = _this7.getModalState(modalId);\n\n        if (modalId !== activeModal && modalId !== exitingModal || !_modalState) {\n          return null;\n        }\n\n        var modalState = _objectSpread({}, _modalState);\n\n        var isPage = modalState.type === ModalType.PAGE;\n        var key = \"modal-\".concat(modalId);\n        return createScopedElement(FocusTrap, {\n          key: key,\n          getRootRef: function getRootRef(e) {\n            var modalState = _this7.getModalState(modalId);\n\n            if (modalState) {\n              modalState.modalElement = e;\n            }\n          },\n          onClose: _this7.props.closeActiveModal,\n          timeout: _this7.timeout,\n          vkuiClass: classNames(\"ModalRoot__modal\", {\n            \"ModalRoot__modal--active\": modalId === activeModal,\n            \"ModalRoot__modal--prev\": modalId === exitingModal,\n            \"ModalRoot__modal--next\": exitingModal && modalId === activeModal || modalId === enteringModal,\n            \"ModalRoot__modal--dragging\": dragging,\n            \"ModalRoot__modal--expandable\": isPage && modalState.expandable,\n            \"ModalRoot__modal--expanded\": isPage && modalState.expanded,\n            \"ModalRoot__modal--collapsed\": isPage && modalState.collapsed\n          }),\n          restoreFocus: false\n        }, Modal);\n      })))));\n    }\n  }]);\n\n  return ModalRootTouchComponent;\n}(React.Component);\n\nexport var ModalRootTouch = withContext(withPlatform(withDOM(withModalManager(initModal)(ModalRootTouchComponent))), ConfigProviderContext, \"configProvider\");\n/**\n * Инициализирует модалку перед анимацией открытия\n */\n\nfunction initModal(modalState) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n\n    case ModalType.CARD:\n      return initCardModal(modalState);\n\n    default:\n      IS_DEV && warn(\"[initActiveModal] modalState.type is unknown\");\n  }\n}\n\nfunction initPageModal(modalState) {\n  var _contentElement$clien;\n\n  var contentElement = modalState.contentElement;\n  var contentHeight = (contentElement === null || contentElement === void 0 ? void 0 : contentElement.firstElementChild).offsetHeight;\n  var prevTranslateY = modalState.translateY;\n  modalState.expandable = contentHeight > ((_contentElement$clien = contentElement === null || contentElement === void 0 ? void 0 : contentElement.clientHeight) !== null && _contentElement$clien !== void 0 ? _contentElement$clien : 0) || modalState.settlingHeight === 100;\n  var collapsed = false;\n  var expanded = false;\n  var translateYFrom;\n  var translateY;\n  var expandedRange;\n  var collapsedRange;\n  var hiddenRange;\n\n  if (modalState.expandable) {\n    var _modalState$settlingH;\n\n    translateYFrom = 100 - ((_modalState$settlingH = modalState.settlingHeight) !== null && _modalState$settlingH !== void 0 ? _modalState$settlingH : 0);\n    var shiftHalf = translateYFrom / 2;\n    var visiblePart = 100 - translateYFrom;\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    var _modalState$headerEle2, _modalState$headerEle3, _modalState$innerElem5, _modalState$innerElem6, _modalState$innerElem7;\n\n    var headerHeight = (_modalState$headerEle2 = (_modalState$headerEle3 = modalState.headerElement) === null || _modalState$headerEle3 === void 0 ? void 0 : _modalState$headerEle3.offsetHeight) !== null && _modalState$headerEle2 !== void 0 ? _modalState$headerEle2 : 0;\n    var height = contentHeight + headerHeight;\n    translateYFrom = 100 - height / ((_modalState$innerElem5 = (_modalState$innerElem6 = modalState.innerElement) === null || _modalState$innerElem6 === void 0 ? void 0 : (_modalState$innerElem7 = _modalState$innerElem6.parentElement) === null || _modalState$innerElem7 === void 0 ? void 0 : _modalState$innerElem7.offsetHeight) !== null && _modalState$innerElem5 !== void 0 ? _modalState$innerElem5 : 0) * 100;\n    translateY = translateYFrom;\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  } // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n\n\n  if (modalState.expandable && translateY > (prevTranslateY !== null && prevTranslateY !== void 0 ? prevTranslateY : 0) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState) {\n  modalState.translateY = 0;\n}","map":{"version":3,"mappings":"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","names":["React","Touch","TouchRootContext","getClassName","classNames","setTransformStyle","rubber","ANDROID","IOS","VKCOM","transitionEvent","withPlatform","withContext","ModalRootContext","ConfigProviderContext","WebviewType","ModalType","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","withDOM","getNavId","warnOnce","FocusTrap","withModalManager","warn","IS_DEV","process","env","NODE_ENV","numberInRange","number","range","rangeTranslate","Math","max","min","ModalRootTouchComponent","props","_classCallCheck","_this","_defineProperty","createRef","undefined","event","originalEvent","preventDefault","modalState","getModalState","activeModal","animateTranslate","translateY","type","PAGE","dynamicContentHeight","enteringModal","waitTransitionFinish","requestAnimationFrame","checkPageContentHeight","e","exitingModal","onPageTouchMove","CARD","onCardTouchMove","onPageTouchEnd","onCardTouchEnd","target","contentElement","_modalState$contentEl","contains","contentScrolled","contentScrollStopTimeout","clearTimeout","setTimeout","state","touchDown","dragging","maskElementRef","modalRootContext","updateModalHeight","registerModal","id","data","Object","assign","onClose","closeActiveModal","isInsideModal","frameIds","platform","document","window","Children","toArray","children","addEventListener","updateModalTranslate","toggleDocumentScrolling","removeEventListener","prevProps","closeModal","enteringState","innerElement","style","transitionDelay","_this2","onEnter","delayEnter","timeout","restoreFocusTo","activeElement","focus","enabled","documentScrolling","preventTouch","passive","modalElement","prevModalState","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","setState","nextModalState","nextIsPage","prevIsPage","_this3","onExit","exitTranslate","isBack","setMaskOpacity","shiftY","isY","viewportRef","current","_this$viewportRef$cur","_modalState$innerElem","stopPropagation","collapsed","expanded","touchStartContentScrollTop","_modalState$contentEl2","scrollTop","touchMovePositive","headerElement","_modalState$headerEle","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","translateYCurrent","_modalState$innerElem2","offsetHeight","startY","setStateCallback","shiftYEndPercent","expectTranslateY","duration","settlingHeight","expandedRange","_modalState$expandedR2","collapsedRange","hiddenRange","hidden","_this4","_this5","eventHandler","supported","onceHandler","name","percent","frameId","cancelAnimationFrame","forceOpacity","history","maskAnimationFrame","_this6","opacity","toString","createScopedElement","Provider","value","vkuiClass","configProvider","webviewType","VKAPPS","onMove","onTouchMove","onEnd","onTouchEnd","onScroll","onClick","ref","getModals","map","Modal","modalId","_modalState","_this7","isPage","key","getRootRef","restoreFocus","Component","ModalRootTouch","initModal","initCardModal","contentHeight","firstElementChild","prevTranslateY","clientHeight","shiftHalf","visiblePart","headerHeight","_modalState$headerEle3","height","_modalState$innerElem6","parentElement","_modalState$innerElem7"],"sources":["../../../src/components/ModalRoot/ModalRoot.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Touch, TouchEvent } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { setTransformStyle } from \"../../lib/styles\";\nimport { rubber } from \"../../lib/touch\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext, {\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalsStateEntry, ModalType, TranslateRange } from \"./types\";\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from \"./constants\";\nimport { DOMProps, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalTransitionProps, withModalManager } from \"./useModalManager\";\nimport \"./ModalRoot.css\";\n\nconst warn = warnOnce(\"ModalRoot\");\nconst IS_DEV = process.env.NODE_ENV === \"development\";\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при закрытии активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) =>\n        Object.assign(this.getModalState(id), data),\n      onClose: () => this.props.closeActiveModal(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private documentScrolling = false;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === ANDROID || this.props.platform === VKCOM\n      ? 320\n      : 400;\n  }\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  getModalState(id: string | undefined | null) {\n    if (!id) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n    if (this.props.platform === IOS) {\n      this.window?.addEventListener(\"resize\", this.updateModalTranslate, false);\n    }\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window!.removeEventListener(\n      \"resize\",\n      this.updateModalTranslate,\n      false\n    );\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (\n      this.props.exitingModal &&\n      this.props.exitingModal !== prevProps.exitingModal\n    ) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (\n      this.props.enteringModal &&\n      this.props.enteringModal !== prevProps.enteringModal\n    ) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState?.innerElement) {\n          enteringState.innerElement.style.transitionDelay = \"\";\n        }\n        this.props.onEnter(enteringModal);\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : \"\";\n        this.animateTranslate(enteringState, enteringState.translateY);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document!.activeElement as HTMLElement;\n    }\n    if (\n      !this.props.activeModal &&\n      !this.props.exitingModal &&\n      this.restoreFocusTo\n    ) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(\n      !this.props.activeModal && !this.props.exitingModal\n    );\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      this.window!.removeEventListener(\"touchmove\", this.preventTouch, {\n        // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n        passive: false,\n      });\n    } else {\n      this.window!.addEventListener(\"touchmove\", this.preventTouch, {\n        passive: false,\n      });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  updateModalTranslate = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n    modalState && this.animateTranslate(modalState, modalState.translateY);\n  };\n\n  checkPageContentHeight() {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (\n          prevModalState.translateYFrom !== currentModalState.translateYFrom\n        ) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (\n      modalState &&\n      modalState.type === ModalType.PAGE &&\n      modalState.dynamicContentHeight\n    ) {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`[closeActiveModal] Modal ${id} does not exist - not closing`);\n      return;\n    }\n\n    const nextModalState = this.getModalState(this.props.activeModal);\n    const nextIsPage =\n      !!nextModalState && nextModalState.type === ModalType.PAGE;\n\n    const prevIsPage =\n      !!prevModalState && prevModalState.type === ModalType.PAGE;\n    this.waitTransitionFinish(prevModalState, () => this.props.onExit(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <=\n        (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop =\n        modalState.contentElement?.scrollTop;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded &&\n        modalState.touchMovePositive &&\n        modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(\n        shiftYPercent,\n        72,\n        0.8,\n        this.props.platform === ANDROID || this.props.platform === VKCOM\n      );\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate(\n        (modalState.translateY ?? 0) + shiftYCurrent\n      );\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent =\n        (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(\n        shiftYPercent,\n        72,\n        1.2,\n        this.props.platform === ANDROID || this.props.platform === VKCOM\n      );\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(\n        0,\n        (modalState.translateY ?? 0) + shiftYCurrent\n      );\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === ModalType.CARD) {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent =\n        ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.closeActiveModal();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback\n    );\n  }\n\n  onCardTouchEnd({ duration }: TouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.closeActiveModal();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.getModalState(activeModal);\n    if (\n      modalState?.type === ModalType.PAGE &&\n      modalState?.contentElement?.contains(target)\n    ) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(\n    modalState: ModalsStateEntry | undefined,\n    eventHandler: () => void\n  ) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(\n          transitionEvent.name as string,\n          onceHandler\n        );\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(\n        transitionEvent.name as string,\n        onceHandler\n      );\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(\n        modalState.innerElement,\n        `translate3d(0, ${percent}%, 0)`\n      );\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(\n    modalState: ModalsStateEntry,\n    forceOpacity: number | null = null\n  ) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(\n          0,\n          Math.min(100, opacity)\n        ).toString();\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            vkuiClass={classNames(\n              getClassName(\"ModalRoot\", this.props.platform),\n              {\n                \"ModalRoot--vkapps\":\n                  this.props.configProvider?.webviewType === WebviewType.VKAPPS,\n                \"ModalRoot--touched\": touchDown,\n                \"ModalRoot--switching\": !!(enteringModal || exitingModal),\n              }\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              vkuiClass=\"ModalRoot__mask\"\n              onClick={this.props.closeActiveModal}\n              ref={this.maskElementRef}\n            />\n            <div vkuiClass=\"ModalRoot__viewport\" ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.getModalState(modalId);\n                if (\n                  (modalId !== activeModal && modalId !== exitingModal) ||\n                  !_modalState\n                ) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === ModalType.PAGE;\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    getRootRef={(e) => {\n                      const modalState = this.getModalState(modalId);\n                      if (modalState) {\n                        modalState.modalElement = e;\n                      }\n                    }}\n                    onClose={this.props.closeActiveModal}\n                    timeout={this.timeout}\n                    vkuiClass={classNames(\"ModalRoot__modal\", {\n                      \"ModalRoot__modal--active\": modalId === activeModal,\n                      \"ModalRoot__modal--prev\": modalId === exitingModal,\n                      \"ModalRoot__modal--next\":\n                        (exitingModal && modalId === activeModal) ||\n                        modalId === enteringModal,\n\n                      \"ModalRoot__modal--dragging\": dragging,\n\n                      \"ModalRoot__modal--expandable\":\n                        isPage && modalState.expandable,\n                      \"ModalRoot__modal--expanded\":\n                        isPage && modalState.expanded,\n                      \"ModalRoot__modal--collapsed\":\n                        isPage && modalState.collapsed,\n                    })}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(\n  withPlatform(\n    withDOM<ModalRootProps>(\n      withModalManager(initModal)(ModalRootTouchComponent)\n    )\n  ),\n  ConfigProviderContext,\n  \"configProvider\"\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight =\n        modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      IS_DEV && warn(\"[initActiveModal] modalState.type is unknown\");\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement } = modalState;\n  const contentHeight = (contentElement?.firstElementChild as HTMLElement)\n    .offsetHeight;\n\n  let prevTranslateY = modalState.translateY;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) ||\n    modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange;\n  let hiddenRange: TranslateRange;\n\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 -\n      (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) *\n        100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (\n    (modalState.expandable && translateY > (prevTranslateY ?? 0)) ||\n    modalState.settlingHeight === 100\n  ) {\n    translateY = 0;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n"]},"metadata":{},"sourceType":"module"}