{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"children\"],\n    _excluded2 = [\"className\", \"header\", \"style\", \"subtitle\", \"size\", \"children\", \"getRootRef\", \"getRef\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Avatar from \"../Avatar/Avatar\";\n\nvar CellTypography = function CellTypography(_ref) {\n  var size = _ref.size,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  return size === \"s\" ? createScopedElement(Caption, _extends({\n    level: \"2\"\n  }, restProps), children) : createScopedElement(Subhead, restProps, children);\n};\n\nexport var HorizontalCell = function HorizontalCell(_ref2) {\n  var className = _ref2.className,\n      header = _ref2.header,\n      style = _ref2.style,\n      subtitle = _ref2.subtitle,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? \"s\" : _ref2$size,\n      _ref2$children = _ref2.children,\n      children = _ref2$children === void 0 ? createScopedElement(Avatar, {\n    size: 56\n  }) : _ref2$children,\n      getRootRef = _ref2.getRootRef,\n      getRef = _ref2.getRef,\n      restProps = _objectWithoutProperties(_ref2, _excluded2);\n\n  var platform = usePlatform();\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames(getClassName(\"HorizontalCell\", platform), \"HorizontalCell--\".concat(size)),\n    ref: getRootRef,\n    style: style,\n    className: className\n  }, createScopedElement(Tappable, _extends({\n    vkuiClass: \"HorizontalCell__body\",\n    getRootRef: getRef\n  }, restProps), hasReactNode(children) && createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalCell__image\"\n  }, children), createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalCell__content\"\n  }, hasReactNode(header) && createScopedElement(CellTypography, {\n    size: size,\n    vkuiClass: \"HorizontalCell__title\"\n  }, header), hasReactNode(subtitle) && createScopedElement(Caption, {\n    vkuiClass: \"HorizontalCell__subtitle\"\n  }, subtitle))));\n};","map":{"version":3,"mappings":";;;;;AACA,SAASA,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,SAASC,OAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAQA,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,OAI3B;AAAA,MAHzBC,IAGyB,QAHzBA,IAGyB;AAAA,MAFzBC,QAEyB,QAFzBA,QAEyB;AAAA,MADtBC,SACsB;;AACzB,SAAOF,IAAI,KAAK,GAATA,GACLG,oBAACR,OAAD;AAASS,SAAK,EAAC;AAAf,KAAuBF,SAAvB,GACGD,QADH,CADKD,GAKLG,oBAACN,OAAD,EAAaK,SAAb,EAAyBD,QAAzB,CALF;AALF;;AAyBA,OAAO,IAAMI,cAA6C,GAAG,SAAhDA,cAAgD,QAUlC;AAAA,MATzBC,SASyB,SATzBA,SASyB;AAAA,MARzBC,MAQyB,SARzBA,MAQyB;AAAA,MAPzBC,KAOyB,SAPzBA,KAOyB;AAAA,MANzBC,QAMyB,SANzBA,QAMyB;AAAA,yBALzBT,IAKyB;AAAA,MALzBA,IAKyB,2BALlB,GAKkB;AAAA,6BAJzBC,QAIyB;AAAA,MAJzBA,QAIyB,+BAJdE,oBAACL,MAAD;AAAQE,QAAI,EAAE;AAAd,IAIc;AAAA,MAHzBU,UAGyB,SAHzBA,UAGyB;AAAA,MAFzBC,MAEyB,SAFzBA,MAEyB;AAAA,MADtBT,SACsB;;AACzB,MAAMU,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,SACEU;AACEU,aAAS,EAAEtB,UAAU,CACnBC,YAAY,CAAC,gBAAD,EAAmBoB,QAAnB,CADO,4BAEAZ,IAFA,EADvB;AAKEc,OAAG,EAAEJ,UALP;AAMEF,SAAK,EAAEA,KANT;AAOEF,aAAS,EAAEA;AAPb,KASEH,oBAACP,QAAD;AACEiB,aAAS,EAAC,sBADZ;AAEEH,cAAU,EAAEC;AAFd,KAGMT,SAHN,GAKGR,YAAY,CAACO,QAAD,CAAZP,IACCS;AAAKU,aAAS,EAAC;AAAf,KAAwCZ,QAAxC,CANJ,EAQEE;AAAKU,aAAS,EAAC;AAAf,KACGnB,YAAY,CAACa,MAAD,CAAZb,IACCS,oBAACJ,cAAD;AAAgBC,QAAI,EAAEA,IAAtB;AAA4Ba,aAAS,EAAC;AAAtC,KACGN,MADH,CAFJ,EAMGb,YAAY,CAACe,QAAD,CAAZf,IACCS,oBAACR,OAAD;AAASkB,aAAS,EAAC;AAAnB,KAA+CJ,QAA/C,CAPJ,CARF,CATF,CADF;AAbK","names":["classNames","getClassName","usePlatform","hasReactNode","Caption","Tappable","Subhead","Avatar","CellTypography","size","children","restProps","createScopedElement","level","HorizontalCell","className","header","style","subtitle","getRootRef","getRef","platform","vkuiClass","ref"],"sources":["../../../src/components/HorizontalCell/HorizontalCell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Avatar from \"../Avatar/Avatar\";\nimport { HasComponent, HasRef, HasRootRef } from \"../../types\";\nimport \"./HorizontalCell.css\";\n\ninterface CellTypographyProps extends React.HTMLAttributes<HTMLDivElement> {\n  size: HorizontalCellProps[\"size\"];\n}\n\nconst CellTypography: React.FC<CellTypographyProps> = ({\n  size,\n  children,\n  ...restProps\n}: CellTypographyProps) => {\n  return size === \"s\" ? (\n    <Caption level=\"2\" {...restProps}>\n      {children}\n    </Caption>\n  ) : (\n    <Subhead {...restProps}>{children}</Subhead>\n  );\n};\n\nexport interface HorizontalCellProps\n  extends React.AnchorHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement>,\n    HasComponent {\n  size?: \"s\" | \"m\" | \"l\";\n  header?: React.ReactNode;\n  subtitle?: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport const HorizontalCell: React.FC<HorizontalCellProps> = ({\n  className,\n  header,\n  style,\n  subtitle,\n  size = \"s\",\n  children = <Avatar size={56} />,\n  getRootRef,\n  getRef,\n  ...restProps\n}: HorizontalCellProps) => {\n  const platform = usePlatform();\n\n  return (\n    <div\n      vkuiClass={classNames(\n        getClassName(\"HorizontalCell\", platform),\n        `HorizontalCell--${size}`\n      )}\n      ref={getRootRef}\n      style={style}\n      className={className}\n    >\n      <Tappable\n        vkuiClass=\"HorizontalCell__body\"\n        getRootRef={getRef}\n        {...restProps}\n      >\n        {hasReactNode(children) && (\n          <div vkuiClass=\"HorizontalCell__image\">{children}</div>\n        )}\n        <div vkuiClass=\"HorizontalCell__content\">\n          {hasReactNode(header) && (\n            <CellTypography size={size} vkuiClass=\"HorizontalCell__title\">\n              {header}\n            </CellTypography>\n          )}\n          {hasReactNode(subtitle) && (\n            <Caption vkuiClass=\"HorizontalCell__subtitle\">{subtitle}</Caption>\n          )}\n        </div>\n      </Tappable>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}