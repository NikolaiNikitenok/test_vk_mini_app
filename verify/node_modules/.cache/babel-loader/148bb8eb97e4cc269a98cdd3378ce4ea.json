{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\n\nconst _assert_js_1 = require(\"./_assert.js\");\n\nconst hmac_js_1 = require(\"./hmac.js\");\n\nconst utils_js_1 = require(\"./utils.js\"); // Common prologue and epilogue for sync/async functions\n\n\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n  _assert_js_1.default.hash(hash);\n\n  const opts = (0, utils_js_1.checkOpts)({\n    dkLen: 32,\n    asyncTick: 10\n  }, _opts);\n  const {\n    c,\n    dkLen,\n    asyncTick\n  } = opts;\n\n  _assert_js_1.default.number(c);\n\n  _assert_js_1.default.number(dkLen);\n\n  _assert_js_1.default.number(asyncTick);\n\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = (0, utils_js_1.toBytes)(_password);\n  const salt = (0, utils_js_1.toBytes)(_salt); // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n\n  const DK = new Uint8Array(dkLen); // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n  const PRF = hmac_js_1.hmac.create(hash, password);\n\n  const PRFSalt = PRF._cloneInto().update(salt);\n\n  return {\n    c,\n    dkLen,\n    asyncTick,\n    DK,\n    PRF,\n    PRFSalt\n  };\n}\n\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function\r\n * @param hash - hash function that would be used e.g. sha256\r\n * @param password - password from which a derived key is generated\r\n * @param salt - cryptographic salt\r\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\r\n */\n\n\nfunction pbkdf2(hash, password, salt, opts) {\n  const {\n    c,\n    dkLen,\n    DK,\n    PRF,\n    PRFSalt\n  } = pbkdf2Init(hash, password, salt, opts);\n  let prfW; // Working copy\n\n  const arr = new Uint8Array(4);\n  const view = (0, utils_js_1.createView)(arr);\n  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n\n    Ti.set(u.subarray(0, Ti.length));\n\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexports.pbkdf2 = pbkdf2;\n\nasync function pbkdf2Async(hash, password, salt, opts) {\n  const {\n    c,\n    dkLen,\n    asyncTick,\n    DK,\n    PRF,\n    PRFSalt\n  } = pbkdf2Init(hash, password, salt, opts);\n  let prfW; // Working copy\n\n  const arr = new Uint8Array(4);\n  const view = (0, utils_js_1.createView)(arr);\n  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n\n    Ti.set(u.subarray(0, Ti.length));\n    await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, i => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexports.pbkdf2Async = pbkdf2Async;","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/node_modules/@noble/hashes/pbkdf2.js"],"names":["Object","defineProperty","exports","value","pbkdf2Async","pbkdf2","_assert_js_1","require","hmac_js_1","utils_js_1","pbkdf2Init","hash","_password","_salt","_opts","default","opts","checkOpts","dkLen","asyncTick","c","number","Error","password","toBytes","salt","DK","Uint8Array","PRF","hmac","create","PRFSalt","_cloneInto","update","pbkdf2Output","prfW","u","destroy","fill","arr","view","createView","outputLen","ti","pos","Ti","subarray","setInt32","digestInto","set","length","ui","i","asyncLoop"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\r\nconst _assert_js_1 = require(\"./_assert.js\");\r\nconst hmac_js_1 = require(\"./hmac.js\");\r\nconst utils_js_1 = require(\"./utils.js\");\r\n// Common prologue and epilogue for sync/async functions\r\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\r\n    _assert_js_1.default.hash(hash);\r\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\r\n    const { c, dkLen, asyncTick } = opts;\r\n    _assert_js_1.default.number(c);\r\n    _assert_js_1.default.number(dkLen);\r\n    _assert_js_1.default.number(asyncTick);\r\n    if (c < 1)\r\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\r\n    const password = (0, utils_js_1.toBytes)(_password);\r\n    const salt = (0, utils_js_1.toBytes)(_salt);\r\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\r\n    const DK = new Uint8Array(dkLen);\r\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n    const PRF = hmac_js_1.hmac.create(hash, password);\r\n    const PRFSalt = PRF._cloneInto().update(salt);\r\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\r\n}\r\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\r\n    PRF.destroy();\r\n    PRFSalt.destroy();\r\n    if (prfW)\r\n        prfW.destroy();\r\n    u.fill(0);\r\n    return DK;\r\n}\r\n/**\r\n * PBKDF2-HMAC: RFC 2898 key derivation function\r\n * @param hash - hash function that would be used e.g. sha256\r\n * @param password - password from which a derived key is generated\r\n * @param salt - cryptographic salt\r\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\r\n */\r\nfunction pbkdf2(hash, password, salt, opts) {\r\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n    let prfW; // Working copy\r\n    const arr = new Uint8Array(4);\r\n    const view = (0, utils_js_1.createView)(arr);\r\n    const u = new Uint8Array(PRF.outputLen);\r\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n        // Ti = F(Password, Salt, c, i)\r\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n        view.setInt32(0, ti, false);\r\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n        Ti.set(u.subarray(0, Ti.length));\r\n        for (let ui = 1; ui < c; ui++) {\r\n            // Uc = PRF(Password, Uc−1)\r\n            PRF._cloneInto(prfW).update(u).digestInto(u);\r\n            for (let i = 0; i < Ti.length; i++)\r\n                Ti[i] ^= u[i];\r\n        }\r\n    }\r\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\nexports.pbkdf2 = pbkdf2;\r\nasync function pbkdf2Async(hash, password, salt, opts) {\r\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\r\n    let prfW; // Working copy\r\n    const arr = new Uint8Array(4);\r\n    const view = (0, utils_js_1.createView)(arr);\r\n    const u = new Uint8Array(PRF.outputLen);\r\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\r\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\r\n        // Ti = F(Password, Salt, c, i)\r\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\r\n        view.setInt32(0, ti, false);\r\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\r\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\r\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\r\n        Ti.set(u.subarray(0, Ti.length));\r\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\r\n            // Uc = PRF(Password, Uc−1)\r\n            PRF._cloneInto(prfW).update(u).digestInto(u);\r\n            for (let i = 0; i < Ti.length; i++)\r\n                Ti[i] ^= u[i];\r\n        });\r\n    }\r\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\r\n}\r\nexports.pbkdf2Async = pbkdf2Async;\r\n"]},"metadata":{},"sourceType":"script"}