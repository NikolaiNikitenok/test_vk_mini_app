{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\n\nconst _sha2_js_1 = require(\"./_sha2.js\");\n\nconst _u64_js_1 = require(\"./_u64.js\");\n\nconst utils_js_1 = require(\"./utils.js\"); // Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\n\n\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split(['0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc', '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118', '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2', '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694', '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65', '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5', '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4', '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70', '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df', '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b', '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30', '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8', '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8', '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3', '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec', '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b', '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178', '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b', '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c', '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'].map(n => BigInt(n))); // Temporary buffer, not used to store anything between runs\n\n\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nclass SHA512 extends _sha2_js_1.SHA2 {\n  constructor() {\n    super(128, 64, 16, false); // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n    // Also looks cleaner and easier to verify with spec.\n    // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n    // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0x6a09e667 | 0;\n    this.Al = 0xf3bcc908 | 0;\n    this.Bh = 0xbb67ae85 | 0;\n    this.Bl = 0x84caa73b | 0;\n    this.Ch = 0x3c6ef372 | 0;\n    this.Cl = 0xfe94f82b | 0;\n    this.Dh = 0xa54ff53a | 0;\n    this.Dl = 0x5f1d36f1 | 0;\n    this.Eh = 0x510e527f | 0;\n    this.El = 0xade682d1 | 0;\n    this.Fh = 0x9b05688c | 0;\n    this.Fl = 0x2b3e6c1f | 0;\n    this.Gh = 0x1f83d9ab | 0;\n    this.Gl = 0xfb41bd6b | 0;\n    this.Hh = 0x5be0cd19 | 0;\n    this.Hl = 0x137e2179 | 0;\n  } // prettier-ignore\n\n\n  get() {\n    const {\n      Ah,\n      Al,\n      Bh,\n      Bl,\n      Ch,\n      Cl,\n      Dh,\n      Dl,\n      Eh,\n      El,\n      Fh,\n      Fl,\n      Gh,\n      Gl,\n      Hh,\n      Hl\n    } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  } // prettier-ignore\n\n\n  set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n\n  process(view, offset) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32(offset += 4);\n    }\n\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n\n      const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n\n      const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7); // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n\n\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n\n      const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n\n      const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6); // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n\n\n      const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n\n      const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n\n    let {\n      Ah,\n      Al,\n      Bh,\n      Bl,\n      Ch,\n      Cl,\n      Dh,\n      Dl,\n      Eh,\n      El,\n      Fh,\n      Fl,\n      Gh,\n      Gl,\n      Hh,\n      Hl\n    } = this; // Compression function main loop, 80 rounds\n\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n\n      const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41); //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n\n\n      const CHIh = Eh & Fh ^ ~Eh & Gh;\n      const CHIl = El & Fl ^ ~El & Gl; // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n\n      const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n\n      const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n\n      const T1l = T1ll | 0; // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n\n      const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n\n      const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n\n      const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;\n      const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({\n        h: Eh,\n        l: El\n      } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n\n      const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n\n      Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    } // Add the compressed chunk to the current hash value\n\n\n    ({\n      h: Ah,\n      l: Al\n    } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({\n      h: Bh,\n      l: Bl\n    } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({\n      h: Ch,\n      l: Cl\n    } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({\n      h: Dh,\n      l: Dl\n    } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({\n      h: Eh,\n      l: El\n    } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({\n      h: Fh,\n      l: Fl\n    } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({\n      h: Gh,\n      l: Gl\n    } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({\n      h: Hh,\n      l: Hl\n    } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n\n  roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n\n}\n\nexports.SHA512 = SHA512;\n\nclass SHA512_256 extends SHA512 {\n  constructor() {\n    super(); // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0x22312194 | 0;\n    this.Al = 0xfc2bf72c | 0;\n    this.Bh = 0x9f555fa3 | 0;\n    this.Bl = 0xc84c64c2 | 0;\n    this.Ch = 0x2393b86b | 0;\n    this.Cl = 0x6f53b151 | 0;\n    this.Dh = 0x96387719 | 0;\n    this.Dl = 0x5940eabd | 0;\n    this.Eh = 0x96283ee2 | 0;\n    this.El = 0xa88effe3 | 0;\n    this.Fh = 0xbe5e1e25 | 0;\n    this.Fl = 0x53863992 | 0;\n    this.Gh = 0x2b0199fc | 0;\n    this.Gl = 0x2c85b8aa | 0;\n    this.Hh = 0x0eb72ddc | 0;\n    this.Hl = 0x81c52ca2 | 0;\n    this.outputLen = 32;\n  }\n\n}\n\nclass SHA384 extends SHA512 {\n  constructor() {\n    super(); // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0xcbbb9d5d | 0;\n    this.Al = 0xc1059ed8 | 0;\n    this.Bh = 0x629a292a | 0;\n    this.Bl = 0x367cd507 | 0;\n    this.Ch = 0x9159015a | 0;\n    this.Cl = 0x3070dd17 | 0;\n    this.Dh = 0x152fecd8 | 0;\n    this.Dl = 0xf70e5939 | 0;\n    this.Eh = 0x67332667 | 0;\n    this.El = 0xffc00b31 | 0;\n    this.Fh = 0x8eb44a87 | 0;\n    this.Fl = 0x68581511 | 0;\n    this.Gh = 0xdb0c2e0d | 0;\n    this.Gl = 0x64f98fa7 | 0;\n    this.Hh = 0x47b5481d | 0;\n    this.Hl = 0xbefa4fa4 | 0;\n    this.outputLen = 48;\n  }\n\n}\n\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/node_modules/@noble/hashes/sha512.js"],"names":["Object","defineProperty","exports","value","sha384","sha512_256","sha512","SHA512","_sha2_js_1","require","_u64_js_1","utils_js_1","SHA512_Kh","SHA512_Kl","default","split","map","n","BigInt","SHA512_W_H","Uint32Array","SHA512_W_L","SHA2","constructor","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","get","set","process","view","offset","i","getUint32","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","h","l","add","All","add3L","add3H","roundClean","fill","destroy","buffer","SHA512_256","outputLen","SHA384","wrapConstructor"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\r\nconst _sha2_js_1 = require(\"./_sha2.js\");\r\nconst _u64_js_1 = require(\"./_u64.js\");\r\nconst utils_js_1 = require(\"./utils.js\");\r\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\r\n// prettier-ignore\r\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\r\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\r\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\r\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\r\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\r\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\r\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\r\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\r\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\r\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\r\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\r\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\r\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\r\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\r\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\r\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\r\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\r\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\r\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\r\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\r\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\r\n].map(n => BigInt(n)));\r\n// Temporary buffer, not used to store anything between runs\r\nconst SHA512_W_H = new Uint32Array(80);\r\nconst SHA512_W_L = new Uint32Array(80);\r\nclass SHA512 extends _sha2_js_1.SHA2 {\r\n    constructor() {\r\n        super(128, 64, 16, false);\r\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\r\n        // Also looks cleaner and easier to verify with spec.\r\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\r\n        // h -- high 32 bits, l -- low 32 bits\r\n        this.Ah = 0x6a09e667 | 0;\r\n        this.Al = 0xf3bcc908 | 0;\r\n        this.Bh = 0xbb67ae85 | 0;\r\n        this.Bl = 0x84caa73b | 0;\r\n        this.Ch = 0x3c6ef372 | 0;\r\n        this.Cl = 0xfe94f82b | 0;\r\n        this.Dh = 0xa54ff53a | 0;\r\n        this.Dl = 0x5f1d36f1 | 0;\r\n        this.Eh = 0x510e527f | 0;\r\n        this.El = 0xade682d1 | 0;\r\n        this.Fh = 0x9b05688c | 0;\r\n        this.Fl = 0x2b3e6c1f | 0;\r\n        this.Gh = 0x1f83d9ab | 0;\r\n        this.Gl = 0xfb41bd6b | 0;\r\n        this.Hh = 0x5be0cd19 | 0;\r\n        this.Hl = 0x137e2179 | 0;\r\n    }\r\n    // prettier-ignore\r\n    get() {\r\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\r\n    }\r\n    // prettier-ignore\r\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\r\n        this.Ah = Ah | 0;\r\n        this.Al = Al | 0;\r\n        this.Bh = Bh | 0;\r\n        this.Bl = Bl | 0;\r\n        this.Ch = Ch | 0;\r\n        this.Cl = Cl | 0;\r\n        this.Dh = Dh | 0;\r\n        this.Dl = Dl | 0;\r\n        this.Eh = Eh | 0;\r\n        this.El = El | 0;\r\n        this.Fh = Fh | 0;\r\n        this.Fl = Fl | 0;\r\n        this.Gh = Gh | 0;\r\n        this.Gl = Gl | 0;\r\n        this.Hh = Hh | 0;\r\n        this.Hl = Hl | 0;\r\n    }\r\n    process(view, offset) {\r\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\r\n        for (let i = 0; i < 16; i++, offset += 4) {\r\n            SHA512_W_H[i] = view.getUint32(offset);\r\n            SHA512_W_L[i] = view.getUint32((offset += 4));\r\n        }\r\n        for (let i = 16; i < 80; i++) {\r\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\r\n            const W15h = SHA512_W_H[i - 15] | 0;\r\n            const W15l = SHA512_W_L[i - 15] | 0;\r\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\r\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\r\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\r\n            const W2h = SHA512_W_H[i - 2] | 0;\r\n            const W2l = SHA512_W_L[i - 2] | 0;\r\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\r\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\r\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\r\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\r\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\r\n            SHA512_W_H[i] = SUMh | 0;\r\n            SHA512_W_L[i] = SUMl | 0;\r\n        }\r\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\r\n        // Compression function main loop, 80 rounds\r\n        for (let i = 0; i < 80; i++) {\r\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\r\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\r\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\r\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\r\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\r\n            const CHIl = (El & Fl) ^ (~El & Gl);\r\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\r\n            // prettier-ignore\r\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\r\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\r\n            const T1l = T1ll | 0;\r\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\r\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\r\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\r\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\r\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\r\n            Hh = Gh | 0;\r\n            Hl = Gl | 0;\r\n            Gh = Fh | 0;\r\n            Gl = Fl | 0;\r\n            Fh = Eh | 0;\r\n            Fl = El | 0;\r\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\r\n            Dh = Ch | 0;\r\n            Dl = Cl | 0;\r\n            Ch = Bh | 0;\r\n            Cl = Bl | 0;\r\n            Bh = Ah | 0;\r\n            Bl = Al | 0;\r\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\r\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\r\n            Al = All | 0;\r\n        }\r\n        // Add the compressed chunk to the current hash value\r\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\r\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\r\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\r\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\r\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\r\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\r\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\r\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\r\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\r\n    }\r\n    roundClean() {\r\n        SHA512_W_H.fill(0);\r\n        SHA512_W_L.fill(0);\r\n    }\r\n    destroy() {\r\n        this.buffer.fill(0);\r\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    }\r\n}\r\nexports.SHA512 = SHA512;\r\nclass SHA512_256 extends SHA512 {\r\n    constructor() {\r\n        super();\r\n        // h -- high 32 bits, l -- low 32 bits\r\n        this.Ah = 0x22312194 | 0;\r\n        this.Al = 0xfc2bf72c | 0;\r\n        this.Bh = 0x9f555fa3 | 0;\r\n        this.Bl = 0xc84c64c2 | 0;\r\n        this.Ch = 0x2393b86b | 0;\r\n        this.Cl = 0x6f53b151 | 0;\r\n        this.Dh = 0x96387719 | 0;\r\n        this.Dl = 0x5940eabd | 0;\r\n        this.Eh = 0x96283ee2 | 0;\r\n        this.El = 0xa88effe3 | 0;\r\n        this.Fh = 0xbe5e1e25 | 0;\r\n        this.Fl = 0x53863992 | 0;\r\n        this.Gh = 0x2b0199fc | 0;\r\n        this.Gl = 0x2c85b8aa | 0;\r\n        this.Hh = 0x0eb72ddc | 0;\r\n        this.Hl = 0x81c52ca2 | 0;\r\n        this.outputLen = 32;\r\n    }\r\n}\r\nclass SHA384 extends SHA512 {\r\n    constructor() {\r\n        super();\r\n        // h -- high 32 bits, l -- low 32 bits\r\n        this.Ah = 0xcbbb9d5d | 0;\r\n        this.Al = 0xc1059ed8 | 0;\r\n        this.Bh = 0x629a292a | 0;\r\n        this.Bl = 0x367cd507 | 0;\r\n        this.Ch = 0x9159015a | 0;\r\n        this.Cl = 0x3070dd17 | 0;\r\n        this.Dh = 0x152fecd8 | 0;\r\n        this.Dl = 0xf70e5939 | 0;\r\n        this.Eh = 0x67332667 | 0;\r\n        this.El = 0xffc00b31 | 0;\r\n        this.Fh = 0x8eb44a87 | 0;\r\n        this.Fl = 0x68581511 | 0;\r\n        this.Gh = 0xdb0c2e0d | 0;\r\n        this.Gl = 0x64f98fa7 | 0;\r\n        this.Hh = 0x47b5481d | 0;\r\n        this.Hl = 0xbefa4fa4 | 0;\r\n        this.outputLen = 48;\r\n    }\r\n}\r\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\r\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\r\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\r\n"]},"metadata":{},"sourceType":"script"}