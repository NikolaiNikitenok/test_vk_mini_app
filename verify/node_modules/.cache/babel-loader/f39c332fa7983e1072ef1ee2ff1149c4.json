{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'share_external_outline_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"share_external_outline_20\"><path d=\"M14.816 6.96a.75.75 0 000-1.062L10.53 1.613a.749.749 0 00-1.057-.004l-.004.005-4.285 4.284a.75.75 0 101.06 1.061L9.25 3.954v9.19a.75.75 0 001.5 0v-9.19l3.005 3.005a.75.75 0 001.061 0z\" fill=\"currentColor\" /><path d=\"M4 12a.75.75 0 00-1.5 0v1.25a4.5 4.5 0 004.5 4.5h6a4.5 4.5 0 004.5-4.5V12a.75.75 0 00-1.5 0v1.25a3 3 0 01-3 3H7a3 3 0 01-3-3V12z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20ShareExternalOutline = function Icon20ShareExternalOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20ShareExternalOutline.mountIcon = mountIcon;\nexport default Icon20ShareExternalOutline;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,2BAAX;AACA,IAAMC,OAAO,GAAG,8eAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,0BAA+D,GAAG,SAAlEA,0BAAkE,CAACC,KAAD,EAAW;AACjFR,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,0BAAD,CAAoCD,SAAnCC,GAA+CD,SAA/CC;AAED,eAAeA,0BAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon20ShareExternalOutline","props","createElement","width","isNaN","height"],"sources":["../../../tmp/20/share_external_outline.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 20 20';\nconst id = 'share_external_outline_20';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"share_external_outline_20\"><path d=\"M14.816 6.96a.75.75 0 000-1.062L10.53 1.613a.749.749 0 00-1.057-.004l-.004.005-4.285 4.284a.75.75 0 101.06 1.061L9.25 3.954v9.19a.75.75 0 001.5 0v-9.19l3.005 3.005a.75.75 0 001.061 0z\" fill=\"currentColor\" /><path d=\"M4 12a.75.75 0 00-1.5 0v1.25a4.5 4.5 0 004.5 4.5h6a4.5 4.5 0 004.5-4.5V12a.75.75 0 00-1.5 0v1.25a3 3 0 01-3 3H7a3 3 0 01-3-3V12z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon20ShareExternalOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon20ShareExternalOutline: FC<Icon20ShareExternalOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20,\n  }));\n};\n\n(Icon20ShareExternalOutline as any).mountIcon = mountIcon;\n\nexport default Icon20ShareExternalOutline;\n"]},"metadata":{},"sourceType":"module"}