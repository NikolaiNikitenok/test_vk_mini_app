{"ast":null,"code":"import { defineProperties } from \"../utils/properties.js\";\nimport { assertArgument } from \"../utils/index.js\";\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\nexport class NetworkPlugin {\n  name;\n\n  constructor(name) {\n    defineProperties(this, {\n      name\n    });\n  }\n\n  clone() {\n    return new NetworkPlugin(this.name);\n  }\n\n}\nexport class GasCostPlugin extends NetworkPlugin {\n  effectiveBlock;\n  txBase;\n  txCreate;\n  txDataZero;\n  txDataNonzero;\n  txAccessListStorageKey;\n  txAccessListAddress;\n\n  constructor(effectiveBlock, costs) {\n    if (effectiveBlock == null) {\n      effectiveBlock = 0;\n    }\n\n    super(`org.ethers.network.plugins.GasCost#${effectiveBlock || 0}`);\n    const props = {\n      effectiveBlock\n    };\n\n    function set(name, nullish) {\n      let value = (costs || {})[name];\n\n      if (value == null) {\n        value = nullish;\n      }\n\n      assertArgument(typeof value === \"number\", `invalud value for ${name}`, \"costs\", costs);\n      props[name] = value;\n    }\n\n    set(\"txBase\", 21000);\n    set(\"txCreate\", 32000);\n    set(\"txDataZero\", 4);\n    set(\"txDataNonzero\", 16);\n    set(\"txAccessListStorageKey\", 1900);\n    set(\"txAccessListAddress\", 2400);\n    defineProperties(this, props);\n  }\n\n  clone() {\n    return new GasCostPlugin(this.effectiveBlock, this);\n  }\n\n} // Networks shoudl use this plugin to specify the contract address\n// and network necessary to resolve ENS names.\n\nexport class EnsPlugin extends NetworkPlugin {\n  // The ENS contract address\n  address; // The network ID that the ENS contract lives on\n\n  targetNetwork;\n\n  constructor(address, targetNetwork) {\n    super(\"org.ethers.plugins.network.Ens\");\n    defineProperties(this, {\n      address: address || EnsAddress,\n      targetNetwork: targetNetwork == null ? 1 : targetNetwork\n    });\n  }\n\n  clone() {\n    return new EnsPlugin(this.address, this.targetNetwork);\n  }\n\n}\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n  #feeDataFunc;\n\n  get feeDataFunc() {\n    return this.#feeDataFunc;\n  }\n\n  constructor(feeDataFunc) {\n    super(\"org.ethers.plugins.network.FeeData\");\n    this.#feeDataFunc = feeDataFunc;\n  }\n\n  async getFeeData(provider) {\n    return await this.#feeDataFunc(provider);\n  }\n\n  clone() {\n    return new FeeDataNetworkPlugin(this.#feeDataFunc);\n  }\n\n}\n/*\r\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\r\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\r\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\r\n\r\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\r\n        super(\"org.ethers.network-plugins.custom-block\");\r\n        this.#blockFunc = blockFunc;\r\n        this.#blockWithTxsFunc = blockWithTxsFunc;\r\n    }\r\n\r\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\r\n        return await this.#blockFunc(provider, block);\r\n    }\r\n\r\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\r\n        return await this.#blockWithTxsFunc(provider, block);\r\n    }\r\n\r\n    clone(): CustomBlockNetworkPlugin {\r\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\r\n    }\r\n}\r\n*/","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AAQA,MAAMC,UAAU,GAAG,4CAAnB;AAEA,OAAM,MAAOC,aAAP,CAAoB;AACbC,MAAI;;AAEbC,cAAYD,IAAZ,EAAwB;AACpBJ,oBAAgB,CAAgB,IAAhB,EAAsB;AAAEI;AAAF,KAAtB,CAAhB;AACH;;AAEDE,OAAK;AACD,WAAO,IAAIH,aAAJ,CAAkB,KAAKC,IAAvB,CAAP;AACH;;AATqB;AA4B1B,OAAM,MAAOG,aAAP,SAA6BJ,aAA7B,CAA0C;AACnCK,gBAAc;AAEdC,QAAM;AACNC,UAAQ;AACRC,YAAU;AACVC,eAAa;AACbC,wBAAsB;AACtBC,qBAAmB;;AAE5BT,cAAYG,cAAZ,EAAqCO,KAArC,EAA8D;AAC1D,QAAIP,cAAc,IAAI,IAAtB,EAA4B;AAAEA,oBAAc,GAAG,CAAjB;AAAqB;;AACnD,UAAM,sCAAwCA,cAAc,IAAI,CAAG,EAAnE;AAEA,UAAMQ,KAAK,GAA2B;AAAER;AAAF,KAAtC;;AACA,aAASS,GAAT,CAAab,IAAb,EAA4Cc,OAA5C,EAA2D;AACvD,UAAIC,KAAK,GAAG,CAACJ,KAAK,IAAI,EAAV,EAAeX,IAAf,CAAZ;;AACA,UAAIe,KAAK,IAAI,IAAb,EAAmB;AAAEA,aAAK,GAAGD,OAAR;AAAkB;;AACvCjB,oBAAc,CAAC,OAAOkB,KAAP,KAAkB,QAAnB,EAA6B,qBAAsBf,IAAK,EAAxD,EAA4D,OAA5D,EAAqEW,KAArE,CAAd;AACAC,WAAK,CAACZ,IAAD,CAAL,GAAce,KAAd;AACH;;AAEDF,OAAG,CAAC,QAAD,EAAW,KAAX,CAAH;AACAA,OAAG,CAAC,UAAD,EAAa,KAAb,CAAH;AACAA,OAAG,CAAC,YAAD,EAAe,CAAf,CAAH;AACAA,OAAG,CAAC,eAAD,EAAkB,EAAlB,CAAH;AACAA,OAAG,CAAC,wBAAD,EAA2B,IAA3B,CAAH;AACAA,OAAG,CAAC,qBAAD,EAAwB,IAAxB,CAAH;AAEAjB,oBAAgB,CAAgB,IAAhB,EAAsBgB,KAAtB,CAAhB;AACH;;AAEDV,OAAK;AACD,WAAO,IAAIC,aAAJ,CAAkB,KAAKC,cAAvB,EAAuC,IAAvC,CAAP;AACH;;AAlC2C,C,CAqChD;AACA;;AACA,OAAM,MAAOY,SAAP,SAAyBjB,aAAzB,CAAsC;AAExC;AACSkB,SAAO,CAHwB,CAKxC;;AACSC,eAAa;;AAEtBjB,cAAYgB,OAAZ,EAAqCC,aAArC,EAAkE;AAC9D,UAAM,gCAAN;AACAtB,oBAAgB,CAAY,IAAZ,EAAkB;AAC9BqB,aAAO,EAAGA,OAAO,IAAInB,UADS;AAE9BoB,mBAAa,EAAIA,aAAa,IAAI,IAAlB,GAA0B,CAA1B,GAA6BA;AAFf,KAAlB,CAAhB;AAIH;;AAEDhB,OAAK;AACD,WAAO,IAAIc,SAAJ,CAAc,KAAKC,OAAnB,EAA4B,KAAKC,aAAjC,CAAP;AACH;;AAlBuC;AAqB5C,OAAM,MAAOC,oBAAP,SAAoCpB,aAApC,CAAiD;AAC1C;;AAEM,MAAXqB,WAAW;AACX,WAAO,KAAK,YAAZ;AACH;;AAEDnB,cAAYmB,WAAZ,EAAiE;AAC7D,UAAM,oCAAN;AACA,SAAK,YAAL,GAAoBA,WAApB;AACH;;AAEe,QAAVC,UAAU,CAACC,QAAD,EAAmB;AAC/B,WAAO,MAAM,KAAK,YAAL,CAAkBA,QAAlB,CAAb;AACH;;AAEDpB,OAAK;AACD,WAAO,IAAIiB,oBAAJ,CAAyB,KAAK,YAA9B,CAAP;AACH;;AAlBkD;AAqBvD","names":["defineProperties","assertArgument","EnsAddress","NetworkPlugin","name","constructor","clone","GasCostPlugin","effectiveBlock","txBase","txCreate","txDataZero","txDataNonzero","txAccessListStorageKey","txAccessListAddress","costs","props","set","nullish","value","EnsPlugin","address","targetNetwork","FeeDataNetworkPlugin","feeDataFunc","getFeeData","provider"],"sourceRoot":"","sources":["../../src.ts/providers/plugins-network.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}