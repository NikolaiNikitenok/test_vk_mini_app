{"ast":null,"code":"import _slicedToArray from\"C:/Users/k8909/OneDrive/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/test_vk_mini_app/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';// import {ethers} from 'ethers'\nimport{Button,Group,Panel,PanelHeader,PanelHeaderBack,Div,Header,TabsItem,Tabs}from'@vkontakte/vkui';import{Icon28SettingsOutline,Icon28LogoVk}from'@vkontakte/icons';import persik from'../img/persik.png';import'./Persik.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Inventory=function Inventory(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),userAccount=_useState2[0],setUserAccount=_useState2[1];var onConnect=function onConnect(){if(window.ethereum){//если есть метамаск\nwindow.ethereum.request({method:\"eth_requestAccounts\"}).then(function(account){setUserAccount(account[0]);getBalance(account[0]);});}else{alert(\"Установите МетаМаск!\");}};var getBalance=function getBalance(account){window.ethereum.request({method:\"eth_getBalance\",params:[account,\"Latest\"]}).then(function(balance){console.log(balance);});};return/*#__PURE__*/_jsxs(Panel,{children:[/*#__PURE__*/_jsx(PanelHeader,{left:/*#__PURE__*/_jsx(Icon28LogoVk,{}),children:\" NFT for Events\"}),/*#__PURE__*/_jsxs(Tabs,{children:[/*#__PURE__*/_jsx(TabsItem,{selected:true,children:\"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"}),/*#__PURE__*/_jsx(TabsItem,{children:\"\\u041C\\u043E\\u0438 \\u0431\\u0438\\u043B\\u0435\\u0442\\u044B\"}),/*#__PURE__*/_jsx(TabsItem,{children:\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"})]}),/*#__PURE__*/_jsx(Group,{header:/*#__PURE__*/_jsx(Header,{mode:\"secondary\",children:\"Connect MetaMask\"}),children:/*#__PURE__*/_jsx(Div,{children:userAccount?/*#__PURE__*/_jsx(\"span\",{children:\"\\u041A\\u043E\\u0448\\u0435\\u043B\\u0435\\u043A \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D!!!\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0439 \\u043A\\u043E\\u0448\\u0435\\u043B\\u0435\\u043A \\u043A \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044E!\"}),/*#__PURE__*/_jsx(Button,{stretched:true,size:\"l\",mode:\"secondary\",onClick:onConnect,children:\"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u0448\\u0435\\u043B\\u0435\\u043A MetaMask\"})]})})})]});};// Inventory.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/src/panels/Persik.js"],"names":["React","useState","useEffect","Button","Group","Panel","PanelHeader","PanelHeaderBack","Div","Header","TabsItem","Tabs","Icon28SettingsOutline","Icon28LogoVk","persik","Inventory","userAccount","setUserAccount","onConnect","window","ethereum","request","method","then","account","getBalance","alert","params","balance","console","log"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA;AACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,KAAxB,CAA+BC,WAA/B,CAA4CC,eAA5C,CAA6DC,GAA7D,CAAkEC,MAAlE,CAA0EC,QAA1E,CAAoFC,IAApF,KAA+F,iBAA/F,CACA,OAAQC,qBAAR,CAA+BC,YAA/B,KAAkD,kBAAlD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAO,cAAP,C,6IAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACvB,cAAsCd,QAAQ,CAAC,IAAD,CAA9C,wCAAOe,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACvB,GAAIC,MAAM,CAACC,QAAX,CAAqB,CACpB;AACAD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,CAACC,MAAM,CAAE,qBAAT,CAAxB,EAAyDC,IAAzD,CAA8D,SAACC,OAAD,CAAa,CAC1EP,cAAc,CAACO,OAAO,CAAC,CAAD,CAAR,CAAd,CACAC,UAAU,CAACD,OAAO,CAAC,CAAD,CAAR,CAAV,CACA,CAHD,EAIA,CAND,IAMO,CACNE,KAAK,CAAC,sBAAD,CAAL,CACA,CACD,CAVD,CAYA,GAAMD,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,OAAD,CAAa,CAC/BL,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,CAACC,MAAM,CAAE,gBAAT,CAA2BK,MAAM,CAAE,CAACH,OAAD,CAAU,QAAV,CAAnC,CAAxB,EAAkFD,IAAlF,CAAuF,SAACK,OAAD,CAAa,CACnGC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACA,CAFD,EAGA,CAJD,CAMA,mBACC,MAAC,KAAD,yBACC,KAAC,WAAD,EAAa,IAAI,cAAE,KAAC,YAAD,IAAnB,6BADD,cAIC,MAAC,IAAD,yBACC,KAAC,QAAD,EAAU,QAAQ,KAAlB,wDADD,cAGC,KAAC,QAAD,sEAHD,cAIC,KAAC,QAAD,qEAJD,GAJD,cAUC,KAAC,KAAD,EAAO,MAAM,cAAE,KAAC,MAAD,EAAQ,IAAI,CAAC,WAAb,8BAAf,uBACC,KAAC,GAAD,WACEZ,WAAW,cACX,8HADW,cAGV,wCAAE,6NAAF,cACA,KAAC,MAAD,EAAQ,SAAS,KAAjB,CAAkB,IAAI,CAAC,GAAvB,CAA2B,IAAI,CAAC,WAAhC,CAA4C,OAAO,CAAEE,SAArD,8HADA,GAJH,EADD,EAVD,GADD,CAyBA,CA9CD,CA+CA;AACA;AACA;AACA;AAEA,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst Inventory = () => {\r\n\tconst [userAccount, setUserAccount] = useState(null);\r\n\r\n\tconst onConnect = () => {\r\n\t\tif (window.ethereum) {\r\n\t\t\t//если есть метамаск\r\n\t\t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t\t\t\tsetUserAccount(account[0]);\r\n\t\t\t\tgetBalance(account[0]);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\talert(\"Установите МетаМаск!\")\r\n\t\t}\r\n\t};\r\n\r\n\tconst getBalance = (account) => {\r\n\t\twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t\t\tconsole.log(balance)\r\n\t\t})\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem selected>Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem>Мои билеты</TabsItem>\r\n\t\t\t\t<TabsItem>Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Connect MetaMask</Header>}>\r\n\t\t\t\t<Div>\t\r\n\t\t\t\t\t{userAccount ? (\r\n\t\t\t\t\t\t<span>Кошелек подключен!!!</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t\t\t</Div>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Inventory;\r\n"]},"metadata":{},"sourceType":"module"}