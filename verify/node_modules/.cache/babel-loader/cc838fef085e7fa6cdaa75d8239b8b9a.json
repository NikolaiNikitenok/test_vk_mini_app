{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k8909\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\test_vk_mini_app\\\\test\\\\src\\\\panels\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // import {ethers} from 'ethers'\n\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton } from '@vkontakte/vkui';\nimport { Icon28SettingsOutline, Icon28LogoVk, Icon16Done } from '@vkontakte/icons'; // import MetaMask from 'metamask-connect';\n\nimport Web3 from 'web3'; // import WalletConnectProvider from '@walletconnect/web3-provider';\n\nimport './Persik.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = _ref => {\n  _s();\n\n  let {\n    id,\n    go\n  } = _ref;\n  // const [userAccount, setUserAccount] = useState(null);\n  // const onConnect = () => {\n  // \tlet provider;\n  // \tif (window.ethereum) {\n  // \t\t//если есть метамаск\n  // \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\n  // \t\t\tsetUserAccount(account[0]);\n  // \t\t\tgetBalance(account[0]);\n  // \t\t})\n  // \t} else if (window.web3) {\n  // \t\tprovider = window.web3.currentProvider;\n  // \t} else {\n  // \t\talert(\"Установите МетаМаск!\")\n  // \t}\n  // };\n  // const getBalance = (account) => {\n  // \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\n  // \t\tconsole.log(balance)\t\n  // \t})\n  // };\n  // return(\n  // \t<Panel>\n  // \t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\n  // \t\t</PanelHeader>\n  // \t\t<Tabs>\n  // \t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\n  // \t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\n  // \t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\n  // \t\t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\n  // \t\t</Tabs>\n  // \t\t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\n  // \t\t\t<Div>\t\n  // \t\t\t\t{userAccount ? (\n  //                       <>\n  //                           <span>Кошелек подключен!!!</span>\n  //                       </>\n  // \t\t\t\t\t) : (\n  // \t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\n  // \t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\n  // \t\t\t\t\t\t)}\n  // \t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\n  // \t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\n  // \t\t\t</Div>\n  // \t\t</Group>\n  // \t</Panel>\n  // )\n  const [isConnected, setIsConnected] = useState(false);\n  const [ethBalance, setEthBalance] = useState(\"\");\n\n  const detectCurrentProvider = () => {\n    let provider;\n\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\n    }\n\n    return provider;\n  };\n\n  const onConnect = async () => {\n    try {\n      const currentProvider = detectCurrentProvider();\n\n      if (currentProvider) {\n        await currentProvider.request({\n          method: 'eth_requestAccounts'\n        });\n        const web3 = new Web3(currentProvider);\n        const userAccount = await web3.eth.getAccounts();\n        const account = userAccount[0];\n        let ethBalance = await web3.eth.getBalance(account);\n        setEthBalance(ethBalance);\n        setIsConnected(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onDisconnect = () => {\n    setIsConnected(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React dApp authentication with React, We3.js and Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wrapper\",\n      children: !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"app-button__login\",\n          onClick: onConnect,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" You are connected to metamask.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-balance\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Balance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), ethBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"app-buttons__logout\",\n          onClick: onDisconnect,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"WD0gFgcxczUF9KnS+7Z27Km5dsE=\");\n\n_c = Settings;\nSettings.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n}; // Inventory.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\n\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/src/panels/Settings.js"],"names":["React","useState","useEffect","PropTypes","Button","Group","Panel","PanelHeader","PanelHeaderBack","Div","Header","TabsItem","Tabs","Snackbar","Avatar","CellButton","Icon28SettingsOutline","Icon28LogoVk","Icon16Done","Web3","Settings","id","go","isConnected","setIsConnected","ethBalance","setEthBalance","detectCurrentProvider","provider","window","ethereum","web3","currentProvider","console","log","onConnect","request","method","userAccount","eth","getAccounts","account","getBalance","err","onDisconnect","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk, Icon16Done} from '@vkontakte/icons';\r\n// import MetaMask from 'metamask-connect';\r\nimport Web3 from 'web3';\r\n// import WalletConnectProvider from '@walletconnect/web3-provider';\r\n\r\nimport './Persik.css';\r\n\r\nconst Settings = ({id, go}) => {\r\n\t// const [userAccount, setUserAccount] = useState(null);\r\n\r\n\t// const onConnect = () => {\r\n\t// \tlet provider;\r\n\t// \tif (window.ethereum) {\r\n\t// \t\t//если есть метамаск\r\n\t// \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t// \t\t\tsetUserAccount(account[0]);\r\n\t// \t\t\tgetBalance(account[0]);\r\n\t// \t\t})\r\n\t// \t} else if (window.web3) {\r\n\t// \t\tprovider = window.web3.currentProvider;\r\n\t// \t} else {\r\n\t// \t\talert(\"Установите МетаМаск!\")\r\n\t// \t}\r\n\t// };\r\n\r\n\t// const getBalance = (account) => {\r\n\t// \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t// \t\tconsole.log(balance)\t\r\n\t// \t})\r\n\t// };\r\n    \r\n\r\n\t// return(\r\n\t// \t<Panel>\r\n\t// \t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t// \t\t</PanelHeader>\r\n\t// \t\t<Tabs>\r\n\t// \t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t// \t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t// \t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n\t// \t\t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t// \t\t</Tabs>\r\n\t// \t\t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\r\n\t// \t\t\t<Div>\t\r\n\t// \t\t\t\t{userAccount ? (\r\n  //                       <>\r\n  //                           <span>Кошелек подключен!!!</span>\r\n  //                       </>\r\n\t// \t\t\t\t\t) : (\r\n\t// \t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t// \t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t// \t\t\t\t\t\t)}\r\n\t// \t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t// \t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t// \t\t\t</Div>\r\n\t// \t\t</Group>\r\n\t// \t</Panel>\r\n\t// )\r\n\r\n\tconst [isConnected, setIsConnected] = useState(false);\r\n  const [ethBalance, setEthBalance] = useState(\"\");\r\n  \r\n  const detectCurrentProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n    }\r\n    return provider;\r\n  };\r\n  \r\n  const onConnect = async() => {\r\n    try {\r\n      const currentProvider = detectCurrentProvider();\r\n      if(currentProvider) {\r\n        await currentProvider.request({method: 'eth_requestAccounts'});\r\n        const web3 = new Web3(currentProvider);\r\n        const userAccount  =await web3.eth.getAccounts();\r\n        const account = userAccount[0];\r\n        let ethBalance = await web3.eth.getBalance(account);\r\n        setEthBalance(ethBalance);\r\n        setIsConnected(true);\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  const onDisconnect = () => {\r\n    setIsConnected(false);\r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-header\">\r\n        <h1>React dApp authentication with React, We3.js and Metamask</h1>\r\n      </div>\r\n      <div className=\"app-wrapper\">\r\n        {!isConnected && (\r\n          <div>\r\n            <button className=\"app-button__login\" onClick={onConnect}>\r\n            Login\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {isConnected && (\r\n        <div className=\"app-wrapper\">\r\n          <div className=\"app-details\">\r\n            <h2> You are connected to metamask.</h2>\r\n            <div className=\"app-balance\">\r\n              <span>Balance: </span>\r\n              {ethBalance}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className=\"app-buttons__logout\" onClick={onDisconnect}>\r\n            Disconnect\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}