{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\n\nfunction number(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexports.number = number;\n\nfunction bool(b) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexports.bool = bool;\n\nfunction bytes(b) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n\n  for (var _len = arguments.length, lengths = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    lengths[_key - 1] = arguments[_key];\n  }\n\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\nexports.bytes = bytes;\n\nfunction hash(hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexports.hash = hash;\n\nfunction exists(instance) {\n  let checkFinished = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\nexports.exists = exists;\n\nfunction output(out, instance) {\n  bytes(out);\n  const min = instance.outputLen;\n\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexports.output = output;\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output\n};\nexports.default = assert;","map":{"version":3,"sources":["/home/nikolai/GitHub/test_vk_mini_app/test/node_modules/@noble/hashes/_assert.js"],"names":["Object","defineProperty","exports","value","output","exists","hash","bytes","bool","number","n","Number","isSafeInteger","Error","b","Uint8Array","TypeError","lengths","length","includes","create","outputLen","blockLen","instance","checkFinished","destroyed","finished","out","min","assert","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,MAAR,GAAiBH,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACM,IAAR,GAAeN,OAAO,CAACO,MAAR,GAAiB,KAAK,CAAtG;;AACA,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AACf,MAAI,CAACC,MAAM,CAACC,aAAP,CAAqBF,CAArB,CAAD,IAA4BA,CAAC,GAAG,CAApC,EACI,MAAM,IAAIG,KAAJ,CAAW,2BAA0BH,CAAE,EAAvC,CAAN;AACP;;AACDR,OAAO,CAACO,MAAR,GAAiBA,MAAjB;;AACA,SAASD,IAAT,CAAcM,CAAd,EAAiB;AACb,MAAI,OAAOA,CAAP,KAAa,SAAjB,EACI,MAAM,IAAID,KAAJ,CAAW,yBAAwBC,CAAE,EAArC,CAAN;AACP;;AACDZ,OAAO,CAACM,IAAR,GAAeA,IAAf;;AACA,SAASD,KAAT,CAAeO,CAAf,EAA8B;AAC1B,MAAI,EAAEA,CAAC,YAAYC,UAAf,CAAJ,EACI,MAAM,IAAIC,SAAJ,CAAc,qBAAd,CAAN;;AAFsB,oCAATC,OAAS;AAATA,IAAAA,OAAS;AAAA;;AAG1B,MAAIA,OAAO,CAACC,MAAR,GAAiB,CAAjB,IAAsB,CAACD,OAAO,CAACE,QAAR,CAAiBL,CAAC,CAACI,MAAnB,CAA3B,EACI,MAAM,IAAIF,SAAJ,CAAe,iCAAgCC,OAAQ,mBAAkBH,CAAC,CAACI,MAAO,EAAlF,CAAN;AACP;;AACDhB,OAAO,CAACK,KAAR,GAAgBA,KAAhB;;AACA,SAASD,IAAT,CAAcA,IAAd,EAAoB;AAChB,MAAI,OAAOA,IAAP,KAAgB,UAAhB,IAA8B,OAAOA,IAAI,CAACc,MAAZ,KAAuB,UAAzD,EACI,MAAM,IAAIP,KAAJ,CAAU,iDAAV,CAAN;AACJJ,EAAAA,MAAM,CAACH,IAAI,CAACe,SAAN,CAAN;AACAZ,EAAAA,MAAM,CAACH,IAAI,CAACgB,QAAN,CAAN;AACH;;AACDpB,OAAO,CAACI,IAAR,GAAeA,IAAf;;AACA,SAASD,MAAT,CAAgBkB,QAAhB,EAAgD;AAAA,MAAtBC,aAAsB,uEAAN,IAAM;AAC5C,MAAID,QAAQ,CAACE,SAAb,EACI,MAAM,IAAIZ,KAAJ,CAAU,kCAAV,CAAN;AACJ,MAAIW,aAAa,IAAID,QAAQ,CAACG,QAA9B,EACI,MAAM,IAAIb,KAAJ,CAAU,uCAAV,CAAN;AACP;;AACDX,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AACA,SAASD,MAAT,CAAgBuB,GAAhB,EAAqBJ,QAArB,EAA+B;AAC3BhB,EAAAA,KAAK,CAACoB,GAAD,CAAL;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACF,SAArB;;AACA,MAAIM,GAAG,CAACT,MAAJ,GAAaU,GAAjB,EAAsB;AAClB,UAAM,IAAIf,KAAJ,CAAW,yDAAwDe,GAAI,EAAvE,CAAN;AACH;AACJ;;AACD1B,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACA,MAAMyB,MAAM,GAAG;AACXpB,EAAAA,MADW;AAEXD,EAAAA,IAFW;AAGXD,EAAAA,KAHW;AAIXD,EAAAA,IAJW;AAKXD,EAAAA,MALW;AAMXD,EAAAA;AANW,CAAf;AAQAF,OAAO,CAAC4B,OAAR,GAAkBD,MAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n"]},"metadata":{},"sourceType":"script"}