{"ast":null,"code":"import { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nexport var CalendarDay = /*#__PURE__*/React.memo(function (_ref) {\n  var day = _ref.day,\n      today = _ref.today,\n      selected = _ref.selected,\n      onChange = _ref.onChange,\n      hidden = _ref.hidden,\n      disabled = _ref.disabled,\n      active = _ref.active,\n      selectionStart = _ref.selectionStart,\n      selectionEnd = _ref.selectionEnd,\n      focused = _ref.focused,\n      onEnter = _ref.onEnter,\n      onLeave = _ref.onLeave,\n      hinted = _ref.hinted,\n      hintedSelectionStart = _ref.hintedSelectionStart,\n      hintedSelectionEnd = _ref.hintedSelectionEnd,\n      sameMonth = _ref.sameMonth,\n      size = _ref.size;\n  var locale = React.useContext(LocaleProviderContext);\n  var ref = React.useRef(null);\n  var onClick = React.useCallback(function () {\n    return onChange(day);\n  }, [day, onChange]);\n  var handleEnter = React.useCallback(function () {\n    return onEnter === null || onEnter === void 0 ? void 0 : onEnter(day);\n  }, [day, onEnter]);\n  var handleLeave = React.useCallback(function () {\n    return onLeave === null || onLeave === void 0 ? void 0 : onLeave(day);\n  }, [day, onLeave]);\n  React.useEffect(function () {\n    if (focused && ref.current) {\n      ref.current.dispatchEvent(new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, {\n        bubbles: true\n      }));\n      ref.current.focus();\n    }\n  }, [focused]);\n\n  if (hidden) {\n    return createScopedElement(\"div\", {\n      vkuiClass: \"CalendarDay__hidden\"\n    });\n  }\n\n  return createScopedElement(Tappable, {\n    vkuiClass: classNames(\"CalendarDay\", \"CalendarDay--size-\".concat(size), {\n      \"CalendarDay--today\": today,\n      \"CalendarDay--selected\": selected && !disabled,\n      \"CalendarDay--active\": active && !disabled,\n      \"CalendarDay--selection-start\": selectionStart,\n      \"CalendarDay--selection-end\": selectionEnd,\n      \"CalendarDay--disabled\": disabled,\n      \"CalendarDay--not-same-month\": !sameMonth\n    }),\n    hoverMode: active ? \"CalendarDay--active-hover\" : \"CalendarDay--hover\",\n    hasActive: false,\n    onClick: onClick,\n    disabled: disabled,\n    \"aria-label\": new Intl.DateTimeFormat(locale, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    }).format(day),\n    tabIndex: -1,\n    getRootRef: ref,\n    focusVisibleMode: active ? \"outside\" : \"inside\",\n    onEnter: handleEnter,\n    onLeave: handleLeave\n  }, createScopedElement(\"div\", {\n    vkuiClass: classNames(\"CalendarDay__hinted\", {\n      \"CalendarDay__hinted--active\": hinted,\n      \"CalendarDay__hinted--selection-start\": hintedSelectionStart,\n      \"CalendarDay__hinted--selection-end\": hintedSelectionEnd\n    })\n  }, createScopedElement(\"div\", {\n    vkuiClass: classNames(\"CalendarDay__inner\", {\n      \"CalendarDay__inner--active\": active && !disabled\n    })\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"CalendarDay__day-number\"\n  }, day.getDate()))));\n});\nCalendarDay.displayName = \"CalendarDay\";","map":{"version":3,"mappings":"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","names":["React","classNames","Tappable","ENABLE_KEYBOARD_INPUT_EVENT_NAME","LocaleProviderContext","CalendarDay","memo","day","today","selected","onChange","hidden","disabled","active","selectionStart","selectionEnd","focused","onEnter","onLeave","hinted","hintedSelectionStart","hintedSelectionEnd","sameMonth","size","locale","useContext","ref","useRef","onClick","useCallback","handleEnter","handleLeave","useEffect","current","dispatchEvent","Event","bubbles","focus","createScopedElement","vkuiClass","hoverMode","hasActive","Intl","DateTimeFormat","weekday","year","month","format","tabIndex","getRootRef","focusVisibleMode","getDate","displayName"],"sources":["../../../src/components/CalendarDay/CalendarDay.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { ENABLE_KEYBOARD_INPUT_EVENT_NAME } from \"../../hooks/useKeyboardInputTracker\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport \"./CalendarDay.css\";\n\nexport interface CalendarDayProps {\n  day: Date;\n  today?: boolean;\n  selected?: boolean;\n  selectionStart?: boolean;\n  selectionEnd?: boolean;\n  hintedSelectionStart?: boolean;\n  hintedSelectionEnd?: boolean;\n  active?: boolean;\n  hidden?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  hinted?: boolean;\n  sameMonth?: boolean;\n  size?: \"s\" | \"m\";\n  onChange(value: Date): void;\n  onEnter?(value: Date): void;\n  onLeave?(value: Date): void;\n}\n\nexport const CalendarDay: React.FC<CalendarDayProps> = React.memo(\n  ({\n    day,\n    today,\n    selected,\n    onChange,\n    hidden,\n    disabled,\n    active,\n    selectionStart,\n    selectionEnd,\n    focused,\n    onEnter,\n    onLeave,\n    hinted,\n    hintedSelectionStart,\n    hintedSelectionEnd,\n    sameMonth,\n    size,\n  }) => {\n    const locale = React.useContext(LocaleProviderContext);\n    const ref = React.useRef<HTMLElement>(null);\n    const onClick = React.useCallback(() => onChange(day), [day, onChange]);\n    const handleEnter = React.useCallback(() => onEnter?.(day), [day, onEnter]);\n    const handleLeave = React.useCallback(() => onLeave?.(day), [day, onLeave]);\n\n    React.useEffect(() => {\n      if (focused && ref.current) {\n        ref.current.dispatchEvent(\n          new Event(ENABLE_KEYBOARD_INPUT_EVENT_NAME, { bubbles: true })\n        );\n        ref.current.focus();\n      }\n    }, [focused]);\n\n    if (hidden) {\n      return <div vkuiClass=\"CalendarDay__hidden\"></div>;\n    }\n\n    return (\n      <Tappable\n        vkuiClass={classNames(\"CalendarDay\", `CalendarDay--size-${size}`, {\n          \"CalendarDay--today\": today,\n          \"CalendarDay--selected\": selected && !disabled,\n          \"CalendarDay--active\": active && !disabled,\n          \"CalendarDay--selection-start\": selectionStart,\n          \"CalendarDay--selection-end\": selectionEnd,\n          \"CalendarDay--disabled\": disabled,\n          \"CalendarDay--not-same-month\": !sameMonth,\n        })}\n        hoverMode={active ? \"CalendarDay--active-hover\" : \"CalendarDay--hover\"}\n        hasActive={false}\n        onClick={onClick}\n        disabled={disabled}\n        aria-label={new Intl.DateTimeFormat(locale, {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        }).format(day)}\n        tabIndex={-1}\n        getRootRef={ref}\n        focusVisibleMode={active ? \"outside\" : \"inside\"}\n        onEnter={handleEnter}\n        onLeave={handleLeave}\n      >\n        <div\n          vkuiClass={classNames(\"CalendarDay__hinted\", {\n            \"CalendarDay__hinted--active\": hinted,\n            \"CalendarDay__hinted--selection-start\": hintedSelectionStart,\n            \"CalendarDay__hinted--selection-end\": hintedSelectionEnd,\n          })}\n        >\n          <div\n            vkuiClass={classNames(\"CalendarDay__inner\", {\n              \"CalendarDay__inner--active\": active && !disabled,\n            })}\n          >\n            <div vkuiClass=\"CalendarDay__day-number\">{day.getDate()}</div>\n          </div>\n        </div>\n      </Tappable>\n    );\n  }\n);\n\nCalendarDay.displayName = \"CalendarDay\";\n"]},"metadata":{},"sourceType":"module"}