{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 44 44';\nvar id = 'smile_outline_44';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 44 44\" id=\"smile_outline_44\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h44v44H0z\" /><path d=\"M22 40c-9.941 0-18-8.059-18-18S12.059 4 22 4s18 8.059 18 18-8.059 18-18 18zm0-3c8.284 0 15-6.716 15-15S30.284 7 22 7 7 13.716 7 22s6.716 15 15 15zm-6.582-8.863a1.5 1.5 0 012.194-2.046 6 6 0 008.775.002 1.5 1.5 0 112.191 2.049 9 9 0 01-13.16-.005zm11.645-7.262a2.437 2.437 0 110-4.875 2.437 2.437 0 010 4.875zm-10.125 0a2.437 2.437 0 110-4.875 2.437 2.437 0 010 4.875z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon44SmileOutline = function Icon44SmileOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 44,\n    height: !isNaN(props.height) ? +props.height : 44\n  }));\n};\n\nIcon44SmileOutline.mountIcon = mountIcon;\nexport default Icon44SmileOutline;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,kBAAX;AACA,IAAMC,OAAO,GAAG,qkBAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,kBAA+C,GAAG,SAAlDA,kBAAkD,CAACC,KAAD,EAAW;AACjER,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,kBAAD,CAA4BD,SAA3BC,GAAuCD,SAAvCC;AAED,eAAeA,kBAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon44SmileOutline","props","createElement","width","isNaN","height"],"sources":["../../../tmp/44/smile_outline.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 44 44';\nconst id = 'smile_outline_44';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 44 44\" id=\"smile_outline_44\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h44v44H0z\" /><path d=\"M22 40c-9.941 0-18-8.059-18-18S12.059 4 22 4s18 8.059 18 18-8.059 18-18 18zm0-3c8.284 0 15-6.716 15-15S30.284 7 22 7 7 13.716 7 22s6.716 15 15 15zm-6.582-8.863a1.5 1.5 0 012.194-2.046 6 6 0 008.775.002 1.5 1.5 0 112.191 2.049 9 9 0 01-13.16-.005zm11.645-7.262a2.437 2.437 0 110-4.875 2.437 2.437 0 010 4.875zm-10.125 0a2.437 2.437 0 110-4.875 2.437 2.437 0 010 4.875z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon44SmileOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon44SmileOutline: FC<Icon44SmileOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 44,\n    height: !isNaN(props.height) ? +props.height : 44,\n  }));\n};\n\n(Icon44SmileOutline as any).mountIcon = mountIcon;\n\nexport default Icon44SmileOutline;\n"]},"metadata":{},"sourceType":"module"}