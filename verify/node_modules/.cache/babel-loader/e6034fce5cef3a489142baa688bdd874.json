{"ast":null,"code":"/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [crypto]\n */\nnull; // We import all these so we can export lock()\n\nimport { computeHmac } from \"./hmac.js\";\nimport { keccak256 } from \"./keccak.js\";\nimport { ripemd160 } from \"./ripemd160.js\";\nimport { pbkdf2 } from \"./pbkdf2.js\";\nimport { randomBytes } from \"./random.js\";\nimport { scrypt, scryptSync } from \"./scrypt.js\";\nimport { sha256, sha512 } from \"./sha2.js\";\nexport { computeHmac, randomBytes, keccak256, ripemd160, sha256, sha512, pbkdf2, scrypt, scryptSync };\nexport { SigningKey } from \"./signing-key.js\";\nexport { Signature } from \"./signature.js\";\n\nfunction lock() {\n  computeHmac.lock();\n  keccak256.lock();\n  pbkdf2.lock();\n  randomBytes.lock();\n  ripemd160.lock();\n  scrypt.lock();\n  scryptSync.lock();\n  sha256.lock();\n  sha512.lock();\n  randomBytes.lock();\n}\n\nexport { lock };","map":{"version":3,"mappings":"AAAA;;;;;;AAOA,K,CAEA;;AACA,SAASA,WAAT,QAA4B,WAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,WAA/B;AAEA,SACIR,WADJ,EAGII,WAHJ,EAKIH,SALJ,EAMIC,SANJ,EAOIK,MAPJ,EAOYC,MAPZ,EASIL,MATJ,EAUIE,MAVJ,EAUYC,UAVZ;AAaA,SAASG,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,IAAT,GAAa;AACTX,aAAW,CAACW,IAAZ;AACAV,WAAS,CAACU,IAAV;AACAR,QAAM,CAACQ,IAAP;AACAP,aAAW,CAACO,IAAZ;AACAT,WAAS,CAACS,IAAV;AACAN,QAAM,CAACM,IAAP;AACAL,YAAU,CAACK,IAAX;AACAJ,QAAM,CAACI,IAAP;AACAH,QAAM,CAACG,IAAP;AACAP,aAAW,CAACO,IAAZ;AACH;;AAED,SAASA,IAAT","names":["computeHmac","keccak256","ripemd160","pbkdf2","randomBytes","scrypt","scryptSync","sha256","sha512","SigningKey","Signature","lock"],"sourceRoot":"","sources":["../../src.ts/crypto/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}