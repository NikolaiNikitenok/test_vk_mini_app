{"ast":null,"code":"/**\n * Escapes a string so that it can be put into RegExp as a variable\n *\n * @example\n * new RegExp(`foo-${escapeRegExp('(bar)')}`, 'i')\n */\nexport function escapeRegExp(string) {\n  if (string) {\n    return string.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  return '';\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8C;AACnD,MAAIA,MAAJ,EAAY;AACV,WAAOA,MAAM,CAACC,OAAPD,CAAe,yBAAfA,EAA0C,MAA1CA,CAAP;AACD;;AAED,SAAO,EAAP;AACD","names":["escapeRegExp","string","replace"],"sources":["../../src/regexp.ts"],"sourcesContent":["/**\n * Escapes a string so that it can be put into RegExp as a variable\n *\n * @example\n * new RegExp(`foo-${escapeRegExp('(bar)')}`, 'i')\n */\nexport function escapeRegExp(string: string): string {\n  if (string) {\n    return string.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  return '';\n}\n"]},"metadata":{},"sourceType":"module"}