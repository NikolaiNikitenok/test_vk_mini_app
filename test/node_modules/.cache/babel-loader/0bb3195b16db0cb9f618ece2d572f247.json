{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/k8909/OneDrive/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/test_vk_mini_app/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/k8909/OneDrive/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/test_vk_mini_app/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\k8909\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\test_vk_mini_app\\\\test\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';// import {ethers} from './dist/ethers.min.js'; \nimport{Button,Group,Panel,PanelHeader,PanelHeaderBack,Div,Header,TabsItem,Tabs,Snackbar,Avatar,CellButton}from'@vkontakte/vkui';import{Icon28SettingsOutline,Icon28LogoVk,Icon16Done}from'@vkontakte/icons';// import MetaMask from 'metamask-connect';\nimport Web3 from'web3';// import WalletConnectProvider from '@walletconnect/web3-provider';\nimport'./Persik.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Settings=function Settings(_ref){var id=_ref.id,go=_ref.go;// const [userAccount, setUserAccount] = useState(null);\n// const onConnect = () => {\n// \tlet provider;\n// \tif (window.ethereum) {\n// \t\t//если есть метамаск\n// \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\n// \t\t\tsetUserAccount(account[0]);\n// \t\t\tgetBalance(account[0]);\n// \t\t})\n// \t} else if (window.web3) {\n// \t\tprovider = window.web3.currentProvider;\n// \t} else {\n// \t\talert(\"Установите МетаМаск!\")\n// \t}\n// };\n// const getBalance = (account) => {\n// \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\n// \t\tconsole.log(balance)\t\n// \t})\n// };\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isConnected=_useState2[0],setIsConnected=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),ethBalance=_useState4[0],setEthBalance=_useState4[1];var detectCurrentProvider=function detectCurrentProvider(){var provider;if(window.ethereum){provider=window.ethereum;}else if(window.web3){provider=window.web3.currentProvider;}else{console.log(\"Non-ethereum browser detected. You should install Metamask\");}return provider;};var onConnect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentProvider,web3,userAccount,account,_ethBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;currentProvider=detectCurrentProvider();if(!currentProvider){_context.next=15;break;}_context.next=5;return currentProvider.request({method:'eth_requestAccounts'});case 5:web3=new Web3(currentProvider);_context.next=8;return web3.eth.getAccounts();case 8:userAccount=_context.sent;account=userAccount[0];_context.next=12;return web3.eth.getBalance(account);case 12:_ethBalance=_context.sent;setEthBalance(_ethBalance);setIsConnected(true);case 15:_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 20:case\"end\":return _context.stop();}}},_callee,null,[[0,17]]);}));return function onConnect(){return _ref2.apply(this,arguments);};}();var onDisconnect=function onDisconnect(){setIsConnected(false);};return/*#__PURE__*/ (// <Panel>\n// \t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\n// \t</PanelHeader>\n// \t<Tabs>\n// \t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\n// \t\t{/* <TabsItem>Купить билеты</TabsItem> */}\n// \t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\n// \t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\n// \t</Tabs>\n// \t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\n// \t\t<Div>\t\n// \t\t\t{userAccount ? (\n//                     <>\n//                         <span>Кошелек подключен!!!</span>\n//                     </>\n// \t\t\t\t) : (\n// \t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\n// \t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\n// \t\t\t\t\t)}\n// \t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\n// \t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\n// \t\t</Div>\n// \t</Group>\n// </Panel>\n_jsxs(Panel,{className:\"app\",children:[/*#__PURE__*/_jsx(PanelHeader,{left:/*#__PURE__*/_jsx(Icon28LogoVk,{}),children:\" NFT for Events\"}),/*#__PURE__*/_jsxs(Tabs,{children:[/*#__PURE__*/_jsx(TabsItem,{onClick:go,\"data-to\":\"home\",children:\"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"}),/*#__PURE__*/_jsx(TabsItem,{onClick:go,\"data-to\":\"inventory\",children:\"\\u041C\\u043E\\u0438 \\u041C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\"}),/*#__PURE__*/_jsx(TabsItem,{selected:true,onClick:go,\"data-to\":\"settings\",children:\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"app-wrapper\",children:!isConnected&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{className:\"app-button__login\",stretched:true,size:\"l\",mode:\"secondary\",onClick:onConnect,children:\"\\u041F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C MetaMask\"})})}),isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"app-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app-details\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\" \\u0412\\u044B \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0438\\u0441\\u044C \\u043A MetaMask.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-balance\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \"}),ethBalance]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{className:\"app-buttons__logout\",stretched:true,size:\"l\",mode:\"secondary\",onClick:onDisconnect,children:\"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C\\u0441\\u044F\"})})]})]}));// const [isConnected, setIsConnected] = useState(false);\n// const [ethBalance, setEthBalance] = useState(\"\");\n// const detectCurrentProvider = () => {\n//   let provider;\n//   if (window.ethereum) {\n//     provider = window.ethereum;\n//   } else if (window.web3) {\n//     provider = window.web3.currentProvider;\n//   } else {\n//     console.log(\"Non-ethereum browser detected. You should install Metamask\");\n//   }\n//   return provider;\n// };\n// const onConnect = async() => {\n//   try {\n//     const currentProvider = detectCurrentProvider();\n//     if(currentProvider) {\n//       await currentProvider.request({method: 'eth_requestAccounts'});\n//       const web3 = new Web3(currentProvider);\n//       const userAccount  =await web3.eth.getAccounts();\n//       const account = userAccount[0];\n//       let ethBalance = await web3.eth.getBalance(account);\n//       setEthBalance(ethBalance);\n//       setIsConnected(true);\n//     }\n//   } catch(err) {\n//     console.log(err);\n//   }\n// }\n// const onDisconnect = () => {\n//   setIsConnected(false);\n// }\n// return (\n//   <div className=\"app\">\n//     <div className=\"app-header\">\n//       <h1>React dApp authentication with React, We3.js and Metamask</h1>\n//     </div>\n//     <div className=\"app-wrapper\">\n//       {!isConnected && (\n//         <div>\n//           <button className=\"app-button__login\" onClick={onConnect}>\n//           Login\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//     {isConnected && (\n//       <div className=\"app-wrapper\">\n//         <div className=\"app-details\">\n//           <h2> You are connected to metamask.</h2>\n//           <div className=\"app-balance\">\n//             <span>Balance: </span>\n//             {ethBalance}\n//           </div>\n//         </div>\n//         <div>\n//           <button className=\"app-buttons__logout\" onClick={onDisconnect}>\n//           Disconnect\n//           </button>\n//         </div>\n//       </div>\n//     )}\n//   </div>\n// );\n};// Inventory.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\nexport default Settings;","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/src/panels/Settings.js"],"names":["React","useState","useEffect","Button","Group","Panel","PanelHeader","PanelHeaderBack","Div","Header","TabsItem","Tabs","Snackbar","Avatar","CellButton","Icon28SettingsOutline","Icon28LogoVk","Icon16Done","Web3","Settings","id","go","isConnected","setIsConnected","ethBalance","setEthBalance","detectCurrentProvider","provider","window","ethereum","web3","currentProvider","console","log","onConnect","request","method","eth","getAccounts","userAccount","account","getBalance","onDisconnect"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from './dist/ethers.min.js'; \r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk, Icon16Done} from '@vkontakte/icons';\r\n// import MetaMask from 'metamask-connect';\r\nimport Web3 from 'web3';\r\n// import WalletConnectProvider from '@walletconnect/web3-provider';\r\n\r\nimport './Persik.css';\r\n\r\nconst Settings = ({id, go}) => {\r\n\t// const [userAccount, setUserAccount] = useState(null);\r\n\r\n\t// const onConnect = () => {\r\n\t// \tlet provider;\r\n\t// \tif (window.ethereum) {\r\n\t// \t\t//если есть метамаск\r\n\t// \t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t// \t\t\tsetUserAccount(account[0]);\r\n\t// \t\t\tgetBalance(account[0]);\r\n\t// \t\t})\r\n\t// \t} else if (window.web3) {\r\n\t// \t\tprovider = window.web3.currentProvider;\r\n\t// \t} else {\r\n\t// \t\talert(\"Установите МетаМаск!\")\r\n\t// \t}\r\n\t// };\r\n\r\n\t// const getBalance = (account) => {\r\n\t// \twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t// \t\tconsole.log(balance)\t\r\n\t// \t})\r\n\t// };\r\n    \r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [ethBalance, setEthBalance] = useState(\"\");\r\n  \r\n  const detectCurrentProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n    }\r\n    return provider;\r\n  };\r\n  \r\n  const onConnect = async() => {\r\n    try {\r\n      const currentProvider = detectCurrentProvider();\r\n      if(currentProvider) {\r\n        await currentProvider.request({method: 'eth_requestAccounts'});\r\n        const web3 = new Web3(currentProvider);\r\n        const userAccount  =await web3.eth.getAccounts();\r\n        const account = userAccount[0];\r\n        let ethBalance = await web3.eth.getBalance(account);\r\n        setEthBalance(ethBalance);\r\n        setIsConnected(true);\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  const onDisconnect = () => {\r\n    setIsConnected(false);\r\n  }\r\n  \r\n\r\n\treturn(\r\n\t\t// <Panel>\r\n\t\t// \t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t// \t</PanelHeader>\r\n\t\t// \t<Tabs>\r\n\t\t// \t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t// \t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t// \t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n\t\t// \t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t// \t</Tabs>\r\n\t\t// \t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\r\n\t\t// \t\t<Div>\t\r\n\t\t// \t\t\t{userAccount ? (\r\n    //                     <>\r\n    //                         <span>Кошелек подключен!!!</span>\r\n    //                     </>\r\n\t\t// \t\t\t\t) : (\r\n\t\t// \t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t// \t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t// \t\t\t\t\t)}\r\n\t\t// \t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t// \t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t// \t\t</Div>\r\n\t\t// \t</Group>\r\n\t\t// </Panel>\r\n\r\n    <Panel className=\"app\">\r\n      <PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n      </PanelHeader>\r\n      <Tabs>\r\n        <TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n        {/* <TabsItem>Купить билеты</TabsItem> */}\r\n        <TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n        <TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n      </Tabs>\r\n      <div className=\"app-wrapper\">\r\n        {!isConnected && (\r\n          <div>\r\n            <Button className=\"app-button__login\" stretched size=\"l\" mode=\"secondary\" onClick={onConnect}>\r\n            Подключить MetaMask\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {isConnected && (\r\n        <div className=\"app-wrapper\">\r\n          <div className=\"app-details\">\r\n            <h2> Вы подключились к MetaMask.</h2>\r\n            <div className=\"app-balance\">\r\n              <span>Баланс: </span>\r\n              {ethBalance}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Button className=\"app-buttons__logout\" stretched size=\"l\" mode=\"secondary\" onClick={onDisconnect}>\r\n            Отключиться\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Panel>\r\n\t)\r\n\r\n\t// const [isConnected, setIsConnected] = useState(false);\r\n  // const [ethBalance, setEthBalance] = useState(\"\");\r\n  \r\n  // const detectCurrentProvider = () => {\r\n  //   let provider;\r\n  //   if (window.ethereum) {\r\n  //     provider = window.ethereum;\r\n  //   } else if (window.web3) {\r\n  //     provider = window.web3.currentProvider;\r\n  //   } else {\r\n  //     console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n  //   }\r\n  //   return provider;\r\n  // };\r\n  \r\n  // const onConnect = async() => {\r\n  //   try {\r\n  //     const currentProvider = detectCurrentProvider();\r\n  //     if(currentProvider) {\r\n  //       await currentProvider.request({method: 'eth_requestAccounts'});\r\n  //       const web3 = new Web3(currentProvider);\r\n  //       const userAccount  =await web3.eth.getAccounts();\r\n  //       const account = userAccount[0];\r\n  //       let ethBalance = await web3.eth.getBalance(account);\r\n  //       setEthBalance(ethBalance);\r\n  //       setIsConnected(true);\r\n  //     }\r\n  //   } catch(err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }\r\n  \r\n  // const onDisconnect = () => {\r\n  //   setIsConnected(false);\r\n  // }\r\n  \r\n  \r\n  \r\n  // return (\r\n  //   <div className=\"app\">\r\n  //     <div className=\"app-header\">\r\n  //       <h1>React dApp authentication with React, We3.js and Metamask</h1>\r\n  //     </div>\r\n  //     <div className=\"app-wrapper\">\r\n  //       {!isConnected && (\r\n  //         <div>\r\n  //           <button className=\"app-button__login\" onClick={onConnect}>\r\n  //           Login\r\n  //           </button>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //     {isConnected && (\r\n  //       <div className=\"app-wrapper\">\r\n  //         <div className=\"app-details\">\r\n  //           <h2> You are connected to metamask.</h2>\r\n  //           <div className=\"app-balance\">\r\n  //             <span>Balance: </span>\r\n  //             {ethBalance}\r\n  //           </div>\r\n  //         </div>\r\n  //         <div>\r\n  //           <button className=\"app-buttons__logout\" onClick={onDisconnect}>\r\n  //           Disconnect\r\n  //           </button>\r\n  //         </div>\r\n  //       </div>\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}