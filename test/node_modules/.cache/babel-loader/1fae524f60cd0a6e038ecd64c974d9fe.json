{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 12 14';\nvar id = 'cake_12';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 14\" id=\"cake_12\"><path d=\"M10 9.38V11a1 1 0 01-1 1H3a1 1 0 01-1-1V9.38c.346.087.688.12 1 .12.568 0 1.072-.102 1.5-.296.428.194.932.296 1.5.296s1.072-.102 1.5-.296c.428.194.932.296 1.5.296.312 0 .654-.033 1-.12zM1 6a1 1 0 011-1h8a1 1 0 011 1c0 1.5-1 2-2 2-1.5 0-1.5-1-1.5-1s0 1-1.5 1-1.5-1-1.5-1 0 1-1.5 1c-1 0-2-.5-2-2zm4.907-4.95a.107.107 0 01.186 0C6.56 1.903 7 2.274 7 3a1 1 0 11-2 0c0-.726.44-1.097.907-1.95z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon12Cake = function Icon12Cake(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 12,\n    height: !isNaN(props.height) ? +props.height : 14\n  }));\n};\n\nIcon12Cake.mountIcon = mountIcon;\nexport default Icon12Cake;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,SAAX;AACA,IAAMC,OAAO,GAAG,sgBAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,UAA+B,GAAG,SAAlCA,UAAkC,CAACC,KAAD,EAAW;AACjDR,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,UAAD,CAAoBD,SAAnBC,GAA+BD,SAA/BC;AAED,eAAeA,UAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon12Cake","props","createElement","width","isNaN","height"],"sources":["../../../tmp/12/cake.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 12 14';\nconst id = 'cake_12';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 14\" id=\"cake_12\"><path d=\"M10 9.38V11a1 1 0 01-1 1H3a1 1 0 01-1-1V9.38c.346.087.688.12 1 .12.568 0 1.072-.102 1.5-.296.428.194.932.296 1.5.296s1.072-.102 1.5-.296c.428.194.932.296 1.5.296.312 0 .654-.033 1-.12zM1 6a1 1 0 011-1h8a1 1 0 011 1c0 1.5-1 2-2 2-1.5 0-1.5-1-1.5-1s0 1-1.5 1-1.5-1-1.5-1 0 1-1.5 1c-1 0-2-.5-2-2zm4.907-4.95a.107.107 0 01.186 0C6.56 1.903 7 2.274 7 3a1 1 0 11-2 0c0-.726.44-1.097.907-1.95z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon12CakeProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon12Cake: FC<Icon12CakeProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 12,\n    height: !isNaN(props.height) ? +props.height : 14,\n  }));\n};\n\n(Icon12Cake as any).mountIcon = mountIcon;\n\nexport default Icon12Cake;\n"]},"metadata":{},"sourceType":"module"}