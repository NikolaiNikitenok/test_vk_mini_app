{"ast":null,"code":"import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte irentifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\n\nexport function id(value) {\n  return keccak256(toUtf8Bytes(value));\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA;;;;;;;;;;;;AAWA,OAAM,SAAUC,EAAV,CAAaC,KAAb,EAA0B;AAC5B,SAAOH,SAAS,CAACC,WAAW,CAACE,KAAD,CAAZ,CAAhB;AACH","names":["keccak256","toUtf8Bytes","id","value"],"sourceRoot":"","sources":["../../src.ts/hash/id.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}