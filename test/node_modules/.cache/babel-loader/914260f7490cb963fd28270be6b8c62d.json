{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"sizeY\", \"platform\"],\n    _excluded2 = [\"size\", \"mode\", \"appearance\", \"stretched\", \"align\", \"children\", \"before\", \"after\", \"getRootRef\", \"sizeY\", \"Component\", \"loading\", \"onClick\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Headline from \"../Typography/Headline/Headline\";\n\nvar ButtonTypography = function ButtonTypography(props) {\n  var size = props.size,\n      sizeY = props.sizeY,\n      platform = props.platform,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return createScopedElement(Text, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n\n      if (platform === ANDROID) {\n        return createScopedElement(Headline, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n\n      return createScopedElement(Title, _extends({\n        level: \"3\",\n        weight: \"2\"\n      }, restProps));\n\n    case \"m\":\n      if (isCompact) {\n        return createScopedElement(Subhead, _extends({\n          weight: platform === VKCOM ? \"3\" : \"2\"\n        }, restProps));\n      }\n\n      return createScopedElement(Text, _extends({\n        weight: \"medium\"\n      }, restProps));\n\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return createScopedElement(Subhead, _extends({\n          weight: \"2\"\n        }, restProps));\n      }\n\n      if (platform === VKCOM) {\n        return createScopedElement(Caption, restProps);\n      }\n\n      if (isCompact) {\n        return createScopedElement(Caption, _extends({\n          weight: \"2\"\n        }, restProps));\n      }\n\n      return createScopedElement(Subhead, _extends({\n        weight: \"2\"\n      }, restProps));\n  }\n};\n\nfunction resolveButtonAppearance(appearance, mode) {\n  var resolvedAppearance = appearance;\n  var resolvedMode = mode;\n\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n\n  return {\n    resolvedAppearance: resolvedAppearance,\n    resolvedMode: resolvedMode\n  };\n}\n\nvar Button = function Button(props) {\n  var _classNames;\n\n  var platform = usePlatform();\n\n  var size = props.size,\n      mode = props.mode,\n      appearance = props.appearance,\n      stretched = props.stretched,\n      align = props.align,\n      children = props.children,\n      before = props.before,\n      after = props.after,\n      getRootRef = props.getRootRef,\n      sizeY = props.sizeY,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? \"button\" : _props$Component,\n      loading = props.loading,\n      onClick = props.onClick,\n      restProps = _objectWithoutProperties(props, _excluded2);\n\n  var hasIcons = Boolean(before || after);\n\n  var _resolveButtonAppeara = resolveButtonAppearance(appearance, mode),\n      resolvedMode = _resolveButtonAppeara.resolvedMode,\n      resolvedAppearance = _resolveButtonAppeara.resolvedAppearance;\n\n  var hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    Component: restProps.href ? \"a\" : Component,\n    onClick: loading ? undefined : onClick,\n    focusVisibleMode: \"outside\",\n    vkuiClass: classNames(\"Button\", \"Button--sz-\".concat(size), \"Button--lvl-\".concat(resolvedMode), \"Button--clr-\".concat(resolvedAppearance), \"Button--aln-\".concat(align), \"Button--sizeY-\".concat(sizeY), (_classNames = {}, _defineProperty(_classNames, \"Button--stretched\", stretched), _defineProperty(_classNames, \"Button--with-icon\", hasIcons), _defineProperty(_classNames, \"Button--singleIcon\", Boolean(!children && !after && before || !children && after && !before)), _classNames)),\n    getRootRef: getRootRef,\n    hoverMode: hasNewTokens ? \"Button--hover\" : \"background\",\n    activeMode: hasNewTokens ? \"Button--active\" : \"opacity\"\n  }), loading && createScopedElement(Spinner, {\n    size: \"small\",\n    vkuiClass: \"Button__spinner\"\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"Button__in\"\n  }, before && createScopedElement(\"span\", {\n    vkuiClass: \"Button__before\"\n  }, before), children && createScopedElement(ButtonTypography, {\n    size: size,\n    sizeY: sizeY,\n    platform: platform,\n    vkuiClass: \"Button__content\",\n    Component: \"span\"\n  }, children), after && createScopedElement(\"span\", {\n    vkuiClass: \"Button__after\"\n  }, after)));\n};\n\nButton.defaultProps = {\n  mode: \"primary\",\n  align: \"center\",\n  size: \"s\",\n  stretched: false,\n  stopPropagation: true\n}; // eslint-disable-next-line import/no-default-export\n\nexport default withAdaptivity(Button, {\n  sizeY: true\n});","map":{"version":3,"mappings":"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","names":["React","classNames","ConfigProviderContext","Tappable","Title","Text","Subhead","Caption","usePlatform","SizeType","withAdaptivity","IOS","VKCOM","ANDROID","Spinner","Headline","ButtonTypography","props","size","sizeY","platform","restProps","isCompact","COMPACT","createScopedElement","weight","level","resolveButtonAppearance","appearance","mode","resolvedAppearance","resolvedMode","undefined","Button","stretched","align","children","before","after","getRootRef","Component","loading","onClick","hasIcons","Boolean","hasNewTokens","useContext","href","focusVisibleMode","vkuiClass","hoverMode","activeMode","defaultProps","stopPropagation"],"sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { HasAlign, HasComponent } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  AdaptivityProps,\n  SizeType,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { PlatformType, IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Spinner from \"../Spinner/Spinner\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport \"./Button.css\";\n\nexport interface VKUIButtonProps extends HasAlign {\n  /**\n   Значения `commerce`, `destructive`, `overlay_...` будут упразднены в 5.0.0\n   */\n  mode?:\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"outline\"\n    | \"commerce\"\n    | \"destructive\"\n    | \"overlay_primary\"\n    | \"overlay_secondary\"\n    | \"overlay_outline\";\n  appearance?: \"accent\" | \"positive\" | \"negative\" | \"neutral\" | \"overlay\";\n  size?: \"s\" | \"m\" | \"l\";\n  stretched?: boolean;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport interface ButtonProps\n  extends Omit<TappableProps, \"size\">,\n    VKUIButtonProps {}\n\ninterface ButtonTypographyProps extends HasComponent {\n  size: ButtonProps[\"size\"];\n  platform: PlatformType | undefined;\n  sizeY: AdaptivityProps[\"sizeY\"];\n  children?: ButtonProps[\"children\"];\n}\n\nconst ButtonTypography: React.FC<ButtonTypographyProps> = (\n  props: ButtonTypographyProps\n) => {\n  const { size, sizeY, platform, ...restProps } = props;\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return <Text weight=\"medium\" {...restProps} />;\n      }\n      if (platform === ANDROID) {\n        return <Headline weight=\"medium\" {...restProps} />;\n      }\n      return <Title level=\"3\" weight=\"2\" {...restProps} />;\n    case \"m\":\n      if (isCompact) {\n        return (\n          <Subhead weight={platform === VKCOM ? \"3\" : \"2\"} {...restProps} />\n        );\n      }\n\n      return <Text weight=\"medium\" {...restProps} />;\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"2\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption weight=\"2\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"2\" {...restProps} />;\n  }\n};\n\ninterface ResolvedButtonAppearance {\n  resolvedAppearance: ButtonProps[\"appearance\"];\n  resolvedMode: ButtonProps[\"mode\"];\n}\n\nfunction resolveButtonAppearance(\n  appearance: ButtonProps[\"appearance\"],\n  mode: ButtonProps[\"mode\"]\n): ResolvedButtonAppearance {\n  let resolvedAppearance: ButtonProps[\"appearance\"] = appearance;\n  let resolvedMode: ButtonProps[\"mode\"] = mode;\n\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n\n  return {\n    resolvedAppearance,\n    resolvedMode,\n  };\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    mode,\n    appearance,\n    stretched,\n    align,\n    children,\n    before,\n    after,\n    getRootRef,\n    sizeY,\n    Component = \"button\",\n    loading,\n    onClick,\n    ...restProps\n  } = props;\n  const hasIcons = Boolean(before || after);\n  const { resolvedMode, resolvedAppearance } = resolveButtonAppearance(\n    appearance,\n    mode\n  );\n  const hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? \"a\" : Component}\n      onClick={loading ? undefined : onClick}\n      focusVisibleMode=\"outside\"\n      vkuiClass={classNames(\n        \"Button\",\n        `Button--sz-${size}`,\n        `Button--lvl-${resolvedMode}`,\n        `Button--clr-${resolvedAppearance}`,\n        `Button--aln-${align}`,\n        `Button--sizeY-${sizeY}`,\n        {\n          [\"Button--stretched\"]: stretched,\n          [\"Button--with-icon\"]: hasIcons,\n          [\"Button--singleIcon\"]: Boolean(\n            (!children && !after && before) || (!children && after && !before)\n          ),\n        }\n      )}\n      getRootRef={getRootRef}\n      hoverMode={hasNewTokens ? \"Button--hover\" : \"background\"}\n      activeMode={hasNewTokens ? \"Button--active\" : \"opacity\"}\n    >\n      {loading && <Spinner size=\"small\" vkuiClass=\"Button__spinner\" />}\n      <span vkuiClass=\"Button__in\">\n        {before && <span vkuiClass=\"Button__before\">{before}</span>}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n            Component=\"span\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && <span vkuiClass=\"Button__after\">{after}</span>}\n      </span>\n    </Tappable>\n  );\n};\n\nButton.defaultProps = {\n  mode: \"primary\",\n  align: \"center\",\n  size: \"s\",\n  stretched: false,\n  stopPropagation: true,\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}