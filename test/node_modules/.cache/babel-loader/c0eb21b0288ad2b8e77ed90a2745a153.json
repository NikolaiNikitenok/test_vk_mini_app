{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'smile_outline_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"smile_outline_20\"><path d=\"M10 1.5a8.5 8.5 0 110 17 8.5 8.5 0 010-17zM10 3a7 7 0 100 14 7 7 0 000-14zm3.067 9.056c.3.286.312.76.027 1.06a4.06 4.06 0 01-.855.654A4.356 4.356 0 0110 14.4a4.355 4.355 0 01-2.239-.63 4.06 4.06 0 01-.854-.653.75.75 0 011.004-1.109l.197.18c.098.083.239.186.417.292.446.263.942.42 1.475.42.533 0 1.029-.157 1.475-.42.178-.106.32-.21.417-.292l.115-.105a.75.75 0 011.06-.027zM7.625 7.25a1.125 1.125 0 110 2.25 1.125 1.125 0 010-2.25zm4.75 0a1.125 1.125 0 110 2.25 1.125 1.125 0 010-2.25z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20SmileOutline = function Icon20SmileOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20SmileOutline.mountIcon = mountIcon;\nexport default Icon20SmileOutline;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,kBAAX;AACA,IAAMC,OAAO,GAAG,inBAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,kBAA+C,GAAG,SAAlDA,kBAAkD,CAACC,KAAD,EAAW;AACjER,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,kBAAD,CAA4BD,SAA3BC,GAAuCD,SAAvCC;AAED,eAAeA,kBAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon20SmileOutline","props","createElement","width","isNaN","height"],"sources":["../../../tmp/20/smile_outline.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 20 20';\nconst id = 'smile_outline_20';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"smile_outline_20\"><path d=\"M10 1.5a8.5 8.5 0 110 17 8.5 8.5 0 010-17zM10 3a7 7 0 100 14 7 7 0 000-14zm3.067 9.056c.3.286.312.76.027 1.06a4.06 4.06 0 01-.855.654A4.356 4.356 0 0110 14.4a4.355 4.355 0 01-2.239-.63 4.06 4.06 0 01-.854-.653.75.75 0 011.004-1.109l.197.18c.098.083.239.186.417.292.446.263.942.42 1.475.42.533 0 1.029-.157 1.475-.42.178-.106.32-.21.417-.292l.115-.105a.75.75 0 011.06-.027zM7.625 7.25a1.125 1.125 0 110 2.25 1.125 1.125 0 010-2.25zm4.75 0a1.125 1.125 0 110 2.25 1.125 1.125 0 010-2.25z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon20SmileOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon20SmileOutline: FC<Icon20SmileOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20,\n  }));\n};\n\n(Icon20SmileOutline as any).mountIcon = mountIcon;\n\nexport default Icon20SmileOutline;\n"]},"metadata":{},"sourceType":"module"}