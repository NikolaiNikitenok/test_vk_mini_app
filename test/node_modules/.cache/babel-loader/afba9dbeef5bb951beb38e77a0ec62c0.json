{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"id\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext from \"./ModalRootContext\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { withModalManager } from \"./useModalManager\";\nvar warn = warnOnce(\"ModalRoot\");\n\nvar ModalRootDesktopComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalRootDesktopComponent, _React$Component);\n\n  var _super = _createSuper(ModalRootDesktopComponent);\n\n  function ModalRootDesktopComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ModalRootDesktopComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalRootContext\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"restoreFocusTo\", undefined);\n\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n    _this.modalRootContext = {\n      updateModalHeight: function updateModalHeight() {\n        return undefined;\n      },\n      registerModal: function registerModal(_ref) {\n        var id = _ref.id,\n            data = _objectWithoutProperties(_ref, _excluded);\n\n        return Object.assign(_this.getModalState(id), data);\n      },\n      onClose: function onClose() {\n        return _this.props.closeActiveModal();\n      },\n      isInsideModal: true\n    };\n    return _this;\n  }\n\n  _createClass(ModalRootDesktopComponent, [{\n    key: \"timeout\",\n    get: function get() {\n      return this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400;\n    }\n  }, {\n    key: \"modals\",\n    get: function get() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"getModalState\",\n    value: function getModalState(id) {\n      if (id === null) {\n        return undefined;\n      }\n\n      return this.props.getModalState(id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this; // transition phase 2: animate exiting modal\n\n\n      if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n        this.closeModal(this.props.exitingModal);\n      } // transition phase 3: animate entering modal\n\n\n      if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n        var enteringModal = this.props.enteringModal;\n        var enteringState = this.getModalState(enteringModal);\n        requestAnimationFrame(function () {\n          if (_this2.props.enteringModal === enteringModal) {\n            _this2.waitTransitionFinish(enteringState, function () {\n              return _this2.props.onEnter(enteringModal);\n            });\n\n            _this2.animateModalOpacity(enteringState, true);\n          }\n        });\n      } // focus restoration\n\n\n      if (this.props.activeModal && !prevProps.activeModal) {\n        var _this$props$document$, _this$props$document;\n\n        this.restoreFocusTo = (_this$props$document$ = (_this$props$document = this.props.document) === null || _this$props$document === void 0 ? void 0 : _this$props$document.activeElement) !== null && _this$props$document$ !== void 0 ? _this$props$document$ : undefined;\n      }\n\n      if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n        this.restoreFocusTo.focus();\n        this.restoreFocusTo = undefined;\n      }\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(id) {\n      var _this3 = this;\n\n      var prevModalState = this.getModalState(id);\n\n      if (!prevModalState) {\n        return;\n      }\n\n      this.waitTransitionFinish(prevModalState, function () {\n        return _this3.props.onExit(id);\n      });\n      this.animateModalOpacity(prevModalState, false);\n\n      if (!this.props.activeModal) {\n        this.setMaskOpacity(prevModalState, 0);\n      }\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var _modalState$innerElem2;\n\n        var onceHandler = function onceHandler() {\n          var _modalState$innerElem;\n\n          modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem = modalState.innerElement) === null || _modalState$innerElem === void 0 ? void 0 : _modalState$innerElem.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n\n        modalState === null || modalState === void 0 ? void 0 : (_modalState$innerElem2 = modalState.innerElement) === null || _modalState$innerElem2 === void 0 ? void 0 : _modalState$innerElem2.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.timeout);\n      }\n    }\n    /* Анимирует сдивг модалки */\n\n  }, {\n    key: \"animateModalOpacity\",\n    value: function animateModalOpacity(modalState, display) {\n      if (modalState !== null && modalState !== void 0 && modalState.innerElement) {\n        modalState.innerElement.style.transitionDelay = display && this.props.delayEnter ? \"\".concat(this.timeout, \"ms\") : \"\";\n        modalState.innerElement.style.opacity = display ? \"1\" : \"0\";\n      }\n    }\n    /* Устанавливает прозрачность для полупрозрачной подложки */\n\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this$props$history,\n          _this4 = this;\n\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (forceOpacity === null && ((_this$props$history = this.props.history) === null || _this$props$history === void 0 ? void 0 : _this$props$history[0]) !== modalState.id) {\n        return;\n      }\n\n      if (this.maskAnimationFrame) {\n        cancelAnimationFrame(this.maskAnimationFrame);\n      }\n\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this4.maskElementRef.current) {\n          var _modalState$translate = modalState.translateY,\n              translateY = _modalState$translate === void 0 ? 0 : _modalState$translate,\n              _modalState$translate2 = modalState.translateYCurrent,\n              translateYCurrent = _modalState$translate2 === void 0 ? 0 : _modalState$translate2;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this4.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$configPro,\n          _this5 = this;\n\n      var _this$props = this.props,\n          exitingModal = _this$props.exitingModal,\n          activeModal = _this$props.activeModal,\n          enteringModal = _this$props.enteringModal;\n\n      if (!activeModal && !exitingModal) {\n        return null;\n      }\n\n      return createScopedElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, createScopedElement(\"div\", {\n        vkuiClass: classNames(getClassName(\"ModalRoot\", this.props.platform), {\n          \"ModalRoot--vkapps\": ((_this$props$configPro = this.props.configProvider) === null || _this$props$configPro === void 0 ? void 0 : _this$props$configPro.webviewType) === WebviewType.VKAPPS\n        }, \"ModalRoot--desktop\")\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__mask\",\n        ref: this.maskElementRef,\n        onClick: this.props.closeActiveModal\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__viewport\"\n      }, this.modals.map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n\n        if (modalId !== activeModal && modalId !== exitingModal) {\n          return null;\n        }\n\n        var key = \"modal-\".concat(modalId);\n        return createScopedElement(FocusTrap, {\n          restoreFocus: false,\n          onClose: _this5.props.closeActiveModal,\n          timeout: _this5.timeout,\n          key: key,\n          vkuiClass: classNames(\"ModalRoot__modal\", {\n            \"ModalRoot__modal--active\": !exitingModal && !enteringModal && modalId === activeModal,\n            \"ModalRoot__modal--prev\": modalId === exitingModal,\n            \"ModalRoot__modal--next\": Boolean(exitingModal) && modalId === activeModal\n          })\n        }, Modal);\n      }))));\n    }\n  }]);\n\n  return ModalRootDesktopComponent;\n}(React.Component);\n\nexport var ModalRootDesktop = withContext(withPlatform(withDOM(withModalManager()(ModalRootDesktopComponent))), ConfigProviderContext, \"configProvider\");","map":{"version":3,"mappings":"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","names":["React","classNames","transitionEvent","withPlatform","withContext","ModalRootContext","ConfigProviderContext","WebviewType","ANDROID","VKCOM","getClassName","withDOM","getNavId","warnOnce","FocusTrap","withModalManager","warn","ModalRootDesktopComponent","props","_classCallCheck","_this","_defineProperty","undefined","maskElementRef","createRef","modalRootContext","updateModalHeight","registerModal","id","data","Object","assign","getModalState","onClose","closeActiveModal","isInsideModal","platform","Children","toArray","children","prevProps","exitingModal","closeModal","enteringModal","enteringState","requestAnimationFrame","_this2","waitTransitionFinish","onEnter","animateModalOpacity","activeModal","restoreFocusTo","document","_this$props$document","activeElement","focus","prevModalState","_this3","onExit","setMaskOpacity","modalState","eventHandler","supported","onceHandler","innerElement","removeEventListener","name","addEventListener","setTimeout","timeout","display","style","transitionDelay","delayEnter","opacity","forceOpacity","history","maskAnimationFrame","cancelAnimationFrame","_this4","current","translateY","translateYCurrent","Math","max","min","toString","createScopedElement","Provider","value","vkuiClass","configProvider","webviewType","VKAPPS","ref","onClick","modals","map","Modal","modalId","key","restoreFocus","_this5","Boolean","Component","ModalRootDesktop"],"sources":["../../../src/components/ModalRoot/ModalRootDesktop.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext, {\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalsStateEntry } from \"./types\";\nimport { ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { DOMProps, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalTransitionProps, withModalManager } from \"./useModalManager\";\nimport \"./ModalRoot.css\";\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n\n  /**\n   * Будет вызвано при закрытии активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n}\n\nclass ModalRootDesktopComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: () => undefined,\n      registerModal: ({ id, ...data }) =>\n        Object.assign(this.getModalState(id), data),\n      onClose: () => this.props.closeActiveModal(),\n      isInsideModal: true,\n    };\n  }\n\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private restoreFocusTo: HTMLElement | undefined = undefined;\n\n  private get timeout() {\n    return this.props.platform === ANDROID || this.props.platform === VKCOM\n      ? 320\n      : 400;\n  }\n\n  private get modals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  getModalState(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (\n      this.props.exitingModal &&\n      this.props.exitingModal !== prevProps.exitingModal\n    ) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (\n      this.props.enteringModal &&\n      this.props.enteringModal !== prevProps.enteringModal\n    ) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      requestAnimationFrame(() => {\n        if (this.props.enteringModal === enteringModal) {\n          this.waitTransitionFinish(enteringState, () =>\n            this.props.onEnter(enteringModal)\n          );\n          this.animateModalOpacity(enteringState, true);\n        }\n      });\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = (this.props.document?.activeElement ??\n        undefined) as HTMLElement | undefined;\n    }\n    if (\n      !this.props.activeModal &&\n      !this.props.exitingModal &&\n      this.restoreFocusTo\n    ) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = undefined;\n    }\n  }\n\n  closeModal(id: string) {\n    const prevModalState = this.getModalState(id);\n    if (!prevModalState) {\n      return;\n    }\n\n    this.waitTransitionFinish(prevModalState, () => this.props.onExit(id));\n    this.animateModalOpacity(prevModalState, false);\n    if (!this.props.activeModal) {\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  waitTransitionFinish(\n    modalState: ModalsStateEntry | undefined,\n    eventHandler: () => void\n  ) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(\n          transitionEvent.name as string,\n          onceHandler\n        );\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(\n        transitionEvent.name as string,\n        onceHandler\n      );\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /* Анимирует сдивг модалки */\n  animateModalOpacity(\n    modalState: ModalsStateEntry | undefined,\n    display: boolean\n  ) {\n    if (modalState?.innerElement) {\n      modalState.innerElement.style.transitionDelay =\n        display && this.props.delayEnter ? `${this.timeout}ms` : \"\";\n      modalState.innerElement.style.opacity = display ? \"1\" : \"0\";\n    }\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(\n    modalState: ModalsStateEntry,\n    forceOpacity: number | null = null\n  ) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(\n          0,\n          Math.min(100, opacity)\n        ).toString();\n      }\n    });\n  }\n\n  render() {\n    const { exitingModal, activeModal, enteringModal } = this.props;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <ModalRootContext.Provider value={this.modalRootContext}>\n        <div\n          vkuiClass={classNames(\n            getClassName(\"ModalRoot\", this.props.platform),\n            {\n              \"ModalRoot--vkapps\":\n                this.props.configProvider?.webviewType === WebviewType.VKAPPS,\n            },\n            \"ModalRoot--desktop\"\n          )}\n        >\n          <div\n            vkuiClass=\"ModalRoot__mask\"\n            ref={this.maskElementRef}\n            onClick={this.props.closeActiveModal}\n          />\n          <div vkuiClass=\"ModalRoot__viewport\">\n            {this.modals.map((Modal: React.ReactElement) => {\n              const modalId = getNavId(Modal.props, warn);\n              if (modalId !== activeModal && modalId !== exitingModal) {\n                return null;\n              }\n\n              const key = `modal-${modalId}`;\n\n              return (\n                <FocusTrap\n                  restoreFocus={false}\n                  onClose={this.props.closeActiveModal}\n                  timeout={this.timeout}\n                  key={key}\n                  vkuiClass={classNames(\"ModalRoot__modal\", {\n                    \"ModalRoot__modal--active\":\n                      !exitingModal &&\n                      !enteringModal &&\n                      modalId === activeModal,\n                    \"ModalRoot__modal--prev\": modalId === exitingModal,\n                    \"ModalRoot__modal--next\":\n                      Boolean(exitingModal) && modalId === activeModal,\n                  })}\n                >\n                  {Modal}\n                </FocusTrap>\n              );\n            })}\n          </div>\n        </div>\n      </ModalRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootDesktop = withContext(\n  withPlatform(\n    withDOM<ModalRootProps>(withModalManager()(ModalRootDesktopComponent))\n  ),\n  ConfigProviderContext,\n  \"configProvider\"\n);\n"]},"metadata":{},"sourceType":"module"}