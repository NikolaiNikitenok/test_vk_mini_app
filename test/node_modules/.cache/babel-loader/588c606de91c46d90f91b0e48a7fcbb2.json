{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 36 36';\nvar id = 'phone_36';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" id=\"phone_36\"><path d=\"M21.168 22.889c2.03-2.032 5.229-2.22 7.355-.431l1.536 1.294c1.754 1.476 1.932 4.136.396 5.94a4.978 4.978 0 01-3.293 1.7c-4.91.66-10.06-1.705-15.454-7.1-5.394-5.394-7.761-10.546-7.1-15.454.035-.384.114-.763.238-1.128a4.978 4.978 0 011.462-2.165c1.806-1.535 4.464-1.358 5.94.397l1.292 1.536c1.79 2.124 1.605 5.323-.426 7.355l-1.103 1.1c-.294.295-.39.734-.246 1.124.4 1.097 1.424 2.467 3.068 4.11 1.645 1.646 3.015 2.668 4.11 3.07.39.144.83.047 1.123-.247z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon36Phone = function Icon36Phone(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 36,\n    height: !isNaN(props.height) ? +props.height : 36\n  }));\n};\n\nIcon36Phone.mountIcon = mountIcon;\nexport default Icon36Phone;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkE,OAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,yBAA1B,QAA2D,WAA3D;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAG,WAAhB;AACA,IAAMC,EAAE,GAAG,UAAX;AACA,IAAMC,OAAO,GAAG,0kBAAhB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AACA,SAASC,SAAT,GAAqB;AACnB,MAAI,CAACD,SAAL,EAAgB;AACdN,mBAAe,CAAC,IAAIF,aAAJ,CAAkB;AAChCM,QAAE,EAAEA,EAD4B;AAEhCD,aAAO,EAAEA,OAFuB;AAGhCE,aAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfL;AAMAM,aAAS,GAAG,IAAZA;AACD;AACF;;AASD,IAAME,WAAiC,GAAG,SAApCA,WAAoC,CAACC,KAAD,EAAW;AACnDR,2BAAyB,CAAC,YAAM;AAC9BM,aAAS;AADc,KAEtB,EAFsB,CAAzBN;AAIA,sBAAOJ,KAAK,CAACa,aAANb,CAAoBK,OAApBL,EAA6BE,MAAM,CAAC,EAAD,EAAKU,KAAL,EAAY;AACpDN,WAAO,EAAEA,OAD2C;AAEpDC,MAAE,EAAEA,EAFgD;AAGpDO,SAAK,EAAE,CAACC,KAAK,CAACH,KAAK,CAACE,KAAP,CAAN,GAAsB,CAACF,KAAK,CAACE,KAA7B,GAAqC,EAHQ;AAIpDE,UAAM,EAAE,CAACD,KAAK,CAACH,KAAK,CAACI,MAAP,CAAN,GAAuB,CAACJ,KAAK,CAACI,MAA9B,GAAuC;AAJK,GAAZ,CAAnChB,CAAP;AALF;;AAaCW,WAAD,CAAqBD,SAApBC,GAAgCD,SAAhCC;AAED,eAAeA,WAAf","names":["React","BrowserSymbol","assign","addSpriteSymbol","useIsomorphicLayoutEffect","SvgIcon","viewBox","id","content","isMounted","mountIcon","Icon36Phone","props","createElement","width","isNaN","height"],"sources":["../../../tmp/36/phone.ts"],"sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 36 36';\nconst id = 'phone_36';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" id=\"phone_36\"><path d=\"M21.168 22.889c2.03-2.032 5.229-2.22 7.355-.431l1.536 1.294c1.754 1.476 1.932 4.136.396 5.94a4.978 4.978 0 01-3.293 1.7c-4.91.66-10.06-1.705-15.454-7.1-5.394-5.394-7.761-10.546-7.1-15.454.035-.384.114-.763.238-1.128a4.978 4.978 0 011.462-2.165c1.806-1.535 4.464-1.358 5.94.397l1.292 1.536c1.79 2.124 1.605 5.323-.426 7.355l-1.103 1.1c-.294.295-.39.734-.246 1.124.4 1.097 1.424 2.467 3.068 4.11 1.645 1.646 3.015 2.668 4.11 3.07.39.144.83.047 1.123-.247z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon36PhoneProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon36Phone: FC<Icon36PhoneProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 36,\n    height: !isNaN(props.height) ? +props.height : 36,\n  }));\n};\n\n(Icon36Phone as any).mountIcon = mountIcon;\n\nexport default Icon36Phone;\n"]},"metadata":{},"sourceType":"module"}