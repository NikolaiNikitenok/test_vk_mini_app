{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from \"react\";\n/**\n * Хук взаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\n\nexport var usePagination = function usePagination() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$currentPage = _ref.currentPage,\n      currentPage = _ref$currentPage === void 0 ? 1 : _ref$currentPage,\n      _ref$siblingCount = _ref.siblingCount,\n      siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,\n      _ref$boundaryCount = _ref.boundaryCount,\n      boundaryCount = _ref$boundaryCount === void 0 ? 1 : _ref$boundaryCount,\n      _ref$totalPages = _ref.totalPages,\n      endPage = _ref$totalPages === void 0 ? 1 : _ref$totalPages;\n\n  return React.useMemo(function () {\n    var range = function range(from, to) {\n      var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var range = [];\n      var i = from;\n\n      while (i <= to) {\n        range.push(i);\n        i += step;\n      }\n\n      return range;\n    };\n\n    var startPages = range(1, Math.min(boundaryCount, endPage));\n    var endPages = range(Math.max(endPage - boundaryCount + 1, boundaryCount + 1), endPage);\n    var lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    var siblingsStart = Math.max(Math.min(currentPage - siblingCount, lowerBoundaryWhenCurrentPageHigh), boundaryCount + 2);\n    var upperBounadryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    var siblingsEnd = Math.min(Math.max(currentPage + siblingCount, upperBounadryWhenCurrentPageLow), endPages.length > 0 ? endPages[0] - 2 : endPage - 1);\n    var pages = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push(\"start-ellipsis\");\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push.apply(pages, _toConsumableArray(range(siblingsStart, siblingsEnd)));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push(\"end-ellipsis\");\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push.apply(pages, _toConsumableArray(endPages));\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n};","map":{"version":3,"mappings":"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","names":["React","usePagination","currentPage","siblingCount","boundaryCount","totalPages","endPage","useMemo","range","from","to","step","i","push","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBounadryWhenCurrentPageLow","siblingsEnd","length","pages","_toConsumableArray"],"sources":["../../src/hooks/usePagination.ts"],"sourcesContent":["import * as React from \"react\";\n\ninterface UsePagintaionProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = \"start-ellipsis\" | \"end-ellipsis\" | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук взаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePagintaionProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const range = (from: number, to: number, step = 1) => {\n      const range = [];\n      let i = from;\n\n      while (i <= to) {\n        range.push(i);\n        i += step;\n      }\n\n      return range;\n    };\n\n    const startPages = range(1, Math.min(boundaryCount, endPage));\n    const endPages = range(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh =\n      endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = Math.max(\n      Math.min(currentPage - siblingCount, lowerBoundaryWhenCurrentPageHigh),\n      boundaryCount + 2\n    );\n\n    const upperBounadryWhenCurrentPageLow =\n      boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBounadryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push(\"start-ellipsis\");\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...range(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push(\"end-ellipsis\");\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"]},"metadata":{},"sourceType":"module"}