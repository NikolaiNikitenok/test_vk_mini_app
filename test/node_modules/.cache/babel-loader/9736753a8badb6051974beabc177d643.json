{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from \"react\";\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nexport function useEventListener(event, _cb, _options) {\n  var cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(function () {\n    cbRef.current = _cb;\n  }, [_cb]);\n  var cb = React.useCallback(function (e) {\n    return cbRef.current && cbRef.current(e);\n  }, []);\n  var detach = React.useRef(noop);\n  var remove = React.useCallback(function () {\n    detach.current();\n    detach.current = noop;\n  }, []);\n  var add = React.useCallback(function (el) {\n    if (!canUseDOM) {\n      return;\n    }\n\n    remove();\n\n    if (!el) {\n      return;\n    }\n\n    var options = _objectSpread({}, _options);\n\n    el.addEventListener(event, cb, options);\n\n    detach.current = function () {\n      return el.removeEventListener(event, cb, options);\n    };\n  }, [_options, cb, event, remove]);\n  React.useEffect(function () {\n    return remove;\n  }, [remove]);\n  return {\n    add: add,\n    remove: remove\n  };\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AACA,SAASC,SAAT;AACA,SAASC,yBAAT;AAqBA,OAAO,SAASC,gBAAT,CAILC,KAJK,EAKLC,GALK,EAMLC,QANK,EAOgB;AACrB,MAAMC,KAAK,GAAGR,KAAK,CAACS,MAANT,CAAaM,GAAbN,CAAd;AACAG,2BAAyB,CAAC,YAAM;AAC9BK,SAAK,CAACE,OAANF,GAAgBF,GAAhBE;AADuB,KAEtB,CAACF,GAAD,CAFsB,CAAzBH;AAGA,MAAMQ,EAAE,GAAGX,KAAK,CAACY,WAANZ,CAAkB,UAACa,CAAD;AAAA,WAAOL,KAAK,CAACE,OAANF,IAAiBA,KAAK,CAACE,OAANF,CAAcK,CAAdL,CAAxB;AAAlB,KAA4D,EAA5DR,CAAX;AAEA,MAAMc,MAAM,GAAGd,KAAK,CAACS,MAANT,CAAaC,IAAbD,CAAf;AACA,MAAMe,MAAM,GAAGf,KAAK,CAACY,WAANZ,CAAkB,YAAM;AACrCc,UAAM,CAACJ,OAAPI;AACAA,UAAM,CAACJ,OAAPI,GAAiBb,IAAjBa;AAFa,KAGZ,EAHYd,CAAf;AAIA,MAAMgB,GAAG,GAAGhB,KAAK,CAACY,WAANZ,CACV,UAACiB,EAAD,EAAyC;AACvC,QAAI,CAACf,SAAL,EAAgB;AACd;AACD;;AACDa,UAAM;;AACN,QAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,QAAMC,OAAO,qBAAQX,QAAR,CAAb;;AACAU,MAAE,CAACE,gBAAHF,CAAoBZ,KAApBY,EAA2BN,EAA3BM,EAA+BC,OAA/BD;;AACAH,UAAM,CAACJ,OAAPI,GAAiB;AAAA,aAAMG,EAAE,CAACG,mBAAHH,CAAuBZ,KAAvBY,EAA8BN,EAA9BM,EAAkCC,OAAlCD,CAAN;AAAjB;AAXQ,KAaV,CAACV,QAAD,EAAWI,EAAX,EAAeN,KAAf,EAAsBU,MAAtB,CAbUf,CAAZ;AAeAA,OAAK,CAACqB,SAANrB,CAAgB;AAAA,WAAMe,MAAN;AAAhB,KAA8B,CAACA,MAAD,CAA9Bf;AAEA,SAAO;AAAEgB,OAAG,EAAHA,GAAF;AAAOD,UAAM,EAANA;AAAP,GAAP;AACD","names":["React","noop","canUseDOM","useIsomorphicLayoutEffect","useEventListener","event","_cb","_options","cbRef","useRef","current","cb","useCallback","e","detach","remove","add","el","options","addEventListener","removeEventListener","useEffect"],"sources":["../../src/hooks/useEventListener.ts"],"sourcesContent":["import * as React from \"react\";\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\ninterface EventListenerHandle {\n  add: (el: HTMLElement | Document | Window) => void;\n  remove: () => void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb:\n    | false\n    | null\n    | undefined\n    | ((ev: GlobalEventHandlersEventMap[K]) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<E extends Event>(\n  event: string,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<\n  E extends Event,\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  event: string | K,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback((e) => cbRef.current && cbRef.current(e), []);\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => {\n    detach.current();\n    detach.current = noop;\n  }, []);\n  const add = React.useCallback(\n    (el: HTMLElement | Document | Window) => {\n      if (!canUseDOM) {\n        return;\n      }\n      remove();\n      if (!el) {\n        return;\n      }\n      const options = { ..._options };\n      el.addEventListener(event, cb, options);\n      detach.current = () => el.removeEventListener(event, cb, options);\n    },\n    [_options, cb, event, remove]\n  );\n  React.useEffect(() => remove, [remove]);\n\n  return { add, remove };\n}\n"]},"metadata":{},"sourceType":"module"}