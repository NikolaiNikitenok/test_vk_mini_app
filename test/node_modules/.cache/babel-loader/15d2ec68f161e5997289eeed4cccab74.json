{"ast":null,"code":"/**\r\n *  Explain fetching here...\r\n *\r\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\r\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\nimport { getUrl } from \"./geturl.js\";\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250; // The global FetchGetUrlFunc implementation.\n\nlet getUrlFunc = getUrl;\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\"); // If locked, new Gateways cannot be added\n\nlet locked = false; // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\n\nasync function dataGatewayFunc(url, signal) {\n  try {\n    const match = url.match(reData);\n\n    if (!match) {\n      throw new Error(\"invalid data\");\n    }\n\n    return new FetchResponse(200, \"OK\", {\n      \"content-type\": match[1] || \"text/plain\"\n    }, match[2] ? decodeBase64(match[3]) : unpercent(match[3]));\n  } catch (error) {\n    return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", {}, null, new FetchRequest(url));\n  }\n}\n/**\r\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\r\n *  IPFS gateway hosted at %%baseUrl%%.\r\n */\n\n\nfunction getIpfsGatewayFunc(baseUrl) {\n  async function gatewayIpfs(url, signal) {\n    try {\n      const match = url.match(reIpfs);\n\n      if (!match) {\n        throw new Error(\"invalid link\");\n      }\n\n      return new FetchRequest(`${baseUrl}${match[2]}`);\n    } catch (error) {\n      return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", {}, null, new FetchRequest(url));\n    }\n  }\n\n  return gatewayIpfs;\n}\n\nconst Gateways = {\n  \"data\": dataGatewayFunc,\n  \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\nconst fetchSignals = new WeakMap();\n/**\r\n *  @_ignore\r\n */\n\nexport class FetchCancelSignal {\n  #listeners;\n  #cancelled;\n\n  constructor(request) {\n    this.#listeners = [];\n    this.#cancelled = false;\n    fetchSignals.set(request, () => {\n      if (this.#cancelled) {\n        return;\n      }\n\n      this.#cancelled = true;\n\n      for (const listener of this.#listeners) {\n        setTimeout(() => {\n          listener();\n        }, 0);\n      }\n\n      this.#listeners = [];\n    });\n  }\n\n  addListener(listener) {\n    assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fetchCancelSignal.addCancelListener\"\n    });\n    this.#listeners.push(listener);\n  }\n\n  get cancelled() {\n    return this.#cancelled;\n  }\n\n  checkSignal() {\n    assert(!this.cancelled, \"cancelled\", \"CANCELLED\", {});\n  }\n\n} // Check the signal, throwing if it is cancelled\n\nfunction checkSignal(signal) {\n  if (signal == null) {\n    throw new Error(\"missing signal; should not happen\");\n  }\n\n  signal.checkSignal();\n  return signal;\n}\n/**\r\n *  Represents a request for a resource using a URI.\r\n *\r\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\r\n *  and ``IPFS:``.\r\n *\r\n *  Additional schemes can be added globally using [[registerGateway]].\r\n *\r\n *  @example:\r\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\r\n *    resp = await req.send()\r\n *    resp.body.length\r\n *    //_result:\r\n */\n\n\nexport class FetchRequest {\n  #allowInsecure;\n  #gzip;\n  #headers;\n  #method;\n  #timeout;\n  #url;\n  #body;\n  #bodyType;\n  #creds; // Hooks\n\n  #preflight;\n  #process;\n  #retry;\n  #signal;\n  #throttle;\n  /**\r\n   *  The fetch URI to requrest.\r\n   */\n\n  get url() {\n    return this.#url;\n  }\n\n  set url(url) {\n    this.#url = String(url);\n  }\n  /**\r\n   *  The fetch body, if any, to send as the request body. //(default: null)//\r\n   *\r\n   *  When setting a body, the intrinsic ``Content-Type`` is automatically\r\n   *  set and will be used if **not overridden** by setting a custom\r\n   *  header.\r\n   *\r\n   *  If %%body%% is null, the body is cleared (along with the\r\n   *  intrinsic ``Content-Type``) and the .\r\n   *\r\n   *  If %%body%% is a string, the intrincis ``Content-Type`` is set to\r\n   *  ``text/plain``.\r\n   *\r\n   *  If %%body%% is a Uint8Array, the intrincis ``Content-Type`` is set to\r\n   *  ``application/octet-stream``.\r\n   *\r\n   *  If %%body%% is any other object, the intrincis ``Content-Type`` is\r\n   *  set to ``application/json``.\r\n   */\n\n\n  get body() {\n    if (this.#body == null) {\n      return null;\n    }\n\n    return new Uint8Array(this.#body);\n  }\n\n  set body(body) {\n    if (body == null) {\n      this.#body = undefined;\n      this.#bodyType = undefined;\n    } else if (typeof body === \"string\") {\n      this.#body = toUtf8Bytes(body);\n      this.#bodyType = \"text/plain\";\n    } else if (body instanceof Uint8Array) {\n      this.#body = body;\n      this.#bodyType = \"application/octet-stream\";\n    } else if (typeof body === \"object\") {\n      this.#body = toUtf8Bytes(JSON.stringify(body));\n      this.#bodyType = \"application/json\";\n    } else {\n      throw new Error(\"invalid body\");\n    }\n  }\n  /**\r\n   *  Returns true if the request has a body.\r\n   */\n\n\n  hasBody() {\n    return this.#body != null;\n  }\n  /**\r\n   *  The HTTP method to use when requesting the URI. If no method\r\n   *  has been explicitly set, then ``GET`` is used if the body is\r\n   *  null and ``POST`` otherwise.\r\n   */\n\n\n  get method() {\n    if (this.#method) {\n      return this.#method;\n    }\n\n    if (this.hasBody()) {\n      return \"POST\";\n    }\n\n    return \"GET\";\n  }\n\n  set method(method) {\n    if (method == null) {\n      method = \"\";\n    }\n\n    this.#method = String(method).toUpperCase();\n  }\n  /**\r\n   *  The headers that will be used when requesting the URI. All\r\n   *  keys are lower-case.\r\n   *\r\n   *  This object is a copy, so any chnages will **NOT** be reflected\r\n   *  in the ``FetchRequest``.\r\n   *\r\n   *  To set a header entry, use the ``setHeader`` method.\r\n   */\n\n\n  get headers() {\n    const headers = Object.assign({}, this.#headers);\n\n    if (this.#creds) {\n      headers[\"authorization\"] = `Basic ${encodeBase64(toUtf8Bytes(this.#creds))}`;\n    }\n\n    ;\n\n    if (this.allowGzip) {\n      headers[\"accept-encoding\"] = \"gzip\";\n    }\n\n    if (headers[\"content-type\"] == null && this.#bodyType) {\n      headers[\"content-type\"] = this.#bodyType;\n    }\n\n    if (this.body) {\n      headers[\"content-length\"] = String(this.body.length);\n    }\n\n    return headers;\n  }\n  /**\r\n   *  Get the header for %%key%%, ignoring case.\r\n   */\n\n\n  getHeader(key) {\n    return this.headers[key.toLowerCase()];\n  }\n  /**\r\n   *  Set the header for %%key%% to %%value%%. All values are coerced\r\n   *  to a string.\r\n   */\n\n\n  setHeader(key, value) {\n    this.#headers[String(key).toLowerCase()] = String(value);\n  }\n  /**\r\n   *  Clear all headers, resetting all intrinsic headers.\r\n   */\n\n\n  clearHeaders() {\n    this.#headers = {};\n  }\n\n  [Symbol.iterator]() {\n    const headers = this.headers;\n    const keys = Object.keys(headers);\n    let index = 0;\n    return {\n      next: () => {\n        if (index < keys.length) {\n          const key = keys[index++];\n          return {\n            value: [key, headers[key]],\n            done: false\n          };\n        }\n\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n    };\n  }\n  /**\r\n   *  The value that will be sent for the ``Authorization`` header.\r\n   *\r\n   *  To set the credentials, use the ``setCredentials`` method.\r\n   */\n\n\n  get credentials() {\n    return this.#creds || null;\n  }\n  /**\r\n   *  Sets an ``Authorization`` for %%username%% with %%password%%.\r\n   */\n\n\n  setCredentials(username, password) {\n    assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n    this.#creds = `${username}:${password}`;\n  }\n  /**\r\n   *  Enable and request gzip-encoded responses. The response will\r\n   *  automatically be decompressed. //(default: true)//\r\n   */\n\n\n  get allowGzip() {\n    return this.#gzip;\n  }\n\n  set allowGzip(value) {\n    this.#gzip = !!value;\n  }\n  /**\r\n   *  Allow ``Authentication`` credentials to be sent over insecure\r\n   *  channels. //(default: false)//\r\n   */\n\n\n  get allowInsecureAuthentication() {\n    return !!this.#allowInsecure;\n  }\n\n  set allowInsecureAuthentication(value) {\n    this.#allowInsecure = !!value;\n  }\n  /**\r\n   *  The timeout (in milliseconds) to wait for a complere response.\r\n   *  //(default: 5 minutes)//\r\n   */\n\n\n  get timeout() {\n    return this.#timeout;\n  }\n\n  set timeout(timeout) {\n    assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n    this.#timeout = timeout;\n  }\n  /**\r\n   *  This function is called prior to each request, for example\r\n   *  during a redirection or retry in case of server throttling.\r\n   *\r\n   *  This offers an opportunity to populate headers or update\r\n   *  content before sending a request.\r\n   */\n\n\n  get preflightFunc() {\n    return this.#preflight || null;\n  }\n\n  set preflightFunc(preflight) {\n    this.#preflight = preflight;\n  }\n  /**\r\n   *  This function is called after each response, offering an\r\n   *  opportunity to provide client-level throttling or updating\r\n   *  response data.\r\n   *\r\n   *  Any error thrown in this causes the ``send()`` to throw.\r\n   *\r\n   *  To schedule a retry attempt (assuming the maximum retry limit\r\n   *  has not been reached), use [[response.throwThrottleError]].\r\n   */\n\n\n  get processFunc() {\n    return this.#process || null;\n  }\n\n  set processFunc(process) {\n    this.#process = process;\n  }\n  /**\r\n   *  This function is called on each retry attempt.\r\n   */\n\n\n  get retryFunc() {\n    return this.#retry || null;\n  }\n\n  set retryFunc(retry) {\n    this.#retry = retry;\n  }\n  /**\r\n   *  Create a new FetchRequest instance with default values.\r\n   *\r\n   *  Once created, each property may be set before issuing a\r\n   *  ``.send()`` to make teh request.\r\n   */\n\n\n  constructor(url) {\n    this.#url = String(url);\n    this.#allowInsecure = false;\n    this.#gzip = true;\n    this.#headers = {};\n    this.#method = \"\";\n    this.#timeout = 300000;\n    this.#throttle = {\n      slotInterval: SLOT_INTERVAL,\n      maxAttempts: MAX_ATTEMPTS\n    };\n  }\n\n  toString() {\n    return `<FetchRequest method=${JSON.stringify(this.method)} url=${JSON.stringify(this.url)} headers=${JSON.stringify(this.headers)} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n  }\n  /**\r\n   *  Update the throttle parameters used to determine maximum\r\n   *  attempts and exponential-backoff properties.\r\n   */\n\n\n  setThrottleParams(params) {\n    if (params.slotInterval != null) {\n      this.#throttle.slotInterval = params.slotInterval;\n    }\n\n    if (params.maxAttempts != null) {\n      this.#throttle.maxAttempts = params.maxAttempts;\n    }\n  }\n\n  async #send(attempt, expires, delay, _request, _response) {\n    if (attempt >= this.#throttle.maxAttempts) {\n      return _response.makeServerError(\"exceeded maximum retry limit\");\n    }\n\n    assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n      operation: \"request.send\",\n      reason: \"timeout\",\n      request: _request\n    });\n\n    if (delay > 0) {\n      await wait(delay);\n    }\n\n    let req = this.clone();\n    const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase(); // Process any Gateways\n\n    if (scheme in Gateways) {\n      const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n\n      if (result instanceof FetchResponse) {\n        let response = result;\n\n        if (this.processFunc) {\n          checkSignal(_request.#signal);\n\n          try {\n            response = await this.processFunc(req, response);\n          } catch (error) {\n            // Something went wrong during processing; throw a 5xx server error\n            if (error.throttle == null || typeof error.stall !== \"number\") {\n              response.makeServerError(\"error in post-processing function\", error).assertOk();\n            } // Ignore throttling\n\n          }\n        }\n\n        return response;\n      }\n\n      req = result;\n    } // We have a preflight function; update the request\n\n\n    if (this.preflightFunc) {\n      req = await this.preflightFunc(req);\n    }\n\n    const resp = await getUrlFunc(req, checkSignal(_request.#signal));\n    let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n    if (response.statusCode === 301 || response.statusCode === 302) {\n      // Redirect\n      try {\n        const location = response.headers.location || \"\";\n        return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n      } catch (error) {} // Things won't get any better on another attempt; abort\n\n\n      return response;\n    } else if (response.statusCode === 429) {\n      // Throttle\n      if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n        const retryAfter = response.headers[\"retry-after\"];\n        let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n\n        if (typeof retryAfter === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n          delay = parseInt(retryAfter);\n        }\n\n        return req.clone().#send(attempt + 1, expires, delay, _request, response);\n      }\n    }\n\n    if (this.processFunc) {\n      checkSignal(_request.#signal);\n\n      try {\n        response = await this.processFunc(req, response);\n      } catch (error) {\n        // Something went wrong during processing; throw a 5xx server error\n        if (error.throttle == null || typeof error.stall !== \"number\") {\n          response.makeServerError(\"error in post-processing function\", error).assertOk();\n        } // Throttle\n\n\n        let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n        ;\n\n        if (error.stall >= 0) {\n          delay = error.stall;\n        }\n\n        return req.clone().#send(attempt + 1, expires, delay, _request, response);\n      }\n    }\n\n    return response;\n  }\n  /**\r\n   *  Resolves to the response by sending the request.\r\n   */\n\n\n  send() {\n    assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fetchRequest.send\"\n    });\n    this.#signal = new FetchCancelSignal(this);\n    return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", {}, null, this));\n  }\n  /**\r\n   *  Cancels the inflight response, causing a ``CANCELLED``\r\n   *  error to be rejected from the [[send]].\r\n   */\n\n\n  cancel() {\n    assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fetchRequest.cancel\"\n    });\n    const signal = fetchSignals.get(this);\n\n    if (!signal) {\n      throw new Error(\"missing signal; should not happen\");\n    }\n\n    signal();\n  }\n  /**\r\n   *  Returns a new [[FetchRequest]] that represents the redirection\r\n   *  to %%location%%.\r\n   */\n\n\n  redirect(location) {\n    // Redirection; for now we only support absolute locataions\n    const current = this.url.split(\":\")[0].toLowerCase();\n    const target = location.split(\":\")[0].toLowerCase(); // Don't allow redirecting:\n    // - non-GET requests\n    // - downgrading the security (e.g. https => http)\n    // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n\n    assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n      operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`\n    }); // Create a copy of this request, with a new URL\n\n    const req = new FetchRequest(location);\n    req.method = \"GET\";\n    req.allowGzip = this.allowGzip;\n    req.timeout = this.timeout;\n    req.#headers = Object.assign({}, this.#headers);\n\n    if (this.#body) {\n      req.#body = new Uint8Array(this.#body);\n    }\n\n    req.#bodyType = this.#bodyType; // Do not forward credentials unless on the same domain; only absolute\n    //req.allowInsecure = false;\n    // paths are currently supported; may want a way to specify to forward?\n    //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n\n    return req;\n  }\n  /**\r\n   *  Create a new copy of this request.\r\n   */\n\n\n  clone() {\n    const clone = new FetchRequest(this.url); // Preserve \"default method\" (i.e. null)\n\n    clone.#method = this.#method; // Preserve \"default body\" with type, copying the Uint8Array is present\n\n    if (this.#body) {\n      clone.#body = this.#body;\n    }\n\n    clone.#bodyType = this.#bodyType; // Preserve \"default headers\"\n\n    clone.#headers = Object.assign({}, this.#headers); // Credentials is readonly, so we copy internally\n\n    clone.#creds = this.#creds;\n\n    if (this.allowGzip) {\n      clone.allowGzip = true;\n    }\n\n    clone.timeout = this.timeout;\n\n    if (this.allowInsecureAuthentication) {\n      clone.allowInsecureAuthentication = true;\n    }\n\n    clone.#preflight = this.#preflight;\n    clone.#process = this.#process;\n    clone.#retry = this.#retry;\n    return clone;\n  }\n  /**\r\n   *  Locks all static configuration for gateways and FetchGetUrlFunc\r\n   *  registration.\r\n   */\n\n\n  static lockConfig() {\n    locked = true;\n  }\n  /**\r\n   *  Get the current Gateway function for %%scheme%%.\r\n   */\n\n\n  static getGateway(scheme) {\n    return Gateways[scheme.toLowerCase()] || null;\n  }\n  /**\r\n   *  Use the %%func%% when fetching URIs using %%scheme%%.\r\n   *\r\n   *  This method affects all requests globally.\r\n   *\r\n   *  If [[lockConfig]] has been called, no change is made and this\r\n   *  throws.\r\n   */\n\n\n  static registerGateway(scheme, func) {\n    scheme = scheme.toLowerCase();\n\n    if (scheme === \"http\" || scheme === \"https\") {\n      throw new Error(`cannot intercept ${scheme}; use registerGetUrl`);\n    }\n\n    if (locked) {\n      throw new Error(\"gateways locked\");\n    }\n\n    Gateways[scheme] = func;\n  }\n  /**\r\n   *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\r\n   *\r\n   *  This method affects all requests globally.\r\n   *\r\n   *  If [[lockConfig]] has been called, no change is made and this\r\n   *  throws.\r\n   */\n\n\n  static registerGetUrl(getUrl) {\n    if (locked) {\n      throw new Error(\"gateways locked\");\n    }\n\n    getUrlFunc = getUrl;\n  }\n  /**\r\n   *  Creates a function that can \"fetch\" data URIs.\r\n   *\r\n   *  Note that this is automatically done internally to support\r\n   *  data URIs, so it is not necessary to register it.\r\n   *\r\n   *  This is not generally something that is needed, but may\r\n   *  be useful in a wrapper to perfom custom data URI functionality.\r\n   */\n\n\n  static createDataGateway() {\n    return dataGatewayFunc;\n  }\n  /**\r\n   *  Creates a function that will fetch IPFS (unvalidated) from\r\n   *  a custom gateway baseUrl.\r\n   *\r\n   *  The default IPFS gateway used internally is\r\n   *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\r\n   */\n\n\n  static createIpfsGatewayFunc(baseUrl) {\n    return getIpfsGatewayFunc(baseUrl);\n  }\n\n}\n;\n/**\r\n *  The response for a FetchREquest.\r\n */\n\nexport class FetchResponse {\n  #statusCode;\n  #statusMessage;\n  #headers;\n  #body;\n  #request;\n  #error;\n\n  toString() {\n    return `<FetchResponse status=${this.statusCode} body=${this.#body ? hexlify(this.#body) : \"null\"}>`;\n  }\n  /**\r\n   *  The response status code.\r\n   */\n\n\n  get statusCode() {\n    return this.#statusCode;\n  }\n  /**\r\n   *  The response status message.\r\n   */\n\n\n  get statusMessage() {\n    return this.#statusMessage;\n  }\n  /**\r\n   *  The response headers. All keys are lower-case.\r\n   */\n\n\n  get headers() {\n    return Object.assign({}, this.#headers);\n  }\n  /**\r\n   *  The response body, or ``null`` if there was no body.\r\n   */\n\n\n  get body() {\n    return this.#body == null ? null : new Uint8Array(this.#body);\n  }\n  /**\r\n   *  The response body as a UTF-8 encoded string, or the empty\r\n   *  string (i.e. ``\"\"``) if there was no body.\r\n   *\r\n   *  An error is thrown if the body is invalid UTF-8 data.\r\n   */\n\n\n  get bodyText() {\n    try {\n      return this.#body == null ? \"\" : toUtf8String(this.#body);\n    } catch (error) {\n      assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"bodyText\",\n        info: {\n          response: this\n        }\n      });\n    }\n  }\n  /**\r\n   *  The response body, decoded as JSON.\r\n   *\r\n   *  An error is thrown if the body is invalid JSON-encoded data\r\n   *  or if there was no body.\r\n   */\n\n\n  get bodyJson() {\n    try {\n      return JSON.parse(this.bodyText);\n    } catch (error) {\n      assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"bodyJson\",\n        info: {\n          response: this\n        }\n      });\n    }\n  }\n\n  [Symbol.iterator]() {\n    const headers = this.headers;\n    const keys = Object.keys(headers);\n    let index = 0;\n    return {\n      next: () => {\n        if (index < keys.length) {\n          const key = keys[index++];\n          return {\n            value: [key, headers[key]],\n            done: false\n          };\n        }\n\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n    };\n  }\n\n  constructor(statusCode, statusMessage, headers, body, request) {\n    this.#statusCode = statusCode;\n    this.#statusMessage = statusMessage;\n    this.#headers = Object.keys(headers).reduce((accum, k) => {\n      accum[k.toLowerCase()] = String(headers[k]);\n      return accum;\n    }, {});\n    this.#body = body == null ? null : new Uint8Array(body);\n    this.#request = request || null;\n    this.#error = {\n      message: \"\"\n    };\n  }\n  /**\r\n   *  Return a Response with matching headers and body, but with\r\n   *  an error status code (i.e. 599) and %%message%% with an\r\n   *  optional %%error%%.\r\n   */\n\n\n  makeServerError(message, error) {\n    let statusMessage;\n\n    if (!message) {\n      message = `${this.statusCode} ${this.statusMessage}`;\n      statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n    } else {\n      statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n    }\n\n    const response = new FetchResponse(599, statusMessage, this.headers, this.body, this.#request || undefined);\n    response.#error = {\n      message,\n      error\n    };\n    return response;\n  }\n  /**\r\n   *  If called within a [request.processFunc](FetchRequest-processFunc)\r\n   *  call, causes the request to retry as if throttled for %%stall%%\r\n   *  milliseconds.\r\n   */\n\n\n  throwThrottleError(message, stall) {\n    if (stall == null) {\n      stall = -1;\n    } else {\n      assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n    }\n\n    const error = new Error(message || \"throttling requests\");\n    defineProperties(error, {\n      stall,\n      throttle: true\n    });\n    throw error;\n  }\n  /**\r\n   *  Get the header value for %%key%%, ignoring case.\r\n   */\n\n\n  getHeader(key) {\n    return this.headers[key.toLowerCase()];\n  }\n  /**\r\n   *  Returns true of the response has a body.\r\n   */\n\n\n  hasBody() {\n    return this.#body != null;\n  }\n  /**\r\n   *  The request made for this response.\r\n   */\n\n\n  get request() {\n    return this.#request;\n  }\n  /**\r\n   *  Returns true if this response was a success statusCode.\r\n   */\n\n\n  ok() {\n    return this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300;\n  }\n  /**\r\n   *  Throws a ``SERVER_ERROR`` if this response is not ok.\r\n   */\n\n\n  assertOk() {\n    if (this.ok()) {\n      return;\n    }\n\n    let {\n      message,\n      error\n    } = this.#error;\n\n    if (message === \"\") {\n      message = `server response ${this.statusCode} ${this.statusMessage}`;\n    }\n\n    assert(false, message, \"SERVER_ERROR\", {\n      request: this.request || \"unknown request\",\n      response: this,\n      error\n    });\n  }\n\n}\n\nfunction getTime() {\n  return new Date().getTime();\n}\n\nfunction unpercent(value) {\n  return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n    return String.fromCharCode(parseInt(code, 16));\n  }));\n}\n\nfunction wait(delay) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}","map":{"version":3,"mappings":"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","names":["decodeBase64","encodeBase64","hexlify","assert","assertArgument","defineProperties","toUtf8Bytes","toUtf8String","getUrl","MAX_ATTEMPTS","SLOT_INTERVAL","getUrlFunc","reData","RegExp","reIpfs","locked","dataGatewayFunc","url","signal","match","Error","FetchResponse","unpercent","error","FetchRequest","getIpfsGatewayFunc","baseUrl","gatewayIpfs","Gateways","fetchSignals","WeakMap","FetchCancelSignal","constructor","request","set","listener","setTimeout","addListener","operation","push","cancelled","checkSignal","String","body","Uint8Array","undefined","JSON","stringify","hasBody","method","toUpperCase","headers","Object","assign","allowGzip","length","getHeader","key","toLowerCase","setHeader","value","clearHeaders","Symbol","iterator","keys","index","next","done","credentials","setCredentials","username","password","allowInsecureAuthentication","timeout","preflightFunc","preflight","processFunc","process","retryFunc","retry","slotInterval","maxAttempts","toString","setThrottleParams","params","attempt","expires","delay","_request","_response","makeServerError","getTime","reason","wait","req","clone","scheme","split","result","response","throttle","stall","assertOk","resp","statusCode","statusMessage","location","redirect","retryAfter","Math","trunc","random","pow","parseInt","send","cancel","get","current","target","lockConfig","getGateway","registerGateway","func","registerGetUrl","createDataGateway","createIpfsGatewayFunc","bodyText","info","bodyJson","parse","reduce","accum","k","message","throwThrottleError","Number","isInteger","ok","Date","replace","all","code","fromCharCode","Promise","resolve"],"sourceRoot":"","sources":["../../src.ts/utils/fetch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}