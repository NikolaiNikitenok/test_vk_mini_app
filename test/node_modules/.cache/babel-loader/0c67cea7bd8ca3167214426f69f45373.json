{"ast":null,"code":"// import React, { useState, useEffect, usePlatform } from 'react';\n// import PropTypes from 'prop-types';\n// import bridge from '@vkontakte/vk-bridge';\n// import '@vkontakte/vkui/dist/vkui.css';\n// import { \n//   AdaptivityProvider,\n//   Panel,\n//   PanelHeader,\n//   PanelHeaderBack,\n//   eader,\n//   Button,\n//   Group,\n//   Cell, \n//   Div, \n//   Avatar,\n//   Counter,\n//   FormItem,\n//   Select,\n//   Checkbox,\n//   Platform,\n//   View,\n//   PanelHeaderButton\n// } from '@vkontakte/vkui';\n// import {\n//   Icon12Tag,\n//   Icon12Add,\n//   Icon16Add,\n//   Icon24Add,\n//   Icon24ChevronCompactRight,\n// } from '@vkontakte/icons'\n// const Buy = () => {\n//   const [mode, setMode] = React.useState('all');\n//   const [menuOpened, setMenuOpened] = React.useState(false);\n//   const [selected, setSelected] = React.useState('news');\n//   return (\n//     <View activePanel=\"panel\">\n//       <Panel id=\"panel\">\n//         <PanelHeader\n//           before={\n//             <PanelHeaderButton>\n//               <Icon28CameraOutline />\n//             </PanelHeaderButton>\n//           }\n//           after={\n//             <PanelHeaderButton>\n//               <Icon28AddOutline />\n//             </PanelHeaderButton>\n//           }\n//         >\n//           <DefaultInPanel\n//             selected={selected}\n//             setSelected={setSelected}\n//             menuOpened={menuOpened}\n//             onMenuClick={(opened) => {\n//               setMenuOpened((prevState) => (opened ? !prevState : false));\n//             }}\n//           />\n//         </PanelHeader>\n//         {selected === 'news' && (\n//           <Group id=\"tab-content-news\" aria-labelledby=\"tab-news\" role=\"tabpanel\">\n//             <Div>Контент новостей</Div>\n//           </Group>\n//         )}\n//         {selected === 'recommendations' && (\n//           <Group\n//             id=\"tab-content-recommendations\"\n//             aria-labelledby=\"tab-recommendations\"\n//             role=\"tabpanel\"\n//           >\n//             <Div>Контент рекомендаций</Div>\n//           </Group>\n//         )}\n//         <Scrollable />\n//         <PanelHeaderContext opened={menuOpened} onClose={() => setMenuOpened(false)}>\n//           <List>\n//             <Cell\n//               before={<Icon28UsersOutline />}\n//               after={mode === 'all' && <Icon24Done fill=\"var(--vkui--color_icon_accent)\" />}\n//               onClick={() => setMode('all')}\n//             >\n//               Communities\n//             </Cell>\n//             <Cell\n//               before={<Icon28SettingsOutline />}\n//               after={mode === 'managed' && <Icon24Done fill=\"var(--vkui--color_icon_accent)\" />}\n//               onClick={() => setMode('managed')}\n//             >\n//               Managed Communities\n//             </Cell>\n//           </List>\n//         </PanelHeaderContext>\n//       </Panel>\n//     </View>\n//   );\n// };\n// const DefaultInPanel = ({ menuOpened, onMenuClick, selected, setSelected }) => {\n//   return (\n//     <Tabs>\n//       <TabsItem\n//         after={\n//           <Icon16Dropdown\n//             style={{\n//               transform: `rotate(${menuOpened ? '180deg' : '0'})`,\n//             }}\n//           />\n//         }\n//         selected={selected === 'news'}\n//         onClick={() => {\n//           if (selected === 'news') {\n//             onMenuClick(true);\n//           }\n//           setSelected('news');\n//         }}\n//         id=\"tab-news\"\n//         aria-controls=\"tab-content-news\"\n//       >\n//         Новости\n//       </TabsItem>\n//       <TabsItem\n//         selected={selected === 'recommendations'}\n//         onClick={() => {\n//           onMenuClick(false);\n//           setSelected('recommendations');\n//         }}\n//         id=\"tab-recommendations\"\n//         aria-controls=\"tab-content-recommendations\"\n//       >\n//         Интересное\n//       </TabsItem>\n//     </Tabs>\n//   );\n// };\n// <ConfigProvider webviewType=\"internal\">\n//   <Buy />\n// </ConfigProvider>;\n//   export default Buy","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/src/panels/Buy.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect, usePlatform } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import bridge from '@vkontakte/vk-bridge';\r\n// import '@vkontakte/vkui/dist/vkui.css';\r\n\r\n// import { \r\n//   AdaptivityProvider,\r\n//   Panel,\r\n//   PanelHeader,\r\n//   PanelHeaderBack,\r\n//   eader,\r\n//   Button,\r\n//   Group,\r\n//   Cell, \r\n//   Div, \r\n//   Avatar,\r\n//   Counter,\r\n//   FormItem,\r\n//   Select,\r\n//   Checkbox,\r\n//   Platform,\r\n//   View,\r\n//   PanelHeaderButton\r\n// } from '@vkontakte/vkui';\r\n\r\n// import {\r\n//   Icon12Tag,\r\n//   Icon12Add,\r\n//   Icon16Add,\r\n//   Icon24Add,\r\n//   Icon24ChevronCompactRight,\r\n\r\n// } from '@vkontakte/icons'\r\n\r\n// const Buy = () => {\r\n//   const [mode, setMode] = React.useState('all');\r\n//   const [menuOpened, setMenuOpened] = React.useState(false);\r\n//   const [selected, setSelected] = React.useState('news');\r\n\r\n//   return (\r\n//     <View activePanel=\"panel\">\r\n//       <Panel id=\"panel\">\r\n//         <PanelHeader\r\n//           before={\r\n//             <PanelHeaderButton>\r\n//               <Icon28CameraOutline />\r\n//             </PanelHeaderButton>\r\n//           }\r\n//           after={\r\n//             <PanelHeaderButton>\r\n//               <Icon28AddOutline />\r\n//             </PanelHeaderButton>\r\n//           }\r\n//         >\r\n//           <DefaultInPanel\r\n//             selected={selected}\r\n//             setSelected={setSelected}\r\n//             menuOpened={menuOpened}\r\n//             onMenuClick={(opened) => {\r\n//               setMenuOpened((prevState) => (opened ? !prevState : false));\r\n//             }}\r\n//           />\r\n//         </PanelHeader>\r\n\r\n//         {selected === 'news' && (\r\n//           <Group id=\"tab-content-news\" aria-labelledby=\"tab-news\" role=\"tabpanel\">\r\n//             <Div>Контент новостей</Div>\r\n//           </Group>\r\n//         )}\r\n//         {selected === 'recommendations' && (\r\n//           <Group\r\n//             id=\"tab-content-recommendations\"\r\n//             aria-labelledby=\"tab-recommendations\"\r\n//             role=\"tabpanel\"\r\n//           >\r\n//             <Div>Контент рекомендаций</Div>\r\n//           </Group>\r\n//         )}\r\n\r\n//         <Scrollable />\r\n\r\n//         <PanelHeaderContext opened={menuOpened} onClose={() => setMenuOpened(false)}>\r\n//           <List>\r\n//             <Cell\r\n//               before={<Icon28UsersOutline />}\r\n//               after={mode === 'all' && <Icon24Done fill=\"var(--vkui--color_icon_accent)\" />}\r\n//               onClick={() => setMode('all')}\r\n//             >\r\n//               Communities\r\n//             </Cell>\r\n//             <Cell\r\n//               before={<Icon28SettingsOutline />}\r\n//               after={mode === 'managed' && <Icon24Done fill=\"var(--vkui--color_icon_accent)\" />}\r\n//               onClick={() => setMode('managed')}\r\n//             >\r\n//               Managed Communities\r\n//             </Cell>\r\n//           </List>\r\n//         </PanelHeaderContext>\r\n//       </Panel>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const DefaultInPanel = ({ menuOpened, onMenuClick, selected, setSelected }) => {\r\n//   return (\r\n//     <Tabs>\r\n//       <TabsItem\r\n//         after={\r\n//           <Icon16Dropdown\r\n//             style={{\r\n//               transform: `rotate(${menuOpened ? '180deg' : '0'})`,\r\n//             }}\r\n//           />\r\n//         }\r\n//         selected={selected === 'news'}\r\n//         onClick={() => {\r\n//           if (selected === 'news') {\r\n//             onMenuClick(true);\r\n//           }\r\n//           setSelected('news');\r\n//         }}\r\n//         id=\"tab-news\"\r\n//         aria-controls=\"tab-content-news\"\r\n//       >\r\n//         Новости\r\n//       </TabsItem>\r\n//       <TabsItem\r\n//         selected={selected === 'recommendations'}\r\n//         onClick={() => {\r\n//           onMenuClick(false);\r\n//           setSelected('recommendations');\r\n//         }}\r\n//         id=\"tab-recommendations\"\r\n//         aria-controls=\"tab-content-recommendations\"\r\n//       >\r\n//         Интересное\r\n//       </TabsItem>\r\n//     </Tabs>\r\n//   );\r\n// };\r\n\r\n\r\n// <ConfigProvider webviewType=\"internal\">\r\n//   <Buy />\r\n// </ConfigProvider>;\r\n\r\n//   export default Buy"]},"metadata":{},"sourceType":"module"}