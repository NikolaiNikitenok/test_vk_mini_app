{"ast":null,"code":"function copyWithNavigator(text) {\n  return navigator.clipboard.writeText(text).then(function () {\n    return true;\n  });\n}\n\nfunction copyWithFakeElement(text) {\n  return new Promise(function (resolve, reject) {\n    var textareaEl = document.createElement('textarea');\n    var range = document.createRange();\n    textareaEl.value = text;\n    textareaEl.style.position = 'fixed'; // Avoid scrolling to bottom\n\n    textareaEl.contentEditable = 'true';\n    document.body.appendChild(textareaEl);\n    textareaEl.focus();\n    textareaEl.select();\n    range.selectNodeContents(textareaEl);\n    var selection = window.getSelection();\n\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    textareaEl.setSelectionRange(0, 999999);\n\n    try {\n      var successful = document.execCommand('copy');\n\n      if (successful) {\n        resolve(true);\n      } else {\n        reject(new Error('copy failed'));\n      }\n    } catch (error) {\n      reject(error);\n    }\n\n    if (selection) {\n      selection.removeAllRanges();\n    }\n\n    document.body.removeChild(textareaEl);\n  });\n}\n\nexport function copyTextToClipboard(text) {\n  if (navigator.clipboard) {\n    return copyWithNavigator(text);\n  } else {\n    return copyWithFakeElement(text);\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,CAA2BC,IAA3B,EAA2D;AACzD,SAAOC,SAAS,CAACC,SAAVD,CAAoBE,SAApBF,CAA8BD,IAA9BC,EAAoCG,IAApCH,CAAyC;AAAA,WAAM,IAAN;AAAzC,IAAP;AACD;;AAED,SAASI,mBAAT,CAA6BL,IAA7B,EAA6D;AAC3D,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,UAAU,GAAGC,QAAQ,CAACC,aAATD,CAAuB,UAAvBA,CAAnB;AACA,QAAME,KAAK,GAAGF,QAAQ,CAACG,WAATH,EAAd;AAEAD,cAAU,CAACK,KAAXL,GAAmBT,IAAnBS;AACAA,cAAU,CAACM,KAAXN,CAAiBO,QAAjBP,GAA4B,OAA5BA,CALsC,CAKD;;AACrCA,cAAU,CAACQ,eAAXR,GAA6B,MAA7BA;AAEAC,YAAQ,CAACQ,IAATR,CAAcS,WAAdT,CAA0BD,UAA1BC;AAEAD,cAAU,CAACW,KAAXX;AACAA,cAAU,CAACY,MAAXZ;AAEAG,SAAK,CAACU,kBAANV,CAAyBH,UAAzBG;AAEA,QAAMW,SAAS,GAAGC,MAAM,CAACC,YAAPD,EAAlB;;AACA,QAAID,SAAJ,EAAe;AACbA,eAAS,CAACG,eAAVH;AACAA,eAAS,CAACI,QAAVJ,CAAmBX,KAAnBW;AACD;;AAEDd,cAAU,CAACmB,iBAAXnB,CAA6B,CAA7BA,EAAgC,MAAhCA;;AAEA,QAAI;AACF,UAAMoB,UAAU,GAAGnB,QAAQ,CAACoB,WAATpB,CAAqB,MAArBA,CAAnB;;AACA,UAAImB,UAAJ,EAAgB;AACdtB,eAAO,CAAC,IAAD,CAAPA;AADF,aAEO;AACLC,cAAM,CAAC,IAAIuB,KAAJ,CAAU,aAAV,CAAD,CAANvB;AACD;AANH,MAOE,OAAOwB,KAAP,EAAc;AACdxB,YAAM,CAACwB,KAAD,CAANxB;AACD;;AAED,QAAIe,SAAJ,EAAe;AACbA,eAAS,CAACG,eAAVH;AACD;;AAEDb,YAAQ,CAACQ,IAATR,CAAcuB,WAAdvB,CAA0BD,UAA1BC;AAtCK,IAAP;AAwCD;;AAED,OAAO,SAASwB,mBAAT,CAA6BlC,IAA7B,EAA6D;AAClE,MAAIC,SAAS,CAACC,SAAd,EAAyB;AACvB,WAAOH,iBAAiB,CAACC,IAAD,CAAxB;AADF,SAEO;AACL,WAAOK,mBAAmB,CAACL,IAAD,CAA1B;AACD;AACF","names":["copyWithNavigator","text","navigator","clipboard","writeText","then","copyWithFakeElement","Promise","resolve","reject","textareaEl","document","createElement","range","createRange","value","style","position","contentEditable","body","appendChild","focus","select","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","setSelectionRange","successful","execCommand","Error","error","removeChild","copyTextToClipboard"],"sources":["../../src/clipboard.ts"],"sourcesContent":["function copyWithNavigator(text: string): Promise<boolean> {\n  return navigator.clipboard.writeText(text).then(() => true);\n}\n\nfunction copyWithFakeElement(text: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    const textareaEl = document.createElement('textarea');\n    const range = document.createRange();\n\n    textareaEl.value = text;\n    textareaEl.style.position = 'fixed'; // Avoid scrolling to bottom\n    textareaEl.contentEditable = 'true';\n\n    document.body.appendChild(textareaEl);\n\n    textareaEl.focus();\n    textareaEl.select();\n\n    range.selectNodeContents(textareaEl);\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n\n    textareaEl.setSelectionRange(0, 999999);\n\n    try {\n      const successful = document.execCommand('copy');\n      if (successful) {\n        resolve(true);\n      } else {\n        reject(new Error('copy failed'));\n      }\n    } catch (error) {\n      reject(error);\n    }\n\n    if (selection) {\n      selection.removeAllRanges();\n    }\n\n    document.body.removeChild(textareaEl);\n  });\n}\n\nexport function copyTextToClipboard(text: string): Promise<boolean> {\n  if (navigator.clipboard) {\n    return copyWithNavigator(text);\n  } else {\n    return copyWithFakeElement(text);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}