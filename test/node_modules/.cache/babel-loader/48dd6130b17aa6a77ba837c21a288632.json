{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onStart\", \"onStartX\", \"onStartY\", \"onMove\", \"onMoveX\", \"onMoveY\", \"onLeave\", \"onEnter\", \"onEnd\", \"onEndX\", \"onEndY\", \"onClickCapture\", \"usePointerHover\", \"slideThreshold\", \"useCapture\", \"Component\", \"getRootRef\", \"noSlideClick\", \"stopPropagation\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { getSupportedEvents, coordX, coordY, touchEnabled } from \"../../lib/touch\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nexport var Touch = function Touch(_ref) {\n  var onStart = _ref.onStart,\n      onStartX = _ref.onStartX,\n      onStartY = _ref.onStartY,\n      _onMove = _ref.onMove,\n      onMoveX = _ref.onMoveX,\n      onMoveY = _ref.onMoveY,\n      onLeave = _ref.onLeave,\n      onEnter = _ref.onEnter,\n      _onEnd = _ref.onEnd,\n      onEndX = _ref.onEndX,\n      onEndY = _ref.onEndY,\n      onClickCapture = _ref.onClickCapture,\n      usePointerHover = _ref.usePointerHover,\n      _ref$slideThreshold = _ref.slideThreshold,\n      slideThreshold = _ref$slideThreshold === void 0 ? 5 : _ref$slideThreshold,\n      _ref$useCapture = _ref.useCapture,\n      useCapture = _ref$useCapture === void 0 ? false : _ref$useCapture,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? \"div\" : _ref$Component,\n      getRootRef = _ref.getRootRef,\n      _ref$noSlideClick = _ref.noSlideClick,\n      noSlideClick = _ref$noSlideClick === void 0 ? false : _ref$noSlideClick,\n      _ref$stopPropagation = _ref.stopPropagation,\n      stopPropagation = _ref$stopPropagation === void 0 ? false : _ref$stopPropagation,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var events = React.useMemo(getSupportedEvents, []);\n  var didSlide = React.useRef(false);\n  var gesture = React.useRef(null);\n\n  var handle = function handle(e, handers) {\n    stopPropagation && e.stopPropagation();\n    handers.forEach(function (cb) {\n      var _gesture$current$star, _gesture$current, _gesture$current$star2;\n\n      var duration = Date.now() - ((_gesture$current$star = (_gesture$current = gesture.current) === null || _gesture$current === void 0 ? void 0 : (_gesture$current$star2 = _gesture$current.startT) === null || _gesture$current$star2 === void 0 ? void 0 : _gesture$current$star2.getTime()) !== null && _gesture$current$star !== void 0 ? _gesture$current$star : 0);\n      cb && cb(_objectSpread(_objectSpread({}, gesture.current), {}, {\n        duration: duration,\n        originalEvent: e\n      }));\n    });\n  };\n\n  var enterHandler = useEventListener(usePointerHover ? \"pointerenter\" : \"mouseenter\", onEnter);\n  var leaveHandler = useEventListener(usePointerHover ? \"pointerleave\" : \"mouseleave\", onLeave);\n  var startHandler = useEventListener(events[0], function (e) {\n    gesture.current = initGesture(coordX(e), coordY(e));\n    handle(e, [onStart, onStartX, onStartY]); // 1 line, 2 bad specs, 2 workarounds:\n\n    subscribe(touchEnabled() ? // Touch events fire on initial target, and won't bubble if its removed\n    // see: #235, #1968, https://stackoverflow.com/a/45760014\n    e.target : // Mouse events fire on the element under pointer, so we lose move / end\n    // if pointer goes outside container.\n    // Can be fixed by PointerEvents' setPointerCapture later\n    document);\n  }, {\n    capture: useCapture,\n    passive: false\n  });\n  var containerRef = useExternRef(getRootRef);\n  useIsomorphicLayoutEffect(function () {\n    var el = containerRef.current;\n\n    if (el) {\n      enterHandler.add(el);\n      leaveHandler.add(el);\n      startHandler.add(el);\n    }\n  }, [Component]);\n\n  function onMove(e) {\n    var _gesture$current2;\n\n    var _ref2 = (_gesture$current2 = gesture.current) !== null && _gesture$current2 !== void 0 ? _gesture$current2 : {},\n        isPressed = _ref2.isPressed,\n        isX = _ref2.isX,\n        isY = _ref2.isY,\n        _ref2$startX = _ref2.startX,\n        startX = _ref2$startX === void 0 ? 0 : _ref2$startX,\n        _ref2$startY = _ref2.startY,\n        startY = _ref2$startY === void 0 ? 0 : _ref2$startY;\n\n    if (isPressed) {\n      var _gesture$current3; // смещения\n\n\n      var shiftX = coordX(e) - startX;\n      var shiftY = coordY(e) - startY; // абсолютные значения смещений\n\n      var shiftXAbs = Math.abs(shiftX);\n      var shiftYAbs = Math.abs(shiftY); // Если определяем мультитач, то прерываем жест\n\n      if (!!e.touches && e.touches.length > 1) {\n        return onEnd(e);\n      } // если мы ещё не определились\n\n\n      if (!isX && !isY) {\n        var willBeX = shiftXAbs >= slideThreshold && shiftXAbs > shiftYAbs;\n        var willBeY = shiftYAbs >= slideThreshold && shiftYAbs > shiftXAbs;\n        var willBeSlidedX = willBeX && (!!onMoveX || !!_onMove);\n        var willBeSlidedY = willBeY && (!!onMoveY || !!_onMove);\n        Object.assign(gesture.current, {\n          isY: willBeY,\n          isX: willBeX,\n          isSlideX: willBeSlidedX,\n          isSlideY: willBeSlidedY,\n          isSlide: willBeSlidedX || willBeSlidedY\n        });\n      }\n\n      if ((_gesture$current3 = gesture.current) !== null && _gesture$current3 !== void 0 && _gesture$current3.isSlide) {\n        Object.assign(gesture.current, {\n          shiftX: shiftX,\n          shiftY: shiftY,\n          shiftXAbs: shiftXAbs,\n          shiftYAbs: shiftYAbs\n        });\n        handle(e, [_onMove, gesture.current.isSlideX && onMoveX, gesture.current.isSlideY && onMoveY]);\n      }\n    }\n  }\n\n  function onEnd(e) {\n    var _gesture$current4;\n\n    var _ref3 = (_gesture$current4 = gesture.current) !== null && _gesture$current4 !== void 0 ? _gesture$current4 : {},\n        isPressed = _ref3.isPressed,\n        isSlide = _ref3.isSlide,\n        isSlideX = _ref3.isSlideX,\n        isSlideY = _ref3.isSlideY;\n\n    if (isPressed) {\n      handle(e, [_onEnd, isSlideY && onEndY, isSlideX && onEndX]);\n    }\n\n    didSlide.current = Boolean(isSlide);\n    gesture.current = {}; // Если это был тач-евент, симулируем отмену hover\n\n    if (touchEnabled()) {\n      onLeave && onLeave(e);\n    }\n\n    subscribe(null);\n  }\n\n  var listenerParams = {\n    capture: useCapture,\n    passive: false\n  };\n  var listeners = [useEventListener(events[1], onMove, listenerParams), useEventListener(events[2], onEnd, listenerParams), useEventListener(events[3], onEnd, listenerParams)];\n\n  function subscribe(el) {\n    if (el) {\n      listeners.forEach(function (l) {\n        return l.add(el);\n      });\n    }\n  }\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   */\n\n\n  var onDragStart = function onDragStart(e) {\n    var target = e.target;\n\n    if (target.tagName === \"A\" || target.tagName === \"IMG\") {\n      e.preventDefault();\n    }\n  };\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   */\n\n\n  var postGestureClick = function postGestureClick(e) {\n    if (!didSlide.current) {\n      return onClickCapture && onClickCapture(e);\n    } // eslint-disable-next-line no-restricted-properties\n\n\n    if (e.target.closest(\"a\")) {\n      e.preventDefault();\n    }\n\n    if (noSlideClick) {\n      e.stopPropagation();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n\n    didSlide.current = false;\n  };\n\n  return createScopedElement(Component, _extends({}, restProps, {\n    onDragStart: onDragStart,\n    onClickCapture: postGestureClick,\n    ref: containerRef\n  }));\n};\n\nfunction initGesture(startX, startY) {\n  return {\n    startX: startX,\n    startY: startY,\n    startT: new Date(),\n    duration: 0,\n    isPressed: true,\n    isY: false,\n    isX: false,\n    isSlideX: false,\n    isSlideY: false,\n    isSlide: false,\n    shiftX: 0,\n    shiftY: 0,\n    shiftXAbs: 0,\n    shiftYAbs: 0\n  };\n}","map":{"version":3,"mappings":"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","names":["React","getSupportedEvents","coordX","coordY","touchEnabled","useDOM","useExternRef","useEventListener","useIsomorphicLayoutEffect","Touch","onStart","onStartX","onStartY","_onMove","onMove","onMoveX","onMoveY","onLeave","onEnter","_onEnd","onEnd","onEndX","onEndY","onClickCapture","usePointerHover","slideThreshold","useCapture","Component","getRootRef","noSlideClick","stopPropagation","restProps","document","events","useMemo","didSlide","useRef","gesture","handle","e","handers","forEach","cb","duration","Date","now","current","_gesture$current","startT","_gesture$current$star2","getTime","originalEvent","enterHandler","leaveHandler","startHandler","initGesture","subscribe","target","capture","passive","containerRef","el","add","isPressed","isX","isY","startX","startY","shiftX","shiftY","shiftXAbs","Math","abs","shiftYAbs","touches","length","willBeX","willBeY","willBeSlidedX","willBeSlidedY","Object","assign","isSlideX","isSlideY","isSlide","_gesture$current3","Boolean","listenerParams","listeners","l","onDragStart","tagName","preventDefault","postGestureClick","closest","createScopedElement","ref"],"sources":["../../../src/components/Touch/Touch.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  getSupportedEvents,\n  coordX,\n  coordY,\n  touchEnabled,\n  VKUITouchEvent,\n} from \"../../lib/touch\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\n\nexport interface TouchProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  /**\n   * Привязать onEnter и onLeave через pointer-events - работает на disabled-инпутах\n   */\n  usePointerHover?: boolean;\n  useCapture?: boolean;\n  slideThreshold?: number;\n  noSlideClick?: boolean;\n  onEnter?: HoverHandler;\n  onLeave?: HoverHandler;\n  onStart?: TouchEventHandler;\n  onStartX?: TouchEventHandler;\n  onStartY?: TouchEventHandler;\n  onMove?: TouchEventHandler;\n  onMoveX?: TouchEventHandler;\n  onMoveY?: TouchEventHandler;\n  onEnd?: TouchEventHandler;\n  onEndX?: TouchEventHandler;\n  onEndY?: TouchEventHandler;\n  stopPropagation?: boolean;\n}\n\nexport interface Gesture {\n  startX: number;\n  startY: number;\n  startT: Date;\n  duration: number;\n  isPressed: boolean;\n  isY: boolean;\n  isX: boolean;\n  isSlideX: boolean;\n  isSlideY: boolean;\n  isSlide: boolean;\n  shiftX: number;\n  shiftY: number;\n  shiftXAbs: number;\n  shiftYAbs: number;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: VKUITouchEvent;\n}\n\ntype HoverHandler = (outputEvent: MouseEvent) => void;\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: React.MouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: React.DragEvent<HTMLElement>) => void;\n\nexport const Touch: React.FC<TouchProps> = ({\n  onStart,\n  onStartX,\n  onStartY,\n  onMove: _onMove,\n  onMoveX,\n  onMoveY,\n  onLeave,\n  onEnter,\n  onEnd: _onEnd,\n  onEndX,\n  onEndY,\n  onClickCapture,\n  usePointerHover,\n  slideThreshold = 5,\n  useCapture = false,\n  Component = \"div\",\n  getRootRef,\n  noSlideClick = false,\n  stopPropagation = false,\n  ...restProps\n}: TouchProps) => {\n  const { document } = useDOM();\n  const events = React.useMemo(getSupportedEvents, []);\n  const didSlide = React.useRef(false);\n  const gesture = React.useRef<Partial<Gesture> | null>(null);\n  const handle = (\n    e: VKUITouchEvent,\n    handers: Array<TouchEventHandler | undefined | false>\n  ) => {\n    stopPropagation && e.stopPropagation();\n    handers.forEach((cb) => {\n      const duration = Date.now() - (gesture.current?.startT?.getTime() ?? 0);\n      cb && cb({ ...(gesture.current as Gesture), duration, originalEvent: e });\n    });\n  };\n\n  const enterHandler = useEventListener(\n    usePointerHover ? \"pointerenter\" : \"mouseenter\",\n    onEnter\n  );\n  const leaveHandler = useEventListener(\n    usePointerHover ? \"pointerleave\" : \"mouseleave\",\n    onLeave\n  );\n  const startHandler = useEventListener(\n    events[0],\n    (e: VKUITouchEvent) => {\n      gesture.current = initGesture(coordX(e), coordY(e));\n\n      handle(e, [onStart, onStartX, onStartY]);\n      // 1 line, 2 bad specs, 2 workarounds:\n      subscribe(\n        touchEnabled()\n          ? // Touch events fire on initial target, and won't bubble if its removed\n            // see: #235, #1968, https://stackoverflow.com/a/45760014\n            (e.target as HTMLElement)\n          : // Mouse events fire on the element under pointer, so we lose move / end\n            // if pointer goes outside container.\n            // Can be fixed by PointerEvents' setPointerCapture later\n            document\n      );\n    },\n    { capture: useCapture, passive: false }\n  );\n  const containerRef = useExternRef(getRootRef);\n\n  useIsomorphicLayoutEffect(() => {\n    const el = containerRef.current;\n    if (el) {\n      enterHandler.add(el);\n      leaveHandler.add(el);\n      startHandler.add(el);\n    }\n  }, [Component]);\n\n  function onMove(e: VKUITouchEvent) {\n    const {\n      isPressed,\n      isX,\n      isY,\n      startX = 0,\n      startY = 0,\n    } = gesture.current ?? {};\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        const willBeX = shiftXAbs >= slideThreshold && shiftXAbs > shiftYAbs;\n        const willBeY = shiftYAbs >= slideThreshold && shiftYAbs > shiftXAbs;\n        const willBeSlidedX = willBeX && (!!onMoveX || !!_onMove);\n        const willBeSlidedY = willBeY && (!!onMoveY || !!_onMove);\n\n        Object.assign(gesture.current, {\n          isY: willBeY,\n          isX: willBeX,\n          isSlideX: willBeSlidedX,\n          isSlideY: willBeSlidedY,\n          isSlide: willBeSlidedX || willBeSlidedY,\n        });\n      }\n\n      if (gesture.current?.isSlide) {\n        Object.assign(gesture.current, {\n          shiftX,\n          shiftY,\n          shiftXAbs,\n          shiftYAbs,\n        });\n\n        handle(e, [\n          _onMove,\n          gesture.current.isSlideX && onMoveX,\n          gesture.current.isSlideY && onMoveY,\n        ]);\n      }\n    }\n  }\n\n  function onEnd(e: VKUITouchEvent) {\n    const { isPressed, isSlide, isSlideX, isSlideY } = gesture.current ?? {};\n\n    if (isPressed) {\n      handle(e, [_onEnd, isSlideY && onEndY, isSlideX && onEndX]);\n    }\n\n    didSlide.current = Boolean(isSlide);\n    gesture.current = {};\n\n    // Если это был тач-евент, симулируем отмену hover\n    if (touchEnabled()) {\n      onLeave && onLeave(e);\n    }\n    subscribe(null);\n  }\n\n  const listenerParams = { capture: useCapture, passive: false };\n  const listeners = [\n    useEventListener(events[1], onMove, listenerParams),\n    useEventListener(events[2], onEnd, listenerParams),\n    useEventListener(events[3], onEnd, listenerParams),\n  ];\n  function subscribe(el: HTMLElement | Document | null | undefined) {\n    if (el) {\n      listeners.forEach((l) => l.add(el));\n    }\n  }\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   */\n  const onDragStart = (e: React.DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === \"A\" || target.tagName === \"IMG\") {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   */\n  const postGestureClick: typeof onClickCapture = (e) => {\n    if (!didSlide.current) {\n      return onClickCapture && onClickCapture(e);\n    }\n    // eslint-disable-next-line no-restricted-properties\n    if ((e.target as HTMLElement).closest(\"a\")) {\n      e.preventDefault();\n    }\n    if (noSlideClick) {\n      e.stopPropagation();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n    didSlide.current = false;\n  };\n\n  return (\n    <Component\n      {...restProps}\n      onDragStart={onDragStart}\n      onClickCapture={postGestureClick}\n      ref={containerRef}\n    />\n  );\n};\n\nfunction initGesture(startX: number, startY: number): Gesture {\n  return {\n    startX,\n    startY,\n    startT: new Date(),\n    duration: 0,\n    isPressed: true,\n    isY: false,\n    isX: false,\n    isSlideX: false,\n    isSlideY: false,\n    isSlide: false,\n    shiftX: 0,\n    shiftY: 0,\n    shiftXAbs: 0,\n    shiftYAbs: 0,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}