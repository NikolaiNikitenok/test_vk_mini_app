{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"children\", \"gradientColor\", \"style\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport Avatar, { AVATAR_DEFAULT_SIZE } from \"../Avatar/Avatar\";\nvar COLORS_NUMBER_TO_TEXT_MAP = {\n  1: \"red\",\n  2: \"orange\",\n  3: \"yellow\",\n  4: \"green\",\n  5: \"l-blue\",\n  6: \"violet\"\n};\n\nfunction getInitialsFontSize(avatarSize) {\n  var calculatedFontSize = Math.ceil(avatarSize * 0.36);\n  var evenFix = calculatedFontSize % 2;\n  return calculatedFontSize + evenFix;\n}\n\nexport var InitialsAvatar = function InitialsAvatar(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? AVATAR_DEFAULT_SIZE : _ref$size,\n      children = _ref.children,\n      gradientColor = _ref.gradientColor,\n      style = _ref.style,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var gradientName = typeof gradientColor === \"string\" ? gradientColor : gradientColor && COLORS_NUMBER_TO_TEXT_MAP[gradientColor];\n  return createScopedElement(Avatar, _extends({}, restProps, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      fontSize: getInitialsFontSize(size)\n    }),\n    size: size,\n    vkuiClass: classNames(\"InitialsAvatar\", \"InitialsAvatar--color-\".concat(gradientName))\n  }), createScopedElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    vkuiClass: \"InitialsAvatar__text\"\n  }, children));\n};","map":{"version":3,"mappings":";;;;;AAEA,SAASA,UAAT;AACA,OAAOC,MAAP,IAAiBC,mBAAjB;AA2CA,IAAMC,yBAGL,GAAG;AACF,KAAG,KADD;AAEF,KAAG,QAFD;AAGF,KAAG,QAHD;AAIF,KAAG,OAJD;AAKF,KAAG,QALD;AAMF,KAAG;AAND,CAHJ;;AAYA,SAASC,mBAAT,CAA6BC,UAA7B,EAAiD;AAC/C,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,IAALD,CAAUF,UAAU,GAAG,IAAvBE,CAA3B;AACA,MAAME,OAAO,GAAGH,kBAAkB,GAAG,CAArC;AACA,SAAOA,kBAAkB,GAAGG,OAA5B;AACD;;AAED,OAAO,IAAMC,cAA6C,GAAG,SAAhDA,cAAgD,OAMlC;AAAA,uBALzBC,IAKyB;AAAA,MALzBA,IAKyB,0BALlBT,mBAKkB;AAAA,MAJzBU,QAIyB,QAJzBA,QAIyB;AAAA,MAHzBC,aAGyB,QAHzBA,aAGyB;AAAA,MAFzBC,KAEyB,QAFzBA,KAEyB;AAAA,MADtBC,SACsB;;AACzB,MAAMC,YAAY,GAChB,OAAOH,aAAP,KAAyB,QAAzB,GACIA,aADJ,GAEIA,aAAa,IAAIV,yBAAyB,CAACU,aAAD,CAHhD;AAKA,SACEI,oBAAChB,MAAD,eACMc,SADN;AAEED,SAAK,kCACAA,KADA;AAEHI,cAAQ,EAAEd,mBAAmB,CAACO,IAAD;AAF1B,MAFP;AAMEA,QAAI,EAAEA,IANR;AAOEQ,aAAS,EAAEnB,UAAU,CACnB,gBADmB,kCAEMgB,YAFN;AAPvB,MAYEC;AAAM,mBAAY,MAAlB;AAAyBE,aAAS,EAAC;AAAnC,KACGP,QADH,CAZF,CADF;AAZK","names":["classNames","Avatar","AVATAR_DEFAULT_SIZE","COLORS_NUMBER_TO_TEXT_MAP","getInitialsFontSize","avatarSize","calculatedFontSize","Math","ceil","evenFix","InitialsAvatar","size","children","gradientColor","style","restProps","gradientName","createScopedElement","fontSize","vkuiClass"],"sources":["../../../src/components/InitialsAvatar/InitialsAvatar.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport Avatar, { AVATAR_DEFAULT_SIZE, AvatarProps } from \"../Avatar/Avatar\";\nimport \"./InitialsAvatar.css\";\n\n/**\n * Градиенты, которые можно использовать в алгоритме поиска градиентов по числовому идентификатору пользователя.\n * @example user.id % 6 + 1\n */\nexport type InitialsAvatarNumberGradients = 1 | 2 | 3 | 4 | 5 | 6;\nexport type InitialsAvatarTextGradients =\n  | \"red\"\n  | \"pink\"\n  | \"orange\"\n  | \"yellow\"\n  | \"green\"\n  | \"l-blue\"\n  | \"blue\"\n  | \"violet\";\n\nexport interface InitialsAvatarProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    Pick<AvatarProps, \"size\" | \"shadow\" | \"badge\"> {\n  children?: React.ReactNode;\n  /**\n   * `'red' | 'pink' | 'orange' | 'yellow' | 'green' | 'l-blue' | 'blue' | 'violet'`\n   *\n   * Если передано число, то оно будет сконвертировано в строчное представление цвета по следующей схеме:\n   *\n   * 1: 'red'\n   *\n   * 2: 'orange'\n   *\n   * 3: 'yellow'\n   *\n   * 4: 'green'\n   *\n   * 5: 'l-blue'\n   *\n   * 6: 'violet'\n   */\n  gradientColor?: InitialsAvatarNumberGradients | InitialsAvatarTextGradients;\n}\n\nconst COLORS_NUMBER_TO_TEXT_MAP: Record<\n  InitialsAvatarNumberGradients,\n  InitialsAvatarTextGradients\n> = {\n  1: \"red\",\n  2: \"orange\",\n  3: \"yellow\",\n  4: \"green\",\n  5: \"l-blue\",\n  6: \"violet\",\n};\n\nfunction getInitialsFontSize(avatarSize: number) {\n  const calculatedFontSize = Math.ceil(avatarSize * 0.36);\n  const evenFix = calculatedFontSize % 2;\n  return calculatedFontSize + evenFix;\n}\n\nexport const InitialsAvatar: React.FC<InitialsAvatarProps> = ({\n  size = AVATAR_DEFAULT_SIZE,\n  children,\n  gradientColor,\n  style,\n  ...restProps\n}: InitialsAvatarProps) => {\n  const gradientName =\n    typeof gradientColor === \"string\"\n      ? gradientColor\n      : gradientColor && COLORS_NUMBER_TO_TEXT_MAP[gradientColor];\n\n  return (\n    <Avatar\n      {...restProps}\n      style={{\n        ...style,\n        fontSize: getInitialsFontSize(size),\n      }}\n      size={size}\n      vkuiClass={classNames(\n        \"InitialsAvatar\",\n        `InitialsAvatar--color-${gradientName}`\n      )}\n    >\n      <span aria-hidden=\"true\" vkuiClass=\"InitialsAvatar__text\">\n        {children}\n      </span>\n    </Avatar>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}