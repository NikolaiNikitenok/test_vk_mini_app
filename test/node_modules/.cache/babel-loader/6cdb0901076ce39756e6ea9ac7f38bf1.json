{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"getRootRef\", \"icon\", \"header\", \"subheader\", \"children\", \"actions\", \"actionsLayout\", \"viewWidth\", \"hasMouse\", \"viewHeight\", \"onClose\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Title from \"../Typography/Title/Title\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ViewHeight, ViewWidth, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { ANDROID, IOS } from \"../../lib/platform\";\nimport ModalDismissButton from \"../ModalDismissButton/ModalDismissButton\";\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\nimport { useKeyboard } from \"../../hooks/useKeyboard\";\nexport var ModalCardBase = withAdaptivity(function (_ref) {\n  var getRootRef = _ref.getRootRef,\n      icon = _ref.icon,\n      header = _ref.header,\n      subheader = _ref.subheader,\n      children = _ref.children,\n      actions = _ref.actions,\n      actionsLayout = _ref.actionsLayout,\n      viewWidth = _ref.viewWidth,\n      hasMouse = _ref.hasMouse,\n      viewHeight = _ref.viewHeight,\n      onClose = _ref.onClose,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var isDesktop = viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  var isSoftwareKeyboardOpened = useKeyboard().isOpened;\n  var canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n  var canShowCloseBtnIos = platform === IOS && !canShowCloseBtn;\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName(\"ModalCardBase\", platform), {\n      \"ModalCardBase--desktop\": isDesktop\n    }),\n    ref: getRootRef\n  }), createScopedElement(\"div\", {\n    vkuiClass: classNames(\"ModalCardBase__container\", {\n      \"ModalCardBase__container--softwareKeyboardOpened\": isSoftwareKeyboardOpened\n    })\n  }, hasReactNode(icon) && createScopedElement(\"div\", {\n    vkuiClass: \"ModalCardBase__icon\"\n  }, icon), hasReactNode(header) && createScopedElement(Title, {\n    level: \"2\",\n    weight: platform === ANDROID ? \"2\" : \"1\",\n    vkuiClass: \"ModalCardBase__header\"\n  }, header), hasReactNode(subheader) && createScopedElement(Headline, {\n    weight: \"regular\",\n    vkuiClass: \"ModalCardBase__subheader\"\n  }, subheader), children, hasReactNode(actions) && createScopedElement(\"div\", {\n    vkuiClass: classNames(\"ModalCardBase__actions\", {\n      \"ModalCardBase__actions--v\": actionsLayout === \"vertical\"\n    })\n  }, actions), canShowCloseBtn && createScopedElement(ModalDismissButton, {\n    onClick: onClose\n  }), canShowCloseBtnIos && createScopedElement(PanelHeaderButton, {\n    vkuiClass: \"ModalCard__dismiss\",\n    onClick: onClose\n  }, createScopedElement(Icon24Dismiss, null))));\n}, {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true\n});","map":{"version":3,"mappings":";;;;AACA,SAASA,YAAT;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,cAHF;AAMA,SAASC,iBAAT;AACA,SAASC,OAAT,EAAkBC,GAAlB;AACA,OAAOC,kBAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT;AAsCA,OAAO,IAAMC,aAAa,GAAGP,cAAc,CAGzC,gBAaM;AAAA,MAZJQ,UAYI,QAZJA,UAYI;AAAA,MAXJC,IAWI,QAXJA,IAWI;AAAA,MAVJC,MAUI,QAVJA,MAUI;AAAA,MATJC,SASI,QATJA,SASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,SACC;;AACJ,MAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,MAAMwB,SAAS,GACbN,SAAS,IAAIhB,SAAS,CAACuB,YAAvBP,KACCC,QAAQ,IAAIC,UAAU,IAAInB,UAAU,CAACyB,MADtCR,CADF;AAGA,MAAMS,wBAAwB,GAAGlB,WAAW,GAAGmB,QAA/C;AAEA,MAAMC,eAAe,GAAGX,SAAS,IAAIhB,SAAS,CAACuB,YAA/C;AACA,MAAMK,kBAAkB,GAAGP,QAAQ,KAAKjB,GAAbiB,IAAoB,CAACM,eAAhD;AAEA,SACEE,wCACMT,SADN;AAEEU,aAAS,EAAElC,UAAU,CAACC,YAAY,CAAC,eAAD,EAAkBwB,QAAlB,CAAb,EAA0C;AAC7D,gCAA0BC;AADmC,KAA1C,CAFvB;AAKES,OAAG,EAAEtB;AALP,MAOEoB;AACEC,aAAS,EAAElC,UAAU,CAAC,0BAAD,EAA6B;AAChD,0DACE6B;AAF8C,KAA7B;AADvB,KAMGhC,YAAY,CAACiB,IAAD,CAAZjB,IACCoC;AAAKC,aAAS,EAAC;AAAf,KAAsCpB,IAAtC,CAPJ,EASGjB,YAAY,CAACkB,MAAD,CAAZlB,IACCoC,oBAACnC,KAAD;AACEsC,SAAK,EAAC,GADR;AAEEC,UAAM,EAAEZ,QAAQ,KAAKlB,OAAbkB,GAAuB,GAAvBA,GAA6B,GAFvC;AAGES,aAAS,EAAC;AAHZ,KAKGnB,MALH,CAVJ,EAkBGlB,YAAY,CAACmB,SAAD,CAAZnB,IACCoC,oBAAClC,QAAD;AAAUsC,UAAM,EAAC,SAAjB;AAA2BH,aAAS,EAAC;AAArC,KACGlB,SADH,CAnBJ,EAwBGC,QAxBH,EA0BGpB,YAAY,CAACqB,OAAD,CAAZrB,IACCoC;AACEC,aAAS,EAAElC,UAAU,CAAC,wBAAD,EAA2B;AAC9C,mCAA6BmB,aAAa,KAAK;AADD,KAA3B;AADvB,KAKGD,OALH,CA3BJ,EAoCGa,eAAe,IAAIE,oBAACxB,kBAAD;AAAoB6B,WAAO,EAAEf;AAA7B,IApCtB,EAqCGS,kBAAkB,IACjBC,oBAAC3B,iBAAD;AAAmB4B,aAAS,EAAC,oBAA7B;AAAkDI,WAAO,EAAEf;AAA3D,KACEU,oBAACvB,aAAD,OADF,CAtCJ,CAPF,CADF;AA1BuC,GAgFzC;AACEU,WAAS,EAAE,IADb;AAEEE,YAAU,EAAE,IAFd;AAGED,UAAQ,EAAE;AAHZ,CAhFyC,CAApC","names":["hasReactNode","Title","Headline","classNames","getClassName","usePlatform","ViewHeight","ViewWidth","withAdaptivity","PanelHeaderButton","ANDROID","IOS","ModalDismissButton","Icon24Dismiss","useKeyboard","ModalCardBase","getRootRef","icon","header","subheader","children","actions","actionsLayout","viewWidth","hasMouse","viewHeight","onClose","restProps","platform","isDesktop","SMALL_TABLET","MEDIUM","isSoftwareKeyboardOpened","isOpened","canShowCloseBtn","canShowCloseBtnIos","createScopedElement","vkuiClass","ref","level","weight","onClick"],"sources":["../../../src/components/ModalCardBase/ModalCardBase.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Title from \"../Typography/Title/Title\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  ViewHeight,\n  ViewWidth,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { HasRootRef } from \"../../types\";\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { ANDROID, IOS } from \"../../lib/platform\";\nimport ModalDismissButton from \"../ModalDismissButton/ModalDismissButton\";\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\nimport { useKeyboard } from \"../../hooks/useKeyboard\";\nimport { AdaptivityContextInterface } from \"../AdaptivityProvider/AdaptivityContext\";\nimport \"./ModalCardBase.css\";\n\nexport interface ModalCardBaseProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {\n  /**\n   * Иконка.\n   *\n   * Может быть компонентом иконки, например, `<Icon56MoneyTransferOutline />`, или `<Avatar size={72} src=\"\" />`\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * Заголовок карточки\n   */\n  header?: React.ReactNode;\n\n  /**\n   * Подзаголовок\n   */\n  subheader?: React.ReactNode;\n\n  /**\n   * Кнопки-действия.\n   *\n   * Рекомендуется использовать `<Button size=\"l\" mode=\"primary\" />` или `<Button size=\"l\" mode=\"secondary\" />`\n   */\n  actions?: React.ReactNode;\n\n  /**\n   * Тип отображения кнопок: вертикальный или горизонтальный\n   */\n  actionsLayout?: \"vertical\" | \"horizontal\";\n  onClose?: VoidFunction;\n}\n\nexport const ModalCardBase = withAdaptivity<\n  ModalCardBaseProps & AdaptivityContextInterface\n>(\n  ({\n    getRootRef,\n    icon,\n    header,\n    subheader,\n    children,\n    actions,\n    actionsLayout,\n    viewWidth,\n    hasMouse,\n    viewHeight,\n    onClose,\n    ...restProps\n  }) => {\n    const platform = usePlatform();\n    const isDesktop =\n      viewWidth >= ViewWidth.SMALL_TABLET &&\n      (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n    const isSoftwareKeyboardOpened = useKeyboard().isOpened;\n\n    const canShowCloseBtn = viewWidth >= ViewWidth.SMALL_TABLET;\n    const canShowCloseBtnIos = platform === IOS && !canShowCloseBtn;\n\n    return (\n      <div\n        {...restProps}\n        vkuiClass={classNames(getClassName(\"ModalCardBase\", platform), {\n          \"ModalCardBase--desktop\": isDesktop,\n        })}\n        ref={getRootRef}\n      >\n        <div\n          vkuiClass={classNames(\"ModalCardBase__container\", {\n            \"ModalCardBase__container--softwareKeyboardOpened\":\n              isSoftwareKeyboardOpened,\n          })}\n        >\n          {hasReactNode(icon) && (\n            <div vkuiClass=\"ModalCardBase__icon\">{icon}</div>\n          )}\n          {hasReactNode(header) && (\n            <Title\n              level=\"2\"\n              weight={platform === ANDROID ? \"2\" : \"1\"}\n              vkuiClass=\"ModalCardBase__header\"\n            >\n              {header}\n            </Title>\n          )}\n          {hasReactNode(subheader) && (\n            <Headline weight=\"regular\" vkuiClass=\"ModalCardBase__subheader\">\n              {subheader}\n            </Headline>\n          )}\n\n          {children}\n\n          {hasReactNode(actions) && (\n            <div\n              vkuiClass={classNames(\"ModalCardBase__actions\", {\n                \"ModalCardBase__actions--v\": actionsLayout === \"vertical\",\n              })}\n            >\n              {actions}\n            </div>\n          )}\n\n          {canShowCloseBtn && <ModalDismissButton onClick={onClose} />}\n          {canShowCloseBtnIos && (\n            <PanelHeaderButton vkuiClass=\"ModalCard__dismiss\" onClick={onClose}>\n              <Icon24Dismiss />\n            </PanelHeaderButton>\n          )}\n        </div>\n      </div>\n    );\n  },\n  {\n    viewWidth: true,\n    viewHeight: true,\n    hasMouse: true,\n  }\n);\n"]},"metadata":{},"sourceType":"module"}