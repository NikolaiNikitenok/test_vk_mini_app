{"ast":null,"code":"// Cipher Feedback\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _CFB_instances, _CFB_iv, _CFB_shiftRegister, _CFB_shift;\n\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CFB extends ModeOfOperation {\n  constructor(key, iv) {\n    let segmentSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    super(\"CFB\", key, CFB);\n\n    _CFB_instances.add(this);\n\n    _CFB_iv.set(this, void 0);\n\n    _CFB_shiftRegister.set(this, void 0); // This library currently only handles byte-aligned segmentSize\n\n\n    if (!Number.isInteger(segmentSize) || segmentSize % 8) {\n      throw new TypeError(\"invalid segmentSize\");\n    }\n\n    Object.defineProperties(this, {\n      segmentSize: {\n        enumerable: true,\n        value: segmentSize\n      }\n    });\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n\n      __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(iv), \"f\");\n    } else {\n      __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(16), \"f\");\n    }\n\n    __classPrivateFieldSet(this, _CFB_shiftRegister, this.iv, \"f\");\n  }\n\n  get iv() {\n    return new Uint8Array(__classPrivateFieldGet(this, _CFB_iv, \"f\"));\n  }\n\n  encrypt(plaintext) {\n    if (8 * plaintext.length % this.segmentSize) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n    const ciphertext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < ciphertext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n\n      for (let j = 0; j < segmentSize; j++) {\n        ciphertext[i + j] ^= xorSegment[j];\n      }\n\n      __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext) {\n    if (8 * ciphertext.length % this.segmentSize) {\n      throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n    const plaintext = new Uint8Array(ciphertext);\n\n    for (let i = 0; i < plaintext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n\n      for (let j = 0; j < segmentSize; j++) {\n        plaintext[i + j] ^= xorSegment[j];\n      }\n\n      __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n    }\n\n    return plaintext;\n  }\n\n}\n_CFB_iv = new WeakMap(), _CFB_shiftRegister = new WeakMap(), _CFB_instances = new WeakSet(), _CFB_shift = function _CFB_shift(data) {\n  const segmentSize = this.segmentSize / 8; // Shift the register\n\n  __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").subarray(segmentSize));\n\n  __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(data.subarray(0, segmentSize), 16 - segmentSize);\n};","map":{"version":3,"mappings":"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","names":["ModeOfOperation","CFB","constructor","key","iv","segmentSize","_CFB_iv","_CFB_shiftRegister","Number","isInteger","TypeError","Object","defineProperties","enumerable","value","length","__classPrivateFieldSet","Uint8Array","__classPrivateFieldGet","encrypt","plaintext","ciphertext","i","xorSegment","aes","j","_CFB_instances","_CFB_shift","call","subarray","decrypt","data","set"],"sourceRoot":"","sources":["../src.ts/mode-cfb.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}