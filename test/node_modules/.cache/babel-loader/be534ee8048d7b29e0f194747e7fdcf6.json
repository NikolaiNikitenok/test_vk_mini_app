{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"viewDate\", \"value\", \"weekStartsOn\", \"onDayChange\", \"isDaySelected\", \"isDayActive\", \"isDaySelectionEnd\", \"isDaySelectionStart\", \"onDayEnter\", \"onDayLeave\", \"isDayHinted\", \"isHintedDaySelectionStart\", \"isHintedDaySelectionEnd\", \"isDayFocused\", \"isDayDisabled\", \"size\", \"showNeighboringMonth\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { isSameDay, isSameMonth } from \"date-fns\";\nimport { CalendarDay } from \"../CalendarDay/CalendarDay\";\nimport { getDaysNames, getWeeks } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nexport var CalendarDays = function CalendarDays(_ref) {\n  var viewDate = _ref.viewDate,\n      value = _ref.value,\n      weekStartsOn = _ref.weekStartsOn,\n      onDayChange = _ref.onDayChange,\n      isDaySelected = _ref.isDaySelected,\n      isDayActive = _ref.isDayActive,\n      isDaySelectionEnd = _ref.isDaySelectionEnd,\n      isDaySelectionStart = _ref.isDaySelectionStart,\n      onDayEnter = _ref.onDayEnter,\n      onDayLeave = _ref.onDayLeave,\n      isDayHinted = _ref.isDayHinted,\n      isHintedDaySelectionStart = _ref.isHintedDaySelectionStart,\n      isHintedDaySelectionEnd = _ref.isHintedDaySelectionEnd,\n      isDayFocused = _ref.isDayFocused,\n      isDayDisabled = _ref.isDayDisabled,\n      size = _ref.size,\n      _ref$showNeighboringM = _ref.showNeighboringMonth,\n      showNeighboringMonth = _ref$showNeighboringM === void 0 ? false : _ref$showNeighboringM,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var locale = React.useContext(LocaleProviderContext);\n  var ref = React.useRef(null);\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      now = _React$useState2[0];\n\n  var weeks = React.useMemo(function () {\n    return getWeeks(viewDate, weekStartsOn);\n  }, [weekStartsOn, viewDate]);\n  var daysNames = React.useMemo(function () {\n    return getDaysNames(now, weekStartsOn, locale);\n  }, [locale, now, weekStartsOn]);\n  var handleDayChange = React.useCallback(function (date) {\n    var _ref$current;\n\n    onDayChange(date);\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();\n  }, [onDayChange]);\n  return createScopedElement(\"div\", _extends({}, props, {\n    vkuiClass: \"CalendarDays\",\n    ref: ref\n  }), createScopedElement(\"div\", {\n    vkuiClass: classNames(\"CalendarDays__row\", \"CalendarDays__row--size-\".concat(size))\n  }, daysNames.map(function (dayName) {\n    return createScopedElement(Caption, {\n      level: \"1\",\n      weight: \"regular\",\n      vkuiClass: \"CalendarDays__weekday\",\n      key: dayName\n    }, dayName);\n  })), weeks.map(function (week, i) {\n    return createScopedElement(\"div\", {\n      vkuiClass: classNames(\"CalendarDays__row\", \"CalendarDays__row--size-\".concat(size)),\n      key: i\n    }, week.map(function (day, i) {\n      var sameMonth = isSameMonth(day, viewDate);\n      return createScopedElement(CalendarDay, {\n        key: day.toISOString(),\n        day: day,\n        today: isSameDay(day, now),\n        active: isDayActive(day),\n        onChange: handleDayChange,\n        hidden: !showNeighboringMonth && !sameMonth,\n        disabled: isDayDisabled(day),\n        selectionStart: isDaySelectionStart(day, i),\n        selectionEnd: isDaySelectionEnd(day, i),\n        hintedSelectionStart: isHintedDaySelectionStart === null || isHintedDaySelectionStart === void 0 ? void 0 : isHintedDaySelectionStart(day, i),\n        hintedSelectionEnd: isHintedDaySelectionEnd === null || isHintedDaySelectionEnd === void 0 ? void 0 : isHintedDaySelectionEnd(day, i),\n        selected: isDaySelected === null || isDaySelected === void 0 ? void 0 : isDaySelected(day),\n        focused: isDayFocused(day),\n        onEnter: onDayEnter,\n        onLeave: onDayLeave,\n        hinted: isDayHinted === null || isDayHinted === void 0 ? void 0 : isDayHinted(day),\n        sameMonth: sameMonth,\n        size: size\n      });\n    }));\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","isSameDay","isSameMonth","CalendarDay","getDaysNames","getWeeks","LocaleProviderContext","classNames","Caption","CalendarDays","viewDate","value","weekStartsOn","onDayChange","isDaySelected","isDayActive","isDaySelectionEnd","isDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","isHintedDaySelectionStart","isHintedDaySelectionEnd","isDayFocused","isDayDisabled","size","showNeighboringMonth","props","locale","useContext","ref","useRef","useState","Date","now","weeks","useMemo","daysNames","handleDayChange","useCallback","date","current","focus","createScopedElement","vkuiClass","map","dayName","level","weight","key","week","i","day","sameMonth","toISOString","today","active","onChange","hidden","disabled","selectionStart","selectionEnd","hintedSelectionStart","hintedSelectionEnd","selected","focused","onEnter","onLeave","hinted"],"sources":["../../../src/components/CalendarDays/CalendarDays.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { isSameDay, isSameMonth } from \"date-fns\";\nimport { CalendarDay } from \"../CalendarDay/CalendarDay\";\nimport { getDaysNames, getWeeks } from \"../../lib/calendar\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport \"./CalendarDays.css\";\n\nexport interface CalendarDaysProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  value?: Date | Array<Date | null>;\n  viewDate: Date;\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: \"s\" | \"m\";\n  onDayChange(value: Date): void;\n  isDayDisabled(value: Date): boolean;\n  isDaySelectionStart(value: Date, dayOfWeek: number): boolean;\n  isDaySelectionEnd(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionStart?(value: Date, dayOfWeek: number): boolean;\n  isHintedDaySelectionEnd?(value: Date, dayOfWeek: number): boolean;\n  isDayActive(value: Date): boolean;\n  isDayHinted?(value: Date): boolean;\n  isDaySelected?(value: Date): boolean;\n  isDayFocused(value: Date): boolean;\n  onDayEnter?(value: Date): void;\n  onDayLeave?(value: Date): void;\n}\n\nexport const CalendarDays: React.FC<CalendarDaysProps> = ({\n  viewDate,\n  value,\n  weekStartsOn,\n  onDayChange,\n  isDaySelected,\n  isDayActive,\n  isDaySelectionEnd,\n  isDaySelectionStart,\n  onDayEnter,\n  onDayLeave,\n  isDayHinted,\n  isHintedDaySelectionStart,\n  isHintedDaySelectionEnd,\n  isDayFocused,\n  isDayDisabled,\n  size,\n  showNeighboringMonth = false,\n  ...props\n}) => {\n  const locale = React.useContext(LocaleProviderContext);\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [now] = React.useState(new Date());\n\n  const weeks = React.useMemo(\n    () => getWeeks(viewDate, weekStartsOn),\n    [weekStartsOn, viewDate]\n  );\n\n  const daysNames = React.useMemo(\n    () => getDaysNames(now, weekStartsOn, locale),\n    [locale, now, weekStartsOn]\n  );\n\n  const handleDayChange = React.useCallback(\n    (date: Date) => {\n      onDayChange(date);\n\n      ref.current?.focus();\n    },\n    [onDayChange]\n  );\n\n  return (\n    <div {...props} vkuiClass=\"CalendarDays\" ref={ref}>\n      <div\n        vkuiClass={classNames(\n          \"CalendarDays__row\",\n          `CalendarDays__row--size-${size}`\n        )}\n      >\n        {daysNames.map((dayName) => (\n          <Caption\n            level=\"1\"\n            weight=\"regular\"\n            vkuiClass=\"CalendarDays__weekday\"\n            key={dayName}\n          >\n            {dayName}\n          </Caption>\n        ))}\n      </div>\n\n      {weeks.map((week, i) => (\n        <div\n          vkuiClass={classNames(\n            \"CalendarDays__row\",\n            `CalendarDays__row--size-${size}`\n          )}\n          key={i}\n        >\n          {week.map((day, i) => {\n            const sameMonth = isSameMonth(day, viewDate);\n            return (\n              <CalendarDay\n                key={day.toISOString()}\n                day={day}\n                today={isSameDay(day, now)}\n                active={isDayActive(day)}\n                onChange={handleDayChange}\n                hidden={!showNeighboringMonth && !sameMonth}\n                disabled={isDayDisabled(day)}\n                selectionStart={isDaySelectionStart(day, i)}\n                selectionEnd={isDaySelectionEnd(day, i)}\n                hintedSelectionStart={isHintedDaySelectionStart?.(day, i)}\n                hintedSelectionEnd={isHintedDaySelectionEnd?.(day, i)}\n                selected={isDaySelected?.(day)}\n                focused={isDayFocused(day)}\n                onEnter={onDayEnter}\n                onLeave={onDayLeave}\n                hinted={isDayHinted?.(day)}\n                sameMonth={sameMonth}\n                size={size}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}