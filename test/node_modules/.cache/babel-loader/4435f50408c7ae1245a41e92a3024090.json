{"ast":null,"code":"import { leadingZero } from './numbers';\n/**\n * @param durationInSeconds\n * @param forceHours\n */\n\nexport function formatDuration(durationInSeconds, forceHours) {\n  if (!durationInSeconds) {\n    durationInSeconds = 0;\n  }\n\n  durationInSeconds = Math.abs(durationInSeconds);\n  var MINUTE = 60;\n  var HOUR = 3600;\n  var hours = Math.floor(durationInSeconds / HOUR);\n  var minutes = Math.floor(durationInSeconds / MINUTE) % MINUTE;\n  var seconds = durationInSeconds % MINUTE;\n\n  if (durationInSeconds >= HOUR || forceHours) {\n    return [hours, leadingZero(minutes), leadingZero(seconds)].join(':');\n  } else {\n    return [minutes, leadingZero(seconds)].join(':');\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,WAA5B;AAEA;;;;;AAIA,OAAO,SAASC,cAAT,CAAwBC,iBAAxB,EAAmDC,UAAnD,EAAiF;AACtF,MAAI,CAACD,iBAAL,EAAwB;AACtBA,qBAAiB,GAAG,CAApBA;AACD;;AAEDA,mBAAiB,GAAGE,IAAI,CAACC,GAALD,CAASF,iBAATE,CAApBF;AAEA,MAAMI,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAG,IAAb;AAEA,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAALL,CAAWF,iBAAiB,GAAGK,IAA/BH,CAAd;AACA,MAAMM,OAAO,GAAGN,IAAI,CAACK,KAALL,CAAWF,iBAAiB,GAAGI,MAA/BF,IAAyCE,MAAzD;AACA,MAAMK,OAAO,GAAGT,iBAAiB,GAAGI,MAApC;;AAEA,MAAIJ,iBAAiB,IAAIK,IAArBL,IAA6BC,UAAjC,EAA6C;AAC3C,WAAO,CAACK,KAAD,EAAQR,WAAW,CAACU,OAAD,CAAnB,EAA8BV,WAAW,CAACW,OAAD,CAAzC,EAAoDC,IAApD,CAAyD,GAAzD,CAAP;AADF,SAEO;AACL,WAAO,CAACF,OAAD,EAAUV,WAAW,CAACW,OAAD,CAArB,EAAgCC,IAAhC,CAAqC,GAArC,CAAP;AACD;AACF","names":["leadingZero","formatDuration","durationInSeconds","forceHours","Math","abs","MINUTE","HOUR","hours","floor","minutes","seconds","join"],"sources":["../../src/duration.ts"],"sourcesContent":["import { leadingZero } from './numbers';\n\n/**\n * @param durationInSeconds\n * @param forceHours\n */\nexport function formatDuration(durationInSeconds: number, forceHours?: boolean): string {\n  if (!durationInSeconds) {\n    durationInSeconds = 0;\n  }\n\n  durationInSeconds = Math.abs(durationInSeconds);\n\n  const MINUTE = 60;\n  const HOUR = 3600;\n\n  const hours = Math.floor(durationInSeconds / HOUR);\n  const minutes = Math.floor(durationInSeconds / MINUTE) % MINUTE;\n  const seconds = durationInSeconds % MINUTE;\n\n  if (durationInSeconds >= HOUR || forceHours) {\n    return [hours, leadingZero(minutes), leadingZero(seconds)].join(':');\n  } else {\n    return [minutes, leadingZero(seconds)].join(':');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}