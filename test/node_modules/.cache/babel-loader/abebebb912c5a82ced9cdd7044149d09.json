{"ast":null,"code":"\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0; // The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\n\nconst crypto_1 = require(\"@noble/hashes/crypto\"); // Cast array to different type\n\n\nconst u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n\nexports.u8 = u8;\n\nconst u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\nexports.u32 = u32; // Cast array to view\n\nconst createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\nexports.createView = createView; // The rotate right (circular right shift) operation for uint32\n\nconst rotr = (word, shift) => word << 32 - shift | word >>> shift;\n\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\n\nif (!exports.isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\r\n */\n\nfunction bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n\n  return hex;\n}\n\nexports.bytesToHex = bytesToHex;\n/**\r\n * @example hexToBytes('deadbeef')\r\n */\n\nfunction hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n\n  return array;\n}\n\nexports.hexToBytes = hexToBytes; // There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\n\nconst nextTick = async () => {};\n\nexports.nextTick = nextTick; // Returns control to thread each 'tick' ms to avoid blocking\n\nasync function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n\n  for (let i = 0; i < iters; i++) {\n    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await (0, exports.nextTick)();\n    ts += diff;\n  }\n}\n\nexports.asyncLoop = asyncLoop;\n\nfunction utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n\n  return new TextEncoder().encode(str);\n}\n\nexports.utf8ToBytes = utf8ToBytes;\n\nfunction toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\nexports.toBytes = toBytes;\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\n\nfunction concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n\n  return result;\n}\n\nexports.concatBytes = concatBytes; // For runtime check if class implements interface\n\nclass Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n\n}\n\nexports.Hash = Hash; // Check if object doens't have custom constructor (like Uint8Array/Array)\n\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\nfunction checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\n\nexports.checkOpts = checkOpts;\n\nfunction wrapConstructor(hashConstructor) {\n  const hashC = message => hashConstructor().update(toBytes(message)).digest();\n\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n\n  hashC.create = () => hashConstructor();\n\n  return hashC;\n}\n\nexports.wrapConstructor = wrapConstructor;\n\nfunction wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n\n  hashC.create = opts => hashCons(opts);\n\n  return hashC;\n}\n\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\r\n * Secure PRNG\r\n */\n\nfunction randomBytes() {\n  let bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n\n  if (crypto_1.crypto.web) {\n    return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto_1.crypto.node) {\n    return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n\nexports.randomBytes = randomBytes;","map":{"version":3,"sources":["C:/Users/k8909/OneDrive/Документы/GitHub/test_vk_mini_app/test/node_modules/@noble/hashes/utils.js"],"names":["Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","require","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","arrays","every","a","reduce","result","pad","set","clone","_cloneInto","isPlainObject","obj","prototype","call","constructor","defaults","opts","undefined","merged","assign","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","hashCons","msg","bytesLength","crypto","web","getRandomValues","node"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\r\n// The import here is via the package name. This is to ensure\r\n// that exports mapping/resolution does fall into place.\r\nconst crypto_1 = require(\"@noble/hashes/crypto\");\r\n// Cast array to different type\r\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\r\nexports.u8 = u8;\r\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\r\nexports.u32 = u32;\r\n// Cast array to view\r\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\r\nexports.createView = createView;\r\n// The rotate right (circular right shift) operation for uint32\r\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\r\nexports.rotr = rotr;\r\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\r\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\r\n// So, just to be sure not to corrupt anything.\r\nif (!exports.isLE)\r\n    throw new Error('Non little-endian hardware is not supported');\r\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\r\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\r\n */\r\nfunction bytesToHex(uint8a) {\r\n    // pre-caching improves the speed 6x\r\n    if (!(uint8a instanceof Uint8Array))\r\n        throw new Error('Uint8Array expected');\r\n    let hex = '';\r\n    for (let i = 0; i < uint8a.length; i++) {\r\n        hex += hexes[uint8a[i]];\r\n    }\r\n    return hex;\r\n}\r\nexports.bytesToHex = bytesToHex;\r\n/**\r\n * @example hexToBytes('deadbeef')\r\n */\r\nfunction hexToBytes(hex) {\r\n    if (typeof hex !== 'string') {\r\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\r\n    }\r\n    if (hex.length % 2)\r\n        throw new Error('hexToBytes: received invalid unpadded hex');\r\n    const array = new Uint8Array(hex.length / 2);\r\n    for (let i = 0; i < array.length; i++) {\r\n        const j = i * 2;\r\n        const hexByte = hex.slice(j, j + 2);\r\n        const byte = Number.parseInt(hexByte, 16);\r\n        if (Number.isNaN(byte) || byte < 0)\r\n            throw new Error('Invalid byte sequence');\r\n        array[i] = byte;\r\n    }\r\n    return array;\r\n}\r\nexports.hexToBytes = hexToBytes;\r\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\r\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\r\nconst nextTick = async () => { };\r\nexports.nextTick = nextTick;\r\n// Returns control to thread each 'tick' ms to avoid blocking\r\nasync function asyncLoop(iters, tick, cb) {\r\n    let ts = Date.now();\r\n    for (let i = 0; i < iters; i++) {\r\n        cb(i);\r\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\r\n        const diff = Date.now() - ts;\r\n        if (diff >= 0 && diff < tick)\r\n            continue;\r\n        await (0, exports.nextTick)();\r\n        ts += diff;\r\n    }\r\n}\r\nexports.asyncLoop = asyncLoop;\r\nfunction utf8ToBytes(str) {\r\n    if (typeof str !== 'string') {\r\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\r\n    }\r\n    return new TextEncoder().encode(str);\r\n}\r\nexports.utf8ToBytes = utf8ToBytes;\r\nfunction toBytes(data) {\r\n    if (typeof data === 'string')\r\n        data = utf8ToBytes(data);\r\n    if (!(data instanceof Uint8Array))\r\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\r\n    return data;\r\n}\r\nexports.toBytes = toBytes;\r\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\r\nfunction concatBytes(...arrays) {\r\n    if (!arrays.every((a) => a instanceof Uint8Array))\r\n        throw new Error('Uint8Array list expected');\r\n    if (arrays.length === 1)\r\n        return arrays[0];\r\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\r\n    const result = new Uint8Array(length);\r\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\r\n        const arr = arrays[i];\r\n        result.set(arr, pad);\r\n        pad += arr.length;\r\n    }\r\n    return result;\r\n}\r\nexports.concatBytes = concatBytes;\r\n// For runtime check if class implements interface\r\nclass Hash {\r\n    // Safe version that clones internal state\r\n    clone() {\r\n        return this._cloneInto();\r\n    }\r\n}\r\nexports.Hash = Hash;\r\n// Check if object doens't have custom constructor (like Uint8Array/Array)\r\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\r\nfunction checkOpts(defaults, opts) {\r\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\r\n        throw new TypeError('Options should be object or undefined');\r\n    const merged = Object.assign(defaults, opts);\r\n    return merged;\r\n}\r\nexports.checkOpts = checkOpts;\r\nfunction wrapConstructor(hashConstructor) {\r\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\r\n    const tmp = hashConstructor();\r\n    hashC.outputLen = tmp.outputLen;\r\n    hashC.blockLen = tmp.blockLen;\r\n    hashC.create = () => hashConstructor();\r\n    return hashC;\r\n}\r\nexports.wrapConstructor = wrapConstructor;\r\nfunction wrapConstructorWithOpts(hashCons) {\r\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\r\n    const tmp = hashCons({});\r\n    hashC.outputLen = tmp.outputLen;\r\n    hashC.blockLen = tmp.blockLen;\r\n    hashC.create = (opts) => hashCons(opts);\r\n    return hashC;\r\n}\r\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\r\n/**\r\n * Secure PRNG\r\n */\r\nfunction randomBytes(bytesLength = 32) {\r\n    if (crypto_1.crypto.web) {\r\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\r\n    }\r\n    else if (crypto_1.crypto.node) {\r\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\r\n    }\r\n    else {\r\n        throw new Error(\"The environment doesn't have randomBytes function\");\r\n    }\r\n}\r\nexports.randomBytes = randomBytes;\r\n"]},"metadata":{},"sourceType":"script"}