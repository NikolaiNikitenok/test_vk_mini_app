{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onChange\", \"defaultValue\", \"min\", \"max\", \"step\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { UniversalSlider } from \"./UniversalSlider\";\n\nvar RangeSlider = function RangeSlider(_ref) {\n  var onChange = _ref.onChange,\n      defaultValue = _ref.defaultValue,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 0 : _ref$step,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var isControlled = Boolean(props.value);\n\n  var _React$useState = React.useState(defaultValue || [min, max]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      localValue = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _ref2 = props.value || localValue,\n      _ref3 = _slicedToArray(_ref2, 2),\n      start = _ref3[0],\n      end = _ref3[1];\n\n  var value = React.useMemo(function () {\n    return [clamp(start, min, max), clamp(end, min, max)];\n  }, [end, max, min, start]);\n  var handleChange = React.useCallback(function (nextValue, event) {\n    if (props.disabled || value[0] === nextValue[0] && value[1] === nextValue[1]) {\n      return;\n    }\n\n    !isControlled && setValue(nextValue);\n    onChange && onChange(nextValue, event);\n  }, [props.disabled, value, isControlled, onChange]);\n  return createScopedElement(UniversalSlider, _extends({}, props, {\n    value: value,\n    onChange: handleChange,\n    min: min,\n    max: max,\n    step: step\n  }));\n}; // eslint-disable-next-line import/no-default-export\n\n\nexport default RangeSlider;","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AACA,SAASC,eAAT;;AAKA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAOxB;AAAA,MANtBC,QAMsB,QANtBA,QAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,sBAJtBC,GAIsB;AAAA,MAJtBA,GAIsB,yBAJhB,CAIgB;AAAA,sBAHtBC,GAGsB;AAAA,MAHtBA,GAGsB,yBAHhB,GAGgB;AAAA,uBAFtBC,IAEsB;AAAA,MAFtBA,IAEsB,0BAFf,CAEe;AAAA,MADnBC,KACmB;;AACtB,MAAMC,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACG,KAAP,CAA5B;;AAEA,wBAA+BZ,KAAK,CAACa,QAANb,CAC7BK,YAAY,IAAK,CAACC,GAAD,EAAMC,GAAN,CADYP,CAA/B;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,QAAnB;;AAGA,cAAqBN,KAAK,CAACG,KAANH,IAAeK,UAApC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,GAAd;;AACA,MAAML,KAAK,GAAGZ,KAAK,CAACkB,OAANlB,CACZ;AAAA,WAAM,CAACC,KAAK,CAACe,KAAD,EAAQV,GAAR,EAAaC,GAAb,CAAN,EAAyBN,KAAK,CAACgB,GAAD,EAAMX,GAAN,EAAWC,GAAX,CAA9B,CAAN;AADY,KAEZ,CAACU,GAAD,EAAMV,GAAN,EAAWD,GAAX,EAAgBU,KAAhB,CAFYhB,CAAd;AAKA,MAAMmB,YAA0C,GAAGnB,KAAK,CAACoB,WAANpB,CACjD,UAACqB,SAAD,EAAYC,KAAZ,EAAsB;AACpB,QACEb,KAAK,CAACc,QAANd,IACCG,KAAK,CAAC,CAAD,CAALA,KAAaS,SAAS,CAAC,CAAD,CAAtBT,IAA6BA,KAAK,CAAC,CAAD,CAALA,KAAaS,SAAS,CAAC,CAAD,CAFtD,EAGE;AACA;AACD;;AACD,KAACX,YAAD,IAAiBK,QAAQ,CAACM,SAAD,CAAzB;AACAjB,YAAQ,IAAIA,QAAQ,CAACiB,SAAD,EAAYC,KAAZ,CAApBlB;AAT+C,KAWjD,CAACK,KAAK,CAACc,QAAP,EAAiBX,KAAjB,EAAwBF,YAAxB,EAAsCN,QAAtC,CAXiDJ,CAAnD;AAcA,SACEwB,oBAACtB,eAAD,eACMO,KADN;AAEEG,SAAK,EAAEA,KAFT;AAGER,YAAQ,EAAEe,YAHZ;AAIEb,OAAG,EAAEA,GAJP;AAKEC,OAAG,EAAEA,GALP;AAMEC,QAAI,EAAEA;AANR,KADF;AAjCF,E,CA6CA;;;AACA,eAAeL,WAAf","names":["React","clamp","UniversalSlider","RangeSlider","onChange","defaultValue","min","max","step","props","isControlled","Boolean","value","useState","localValue","setValue","start","end","useMemo","handleChange","useCallback","nextValue","event","disabled","createScopedElement"],"sources":["../../../src/components/RangeSlider/RangeSlider.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { UniversalSlider, UniversalSliderProps } from \"./UniversalSlider\";\n\nexport type Value = [number, number];\nexport type RangeSliderProps = UniversalSliderProps<Value>;\n\nconst RangeSlider: React.FC<RangeSliderProps> = ({\n  onChange,\n  defaultValue,\n  min = 0,\n  max = 100,\n  step = 0,\n  ...props\n}: RangeSliderProps) => {\n  const isControlled = Boolean(props.value);\n\n  const [localValue, setValue] = React.useState(\n    defaultValue || ([min, max] as Value)\n  );\n  const [start, end] = props.value || localValue;\n  const value = React.useMemo(\n    () => [clamp(start, min, max), clamp(end, min, max)] as Value,\n    [end, max, min, start]\n  );\n\n  const handleChange: RangeSliderProps[\"onChange\"] = React.useCallback(\n    (nextValue, event) => {\n      if (\n        props.disabled ||\n        (value[0] === nextValue[0] && value[1] === nextValue[1])\n      ) {\n        return;\n      }\n      !isControlled && setValue(nextValue);\n      onChange && onChange(nextValue, event);\n    },\n    [props.disabled, value, isControlled, onChange]\n  );\n\n  return (\n    <UniversalSlider\n      {...props}\n      value={value}\n      onChange={handleChange}\n      min={min}\n      max={max}\n      step={step}\n    />\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default RangeSlider;\n"]},"metadata":{},"sourceType":"module"}