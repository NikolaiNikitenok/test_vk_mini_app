"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _browserSymbol = _interopRequireDefault(require("svg-baker-runtime/browser-symbol"));

var _es6ObjectAssign = require("es6-object-assign");

var _sprite = require("../sprite");

var _SvgIcon = require("../SvgIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore
var viewBox = '0 0 28 28';
var id = 'attach_circle_fill_blue_28';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="attach_circle_fill_blue_28"><linearGradient id="attach_circle_fill_blue_28_a" gradientUnits="userSpaceOnUse" x1="-14" x2="14" y1="14" y2="42"><stop offset="0" stop-color="#70b2ff" /><stop offset="1" stop-color="#5c9ce6" /></linearGradient><path d="M0 14C0 6.268 6.268 0 14 0s14 6.268 14 14-6.268 14-14 14S0 21.732 0 14z" fill="url(#attach_circle_fill_blue_28_a)" /><path clip-rule="evenodd" d="M14.568 7.093a3.795 3.795 0 015.329 0 3.702 3.702 0 010 5.273l-6.018 5.953a2.29 2.29 0 01-3.21 0 2.226 2.226 0 010-3.17l2.998-2.96a.767.767 0 011.076 0 .746.746 0 01-.001 1.064l-2.996 2.959a.734.734 0 000 1.043.755.755 0 001.056 0l6.018-5.953a2.21 2.21 0 000-3.146 2.261 2.261 0 00-3.176 0L9.62 14.12a3.731 3.731 0 000 5.288 3.776 3.776 0 005.3.002l2.849-2.854a.767.767 0 011.076-.007c.299.292.302.768.007 1.064l-2.853 2.858a5.31 5.31 0 01-7.455 0 5.224 5.224 0 010-7.415z" fill="#fff" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    (0, _sprite.addSpriteSymbol)(new _browserSymbol.default({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28AttachCircleFillBlue = function Icon28AttachCircleFillBlue(props) {
  (0, _sprite.useIsomorphicLayoutEffect)(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_SvgIcon.SvgIcon, (0, _es6ObjectAssign.assign)({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28AttachCircleFillBlue.mountIcon = mountIcon;
var _default = Icon28AttachCircleFillBlue;
exports.default = _default;
//# sourceMappingURL=attach_circle_fill_blue.js.map