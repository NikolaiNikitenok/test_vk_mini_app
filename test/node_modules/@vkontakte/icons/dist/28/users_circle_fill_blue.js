"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _browserSymbol = _interopRequireDefault(require("svg-baker-runtime/browser-symbol"));

var _es6ObjectAssign = require("es6-object-assign");

var _sprite = require("../sprite");

var _SvgIcon = require("../SvgIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore
var viewBox = '0 0 28 28';
var id = 'users_circle_fill_blue_28';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 28 28" id="users_circle_fill_blue_28"><linearGradient id="users_circle_fill_blue_28_a" gradientUnits="userSpaceOnUse" x1="-14" x2="14" y1="14" y2="42"><stop offset="0" stop-color="#70b2ff" /><stop offset="1" stop-color="#5c9ce6" /></linearGradient><path d="M0 14C0 6.268 6.268 0 14 0s14 6.268 14 14-6.268 14-14 14S0 21.732 0 14z" fill="url(#users_circle_fill_blue_28_a)" /><path d="M10.5 15c2.25 0 4.5.9 4.5 2.846v.134c0 .295-.04.447-.114.585a.773.773 0 01-.32.321c-.14.075-.29.114-.586.114H7.02c-.295 0-.447-.04-.585-.114a.773.773 0 01-.321-.32c-.075-.14-.114-.29-.114-.586v-.134C6 15.9 8.25 15 10.5 15zm7 0c2.25 0 4.5.9 4.5 2.846v.134c0 .295-.04.447-.114.585a.773.773 0 01-.32.321c-.14.075-.29.114-.586.114H16.6c.084-.248.13-.508.144-.797l.006-.223v-.134c0-1.069-.358-1.957-.971-2.659A7.74 7.74 0 0117.5 15zm-7-6a2.25 2.25 0 110 4.5 2.25 2.25 0 010-4.5zm7 0a2.25 2.25 0 110 4.5 2.25 2.25 0 010-4.5z" fill="#fff" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    (0, _sprite.addSpriteSymbol)(new _browserSymbol.default({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon28UsersCircleFillBlue = function Icon28UsersCircleFillBlue(props) {
  (0, _sprite.useIsomorphicLayoutEffect)(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_SvgIcon.SvgIcon, (0, _es6ObjectAssign.assign)({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 28,
    height: !isNaN(props.height) ? +props.height : 28
  }));
};

Icon28UsersCircleFillBlue.mountIcon = mountIcon;
var _default = Icon28UsersCircleFillBlue;
exports.default = _default;
//# sourceMappingURL=users_circle_fill_blue.js.map