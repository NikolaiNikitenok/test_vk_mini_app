import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'help_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="help_16"><path clip-rule="evenodd" d="M8 15A7 7 0 108 1a7 7 0 000 14zM7.998 4.927a.98.98 0 00-.948.734.864.864 0 11-1.673-.43 2.707 2.707 0 015.328.675c0 1.194-.653 1.817-1.11 2.244-.448.418-.674.633-.742 1.103a.864.864 0 01-1.71-.244c.155-1.085.79-1.673 1.21-2.062l.064-.06c.406-.38.56-.562.56-.98a.979.979 0 00-.979-.98zM9 11.8a1 1 0 11-2 0 1 1 0 012 0z" fill="currentColor" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16Help = function Icon16Help(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16Help.mountIcon = mountIcon;
export default Icon16Help;
//# sourceMappingURL=help.js.map