{"version":3,"sources":["../../../src/hooks/usePagination.ts"],"names":["React","usePagination","currentPage","siblingCount","boundaryCount","totalPages","endPage","useMemo","range","from","to","step","i","push","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBounadryWhenCurrentPageLow","siblingsEnd","length","pages"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,iFAKL,EALK;AAAA,8BAC3BC,WAD2B;AAAA,MAC3BA,WAD2B,iCACb,CADa;AAAA,+BAE3BC,YAF2B;AAAA,MAE3BA,YAF2B,kCAEZ,CAFY;AAAA,gCAG3BC,aAH2B;AAAA,MAG3BA,aAH2B,mCAGX,CAHW;AAAA,6BAI3BC,UAJ2B;AAAA,MAIfC,OAJe,gCAIL,CAJK;;AAAA,SAM3BN,KAAK,CAACO,OAAN,CAAc,YAAM;AAClB,QAAMC,KAAK,GAAG,eAACC,IAAD,EAAeC,EAAf,EAAwC;AAAA,UAAbC,IAAa,uEAAN,CAAM;AACpD,UAAMH,KAAK,GAAG,EAAd;AACA,UAAII,CAAC,GAAGH,IAAR;;AAEA,aAAOG,CAAC,IAAIF,EAAZ,EAAgB;AACdF,QAAAA,KAAK,CAACK,IAAN,CAAWD,CAAX;AACAA,QAAAA,CAAC,IAAID,IAAL;AACD;;AAED,aAAOH,KAAP;AACD,KAVD;;AAYA,QAAMM,UAAU,GAAGN,KAAK,CAAC,CAAD,EAAIO,IAAI,CAACC,GAAL,CAASZ,aAAT,EAAwBE,OAAxB,CAAJ,CAAxB;AACA,QAAMW,QAAQ,GAAGT,KAAK,CACpBO,IAAI,CAACG,GAAL,CAASZ,OAAO,GAAGF,aAAV,GAA0B,CAAnC,EAAsCA,aAAa,GAAG,CAAtD,CADoB,EAEpBE,OAFoB,CAAtB;AAKA,QAAMa,gCAAgC,GACpCb,OAAO,GAAGF,aAAV,GAA0B,CAA1B,GAA8B,IAAID,YADpC;AAEA,QAAMiB,aAAa,GAAGL,IAAI,CAACG,GAAL,CACpBH,IAAI,CAACC,GAAL,CAASd,WAAW,GAAGC,YAAvB,EAAqCgB,gCAArC,CADoB,EAEpBf,aAAa,GAAG,CAFI,CAAtB;AAKA,QAAMiB,+BAA+B,GACnCjB,aAAa,GAAG,CAAhB,GAAoB,IAAID,YAD1B;AAEA,QAAMmB,WAAW,GAAGP,IAAI,CAACC,GAAL,CAClBD,IAAI,CAACG,GAAL,CAAShB,WAAW,GAAGC,YAAvB,EAAqCkB,+BAArC,CADkB,EAElBJ,QAAQ,CAACM,MAAT,GAAkB,CAAlB,GAAsBN,QAAQ,CAAC,CAAD,CAAR,GAAc,CAApC,GAAwCX,OAAO,GAAG,CAFhC,CAApB;AAKA,QAAMkB,KAA0B,GAAGV,UAAnC;;AAEA,QAAIM,aAAa,GAAGhB,aAAa,GAAG,CAApC,EAAuC;AACrCoB,MAAAA,KAAK,CAACX,IAAN,CAAW,gBAAX;AACD,KAFD,MAEO,IAAIT,aAAa,GAAG,CAAhB,GAAoBE,OAAO,GAAGF,aAAlC,EAAiD;AACtDoB,MAAAA,KAAK,CAACX,IAAN,CAAWT,aAAa,GAAG,CAA3B;AACD;;AAEDoB,IAAAA,KAAK,CAACX,IAAN,OAAAW,KAAK,qBAAShB,KAAK,CAACY,aAAD,EAAgBE,WAAhB,CAAd,EAAL;;AAEA,QAAIA,WAAW,GAAGhB,OAAO,GAAGF,aAAV,GAA0B,CAA5C,EAA+C;AAC7CoB,MAAAA,KAAK,CAACX,IAAN,CAAW,cAAX;AACD,KAFD,MAEO,IAAIP,OAAO,GAAGF,aAAV,GAA0BA,aAA9B,EAA6C;AAClDoB,MAAAA,KAAK,CAACX,IAAN,CAAWP,OAAO,GAAGF,aAArB;AACD;;AAEDoB,IAAAA,KAAK,CAACX,IAAN,OAAAW,KAAK,qBAASP,QAAT,EAAL;AAEA,WAAOO,KAAP;AACD,GApDD,EAoDG,CAACtB,WAAD,EAAcI,OAAd,EAAuBH,YAAvB,EAAqCC,aAArC,CApDH,CAN2B;AAAA,CAAtB","sourcesContent":["import * as React from \"react\";\n\ninterface UsePagintaionProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = \"start-ellipsis\" | \"end-ellipsis\" | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук взаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePagintaionProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const range = (from: number, to: number, step = 1) => {\n      const range = [];\n      let i = from;\n\n      while (i <= to) {\n        range.push(i);\n        i += step;\n      }\n\n      return range;\n    };\n\n    const startPages = range(1, Math.min(boundaryCount, endPage));\n    const endPages = range(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh =\n      endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = Math.max(\n      Math.min(currentPage - siblingCount, lowerBoundaryWhenCurrentPageHigh),\n      boundaryCount + 2\n    );\n\n    const upperBounadryWhenCurrentPageLow =\n      boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBounadryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push(\"start-ellipsis\");\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...range(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push(\"end-ellipsis\");\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"],"file":"usePagination.js"}