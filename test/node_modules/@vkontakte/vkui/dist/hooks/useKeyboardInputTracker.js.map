{"version":3,"sources":["../../src/hooks/useKeyboardInputTracker.ts"],"names":["React","Keys","pressedKey","useDOM","useGlobalEventListener","ENABLE_KEYBOARD_INPUT_EVENT_NAME","DISABLE_KEYBOARD_INPUT_EVENT_NAME","useKeyboardInputTracker","document","useState","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","handleKeydown","e","TAB","disableKeyboardInput","eventOptions","passive","capture"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf;AACA,SAASC,MAAT;AACA,SAASC,sBAAT;AAEA,OAAO,IAAMC,gCAAgC,GAAG,qBAAzC;AACP,OAAO,IAAMC,iCAAiC,GAAG,sBAA1C;AAEP,OAAO,SAASC,uBAAT,GAA4C;AACjD,gBAAqBJ,MAAM,EAA3B;AAAA,MAAQK,QAAR,WAAQA,QAAR;;AAEA,wBACER,KAAK,CAACS,QAAN,CAAwB,KAAxB,CADF;AAAA;AAAA,MAAOC,qBAAP;AAAA,MAA8BC,mBAA9B;;AAGA,MAAMC,mBAAmB,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAM;AAClDF,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,MAAMG,aAAa,GAAGd,KAAK,CAACa,WAAN,CACpB,UAACE,CAAD,EAAsB;AACpB,QAAIb,UAAU,CAACa,CAAD,CAAV,KAAkBd,IAAI,CAACe,GAA3B,EAAgC;AAC9BJ,MAAAA,mBAAmB;AACpB;AACF,GALmB,EAMpB,CAACA,mBAAD,CANoB,CAAtB;AASA,MAAMK,oBAAoB,GAAGjB,KAAK,CAACa,WAAN,CAAkB,YAAM;AACnDF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMO,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKAhB,EAAAA,sBAAsB,CAACI,QAAD,EAAW,SAAX,EAAsBM,aAAtB,EAAqCI,YAArC,CAAtB;AACAd,EAAAA,sBAAsB,CACpBI,QADoB,EAEpB,WAFoB,EAGpBS,oBAHoB,EAIpBC,YAJoB,CAAtB;AAMAd,EAAAA,sBAAsB,CACpBI,QADoB,EAEpB,YAFoB,EAGpBS,oBAHoB,EAIpBC,YAJoB,CAAtB;AAMAd,EAAAA,sBAAsB,CACpBI,QADoB,EAEpBH,gCAFoB,EAGpBO,mBAHoB,EAIpBM,YAJoB,CAAtB;AAMAd,EAAAA,sBAAsB,CACpBI,QADoB,EAEpBF,iCAFoB,EAGpBW,oBAHoB,EAIpBC,YAJoB,CAAtB;AAOA,SAAOR,qBAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = \"enableKeyboardInput\";\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = \"disableKeyboardInput\";\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] =\n    React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput]\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, \"keydown\", handleKeydown, eventOptions);\n  useGlobalEventListener(\n    document,\n    \"mousedown\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    \"touchstart\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions\n  );\n\n  return isKeyboardInputActive;\n}\n"],"file":"useKeyboardInputTracker.js"}