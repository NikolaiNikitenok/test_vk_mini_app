{"version":3,"sources":["../../../src/components/AppRoot/ScrollContext.ts"],"names":["React","noop","clamp","ScrollContext","createContext","getScroll","x","y","scrollTo","globalScrollController","window","document","pageXOffset","pageYOffset","body","scrollWidth","innerWidth","scrollHeight","innerHeight","elementScrollController","elRef","current","scrollLeft","scrollTop","el","clientWidth","clientHeight"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AACA,SAASC,KAAT;AAOA,OAAO,IAAMC,aAAa,gBAAGH,KAAK,CAACI,aAAN,CAA4C;AACvEC,EAAAA,SAAS,EAAE;AAAA,WAAO;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAP;AAAA,GAD4D;AAEvEC,EAAAA,QAAQ,EAAEP;AAF6D,CAA5C,CAAtB;AAKP,OAAO,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CACpCC,MADoC,EAEpCC,QAFoC;AAAA,SAGhC;AACJN,IAAAA,SAAS,EAAE;AAAA,aAAO;AAAEC,QAAAA,CAAC,EAAEI,MAAM,CAAEE,WAAb;AAA0BL,QAAAA,CAAC,EAAEG,MAAM,CAAEG;AAArC,OAAP;AAAA,KADP;AAEJL,IAAAA,QAAQ,EAAE,oBAAkB;AAAA,UAAjBF,CAAiB,uEAAb,CAAa;AAAA,UAAVC,CAAU,uEAAN,CAAM;AAC1B;AACAG,MAAAA,MAAM,CAAEF,QAAR,CACEF,CAAC,GAAGJ,KAAK,CAACI,CAAD,EAAI,CAAJ,EAAOK,QAAQ,CAAEG,IAAV,CAAeC,WAAf,GAA6BL,MAAM,CAAEM,UAA5C,CAAR,GAAkE,CADrE,EAEET,CAAC,GAAGL,KAAK,CAACK,CAAD,EAAI,CAAJ,EAAOI,QAAQ,CAAEG,IAAV,CAAeG,YAAf,GAA8BP,MAAM,CAAEQ,WAA7C,CAAR,GAAoE,CAFvE;AAID;AARG,GAHgC;AAAA,CAA/B;AAcP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrCC,KADqC;AAAA,SAEjC;AACJf,IAAAA,SAAS,EAAE;AAAA;;AAAA,aAAO;AAChBC,QAAAA,CAAC,6CAAEc,KAAK,CAACC,OAAR,mDAAE,eAAeC,UAAjB,yEAA+B,CADhB;AAEhBf,QAAAA,CAAC,+CAAEa,KAAK,CAACC,OAAR,oDAAE,gBAAeE,SAAjB,2EAA8B;AAFf,OAAP;AAAA,KADP;AAKJf,IAAAA,QAAQ,EAAE,oBAAkB;AAAA,UAAjBF,CAAiB,uEAAb,CAAa;AAAA,UAAVC,CAAU,uEAAN,CAAM;AAC1B,UAAMiB,EAAE,GAAGJ,KAAK,CAACC,OAAjB,CAD0B,CAE1B;;AACAG,MAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEhB,QAAJ,CACEF,CAAC,GAAGJ,KAAK,CAACI,CAAD,EAAI,CAAJ,EAAOkB,EAAE,CAACT,WAAH,GAAiBS,EAAE,CAACC,WAA3B,CAAR,GAAkD,CADrD,EAEElB,CAAC,GAAGL,KAAK,CAACK,CAAD,EAAI,CAAJ,EAAOiB,EAAE,CAACP,YAAH,GAAkBO,EAAE,CAACE,YAA5B,CAAR,GAAoD,CAFvD;AAID;AAZG,GAFiC;AAAA,CAAhC","sourcesContent":["import * as React from \"react\";\nimport { noop } from \"../../lib/utils\";\nimport { clamp } from \"../../helpers/math\";\n\nexport interface ScrollContextInterface {\n  getScroll(): { x: number; y: number };\n  scrollTo(x?: number, y?: number): void;\n}\n\nexport const ScrollContext = React.createContext<ScrollContextInterface>({\n  getScroll: () => ({ x: 0, y: 0 }),\n  scrollTo: noop,\n});\n\nexport const globalScrollController = (\n  window: Window | undefined,\n  document: HTMLDocument | undefined\n) => ({\n  getScroll: () => ({ x: window!.pageXOffset, y: window!.pageYOffset }),\n  scrollTo: (x = 0, y = 0) => {\n    // Some iOS versions do not normalize scroll — do it manually.\n    window!.scrollTo(\n      x ? clamp(x, 0, document!.body.scrollWidth - window!.innerWidth) : 0,\n      y ? clamp(y, 0, document!.body.scrollHeight - window!.innerHeight) : 0\n    );\n  },\n});\n\nexport const elementScrollController = (\n  elRef: React.RefObject<HTMLElement>\n) => ({\n  getScroll: () => ({\n    x: elRef.current?.scrollLeft ?? 0,\n    y: elRef.current?.scrollTop ?? 0,\n  }),\n  scrollTo: (x = 0, y = 0) => {\n    const el = elRef.current;\n    // Some iOS versions do not normalize scroll — do it manually.\n    el?.scrollTo(\n      x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0,\n      y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0\n    );\n  },\n});\n"],"file":"ScrollContext.js"}