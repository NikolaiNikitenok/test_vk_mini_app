{"version":3,"sources":["../../../src/hooks/useExternRef.ts"],"names":["useExternRef","externRefs","stableRef","React","useRef","useMemo","current","el","forEach","ref"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,SAASA,YAAT,GAE6B;AAAA,oCAD/BC,UAC+B;AAD/BA,IAAAA,UAC+B;AAAA;;AAClC,MAAMC,SAAS,GAAGC,KAAK,CAACC,MAAN,CAAuB,IAAvB,CAAlB;AAEA,SAAOD,KAAK,CAACE,OAAN,CACL;AAAA,WAAO;AACL,UAAIC,OAAJ,GAAc;AACZ,eAAOJ,SAAS,CAACI,OAAjB;AACD,OAHI;;AAIL,UAAIA,OAAJ,CAAYC,EAAZ,EAAgB;AACdL,QAAAA,SAAS,CAACI,OAAV,GAAoBC,EAApB;AACAN,QAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,GAAD,EAAS;AAC1B,cAAIA,GAAJ,EAAS;AACP,+BAAOF,EAAP,EAAWE,GAAX;AACD;AACF,SAJD;AAKD;;AAXI,KAAP;AAAA,GADK,EAcL;AACAR,EAAAA,UAfK,CAAP;AAiBD","sourcesContent":["import * as React from \"react\";\nimport { setRef } from \"../lib/utils\";\n\nexport function useExternRef<T>(\n  ...externRefs: Array<React.Ref<T> | undefined | false>\n): React.MutableRefObject<T | null> {\n  const stableRef = React.useRef<T | null>(null);\n\n  return React.useMemo(\n    () => ({\n      get current() {\n        return stableRef.current;\n      },\n      set current(el) {\n        stableRef.current = el;\n        externRefs.forEach((ref) => {\n          if (ref) {\n            setRef(el, ref);\n          }\n        });\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    externRefs\n  );\n}\n"],"file":"useExternRef.js"}