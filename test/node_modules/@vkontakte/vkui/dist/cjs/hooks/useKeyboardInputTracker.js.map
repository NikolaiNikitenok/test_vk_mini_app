{"version":3,"sources":["../../../src/hooks/useKeyboardInputTracker.ts"],"names":["ENABLE_KEYBOARD_INPUT_EVENT_NAME","DISABLE_KEYBOARD_INPUT_EVENT_NAME","useKeyboardInputTracker","document","React","useState","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","useCallback","handleKeydown","e","Keys","TAB","disableKeyboardInput","eventOptions","passive","capture"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEO,IAAMA,gCAAgC,GAAG,qBAAzC;;AACA,IAAMC,iCAAiC,GAAG,sBAA1C;;;AAEA,SAASC,uBAAT,GAA4C;AACjD,gBAAqB,kBAArB;AAAA,MAAQC,QAAR,WAAQA,QAAR;;AAEA,wBACEC,KAAK,CAACC,QAAN,CAAwB,KAAxB,CADF;AAAA;AAAA,MAAOC,qBAAP;AAAA,MAA8BC,mBAA9B;;AAGA,MAAMC,mBAAmB,GAAGJ,KAAK,CAACK,WAAN,CAAkB,YAAM;AAClDF,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,MAAMG,aAAa,GAAGN,KAAK,CAACK,WAAN,CACpB,UAACE,CAAD,EAAsB;AACpB,QAAI,+BAAWA,CAAX,MAAkBC,oBAAKC,GAA3B,EAAgC;AAC9BL,MAAAA,mBAAmB;AACpB;AACF,GALmB,EAMpB,CAACA,mBAAD,CANoB,CAAtB;AASA,MAAMM,oBAAoB,GAAGV,KAAK,CAACK,WAAN,CAAkB,YAAM;AACnDF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMQ,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,sDAAuBd,QAAvB,EAAiC,SAAjC,EAA4CO,aAA5C,EAA2DK,YAA3D;AACA,sDACEZ,QADF,EAEE,WAFF,EAGEW,oBAHF,EAIEC,YAJF;AAMA,sDACEZ,QADF,EAEE,YAFF,EAGEW,oBAHF,EAIEC,YAJF;AAMA,sDACEZ,QADF,EAEEH,gCAFF,EAGEQ,mBAHF,EAIEO,YAJF;AAMA,sDACEZ,QADF,EAEEF,iCAFF,EAGEa,oBAHF,EAIEC,YAJF;AAOA,SAAOT,qBAAP;AACD","sourcesContent":["import * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = \"enableKeyboardInput\";\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = \"disableKeyboardInput\";\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] =\n    React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput]\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, \"keydown\", handleKeydown, eventOptions);\n  useGlobalEventListener(\n    document,\n    \"mousedown\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    \"touchstart\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions\n  );\n\n  return isKeyboardInputActive;\n}\n"],"file":"useKeyboardInputTracker.js"}