{"version":3,"sources":["../../../../src/components/RichCell/RichCell.tsx"],"names":["RichCell","children","text","caption","before","after","bottom","actions","multiline","sizeY","restProps","platform"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAoCA,IAAMA,QAAiC,GAAG,SAApCA,QAAoC,OAWpC;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;AACJ,MAAMC,QAAQ,GAAG,+BAAjB;AAEA,SACE,qCAAC,iBAAD,6BACMD,SADN;AAEE,IAAA,SAAS,EAAE,4BACT,gCAAa,UAAb,EAAyBC,QAAzB,CADS,EAET;AACE,wBAAkBH;AADpB,KAFS,4BAKUC,KALV;AAFb,MAUGL,MAVH,EAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEGC,KAFH,EAGE,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC;AAAhC,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCJ,QAArC,CADF,EAEG,yBAAaI,KAAb,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,KAAlC,CAHJ,CAHF,EASG,yBAAaH,IAAb,KACC,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC,SAAb;AAAuB,IAAA,SAAS,EAAC;AAAjC,KACGA,IADH,CAVJ,EAcG,yBAAaC,OAAb,KACC,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC;AAApC,KACGA,OADH,CAfJ,EAmBG,CAAC,yBAAaG,MAAb,KAAwB,yBAAaC,OAAb,CAAzB,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,MADH,EAEG,yBAAaC,OAAb,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,OAApC,CAHJ,CApBJ,CAXF,CADF;AA0CD,CAxDD,C,CA0DA;;;eACe,oCAAeP,QAAf,EAAyB;AAAES,EAAAA,KAAK,EAAE;AAAT,CAAzB,C","sourcesContent":["import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable, { TappableProps } from \"../Tappable/Tappable\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./RichCell.css\";\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопка `<Button size=\"s\" />`. Располагается под `bottom`.\n   * Для набора кнопок следует использовать обёртку `<ButtonGroup mode=\"horizontal\" gap=\"s\">...</ButtonGroup>`.\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  multiline?: boolean;\n}\n\nconst RichCell: React.FC<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"RichCell\", platform),\n        {\n          \"RichCell--mult\": multiline,\n        },\n        `RichCell--sizeY-${sizeY}`\n      )}\n    >\n      {before}\n      <div vkuiClass=\"RichCell__in\">\n        {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n        {after}\n        <Text weight=\"medium\" vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__children\">{children}</div>\n          {hasReactNode(after) && (\n            <div vkuiClass=\"RichCell__after\">{after}</div>\n          )}\n        </Text>\n        {hasReactNode(text) && (\n          <Text weight=\"regular\" vkuiClass=\"RichCell__text\">\n            {text}\n          </Text>\n        )}\n        {hasReactNode(caption) && (\n          <Subhead Component=\"span\" vkuiClass=\"RichCell__caption\">\n            {caption}\n          </Subhead>\n        )}\n        {(hasReactNode(bottom) || hasReactNode(actions)) && (\n          <div vkuiClass=\"RichCell__bottom\">\n            {bottom}\n            {hasReactNode(actions) && (\n              <div vkuiClass=\"RichCell__actions\">{actions}</div>\n            )}\n          </div>\n        )}\n      </div>\n    </Tappable>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(RichCell, { sizeY: true });\n"],"file":"RichCell.js"}