{"version":3,"sources":["../../../../src/components/ModalRoot/useModalManager.tsx"],"names":["getModals","children","React","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","isBack","Boolean","includes","splice","indexOf","push","enteringModal","useModalManager","onClose","initModal","noop","modalsState","useRef","current","forEach","Modal","modalProps","props","undefined","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","useReducer","transitionState","dispatchTransition","process","env","NODE_ENV","isCard","ModalType","CARD","onEnter","useCallback","onExit","delayEnter","getModalState","closeActiveModal","modalState","withModalManager","Wrapped","WithModalManager","transitionManager"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ModalsState, ModalsStateEntry, ModalType } from \"./types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop, isFunction } from \"../../lib/utils\";\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: (id: string | null) => void;\n  onExit: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  closeActiveModal: VoidFunction;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: \"setActive\" | \"entered\" | \"exited\" | \"inited\";\n    id: string | null;\n  }\n): ModalTransitionState {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onClose: (id: string) => void,\n  initModal: (state: ModalsStateEntry) => void = noop\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onClose = Modal.props.onClose;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(\n    modalTransitionReducer,\n    {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false,\n    }\n  );\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(`Can't transition - modal ${activeModal} not found`);\n    }\n    dispatchTransition({ type: \"setActive\", id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: \"inited\", id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEnter = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"entered\", id }),\n    []\n  );\n  const onExit = React.useCallback(\n    (id: string | null) => dispatchTransition({ type: \"exited\", id }),\n    []\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal &&\n      (isCard(activeModal) || isCard(transitionState.exitingModal))\n  );\n  const getModalState = React.useCallback(\n    (id: string) => modalsState[id],\n    [modalsState]\n  );\n\n  function closeActiveModal() {\n    const modalState =\n      transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      } else if (process.env.NODE_ENV === \"development\") {\n        warn(\"onClose is undefined\");\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onExit,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n    closeActiveModal,\n  };\n}\n\nexport function withModalManager(\n  initModal: (a: ModalsStateEntry) => void = noop\n) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>\n  ): React.FC<\n    Omit<Props, keyof ModalTransitionProps> & { activeModal?: string | null }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onClose,\n        initModal\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"],"file":"useModalManager.js"}