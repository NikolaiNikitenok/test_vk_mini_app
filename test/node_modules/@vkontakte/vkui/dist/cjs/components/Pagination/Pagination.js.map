{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"names":["getPageAriaLabelDefault","page","isCurrent","Pagination","currentPage","siblingCount","boundaryCount","totalPages","disabled","getPageAriaLabel","prevButtonAriaLabel","nextButtonAriaLabel","getRootRef","onChange","resetProps","sizeY","pages","isFirstPage","isLastPage","handlePrevClick","React","useCallback","handleClick","event","currentTarget","dataset","Number","handleNextClick","renderPages","undefined","map"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Icon24ChevronCompactLeft,\n  Icon24ChevronCompactRight,\n} from \"@vkontakte/icons\";\n\nimport type { HasRootRef } from \"../../types\";\n\nimport { classNames } from \"../../lib/classNames\";\n\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { PaginationPageType, usePagination } from \"../../hooks/usePagination\";\n\nimport Tappable from \"../Tappable/Tappable\";\nimport Button from \"../Button/Button\";\n\nimport \"./Pagination.css\";\n\nfunction getPageAriaLabelDefault(page: number, isCurrent: boolean): string {\n  return isCurrent ? `${page} страница` : `Перейти на ${page} страницу`;\n}\n\nexport interface PaginationProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, \"onChange\">,\n    HasRootRef<HTMLElement> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Переобределение `aria-label` для кнопки навигации назад.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  prevButtonAriaLabel?: string;\n  /**\n   * Переобределение `aria-label` для кнопки навигации вперёд.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  nextButtonAriaLabel?: string;\n  /**\n   * Функция для переопределния и/или локализации `aria-label` атрибута.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  getPageAriaLabel?(page: number, isCurrent: boolean): string;\n  onChange?(page: number): void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  getPageAriaLabel = getPageAriaLabelDefault,\n  prevButtonAriaLabel = \"Перейти на предыдущую страницу\",\n  nextButtonAriaLabel = \"Перейти на следующую страницу\",\n  getRootRef,\n  onChange,\n  ...resetProps\n}) => {\n  const { sizeY } = useAdaptivity();\n\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePrevClick = React.useCallback(() => {\n    if (onChange && !isFirstPage) {\n      onChange(currentPage - 1);\n    }\n  }, [currentPage, isFirstPage, onChange]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || \"1\";\n      onChange?.(Number(page));\n    },\n    [onChange]\n  );\n\n  const handleNextClick = React.useCallback(() => {\n    if (onChange && !isLastPage) {\n      onChange(currentPage + 1);\n    }\n  }, [currentPage, isLastPage, onChange]);\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      switch (page) {\n        case \"start-ellipsis\":\n        case \"end-ellipsis\":\n          return (\n            <li key={page}>\n              <div\n                vkuiClass={classNames(\n                  \"Pagination__page\",\n                  \"Pagination__page--type-ellipsis\",\n                  `Pagination__page--sizeY-${sizeY}`,\n                  disabled && \"Pagination__page--disabled\"\n                )}\n              >\n                ...\n              </div>\n            </li>\n          );\n        default: {\n          const isCurrent = page === currentPage;\n          return (\n            <li key={page}>\n              <Tappable\n                vkuiClass={classNames(\n                  \"Pagination__page\",\n                  `Pagination__page--sizeY-${sizeY}`,\n                  isCurrent && \"Pagination__page--current\",\n                  disabled && \"Pagination__page--disabled\"\n                )}\n                activeMode=\"Pagination__page--state-active\"\n                hoverMode=\"Pagination__page--state-hover\"\n                hasActive={!isCurrent}\n                hasHover={!isCurrent}\n                focusVisibleMode=\"outside\"\n                disabled={disabled}\n                data-page={page}\n                aria-current={isCurrent ? true : undefined}\n                aria-label={getPageAriaLabel(page, isCurrent)}\n                onClick={handleClick}\n              >\n                {page}\n              </Tappable>\n            </li>\n          );\n        }\n      }\n    },\n    [sizeY, currentPage, disabled, getPageAriaLabel, handleClick]\n  );\n\n  return (\n    <nav\n      vkuiClass=\"Pagination\"\n      role=\"navigation\"\n      aria-label=\"Навигация по страницам\"\n      ref={getRootRef}\n      {...resetProps}\n    >\n      <ul vkuiClass=\"Pagination__list\">\n        <li vkuiClass=\"Pagination__prevButtonContainer\">\n          <Button\n            size=\"l\"\n            before={<Icon24ChevronCompactLeft width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            stretched\n            disabled={isFirstPage || disabled}\n            aria-label={prevButtonAriaLabel}\n            onClick={handlePrevClick}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li vkuiClass=\"Pagination__nextButtonContainer\">\n          <Button\n            size=\"l\"\n            after={<Icon24ChevronCompactRight width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            stretched\n            disabled={isLastPage || disabled}\n            aria-label={nextButtonAriaLabel}\n            onClick={handleNextClick}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n"],"file":"Pagination.js"}