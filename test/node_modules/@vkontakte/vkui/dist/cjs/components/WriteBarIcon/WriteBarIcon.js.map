{"version":3,"sources":["../../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"names":["warn","IS_DEV","process","env","NODE_ENV","WriteBarIcon","mode","children","count","restProps","platform","icon","ariaLabel","undefined","IOS"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAoBA,IAAMA,IAAI,GAAG,wBAAS,cAAT,CAAb;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAxC;;AAEO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAKhC;AAAA,MAJvBC,IAIuB,QAJvBA,IAIuB;AAAA,MAHvBC,QAGuB,QAHvBA,QAGuB;AAAA,MAFvBC,KAEuB,QAFvBA,KAEuB;AAAA,MADpBC,SACoB;AACvB,MAAMC,QAAQ,GAAG,+BAAjB;AAEA,MAAIC,IAAJ;AACA,MAAIC,SAA6B,GAAGC,SAApC;;AAEA,UAAQP,IAAR;AACE,SAAK,QAAL;AACEK,MAAAA,IAAI,GACFD,QAAQ,KAAKI,aAAb,GAAmB,qCAAC,6BAAD,OAAnB,GAAgD,qCAAC,0BAAD,OADlD;AAEAF,MAAAA,SAAS,GAAG,iBAAZ;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,IAAI,GAAGD,QAAQ,KAAKI,aAAb,GAAmB,qCAAC,yBAAD,OAAnB,GAA4C,qCAAC,iBAAD,OAAnD;AACAF,MAAAA,SAAS,GAAG,WAAZ;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,IAAI,GACFD,QAAQ,KAAKI,aAAb,GACE,qCAAC,yBAAD,OADF,GAGE,qCAAC,+BAAD,OAJJ;AAMAF,MAAAA,SAAS,GAAG,QAAZ;AACA;;AAEF;AACE;AAvBJ;;AA0BA,MAAIX,MAAM,IAAI,CAACQ,SAAS,CAAC,YAAD,CAApB,IAAsC,CAACG,SAA3C,EAAsD;AACpDZ,IAAAA,IAAI,CACF,sGADE,CAAJ;AAGD;;AAED,SACE,qCAAC,iBAAD;AACE,kBAAYY;AADd,KAEMH,SAFN;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,UAAU,EAAC,sBALb;AAME,IAAA,SAAS,EAAE,6BAAW,gCAAa,cAAb,EAA6BC,QAA7B,CAAX,4DACSJ,IADT,GACkB,CAAC,CAACA,IADpB;AANb,MAUE;AAAM,IAAA,SAAS,EAAC;AAAhB,KACGK,IAAI,IAAIJ,QADX,EAEG,yBAAaC,KAAb,KACC,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAA2C,IAAA,IAAI,EAAC;AAAhD,KACGA,KADH,CAHJ,CAVF,CADF;AAqBD,CAhEM","sourcesContent":["import * as React from \"react\";\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from \"@vkontakte/icons\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS } from \"../../lib/platform\";\nimport Counter from \"../Counter/Counter\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport \"./WriteBarIcon.css\";\n\nexport interface WriteBarIconProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: \"attach\" | \"send\" | \"done\";\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n}\n\nconst warn = warnOnce(\"WriteBarIcon\");\nconst IS_DEV = process.env.NODE_ENV === \"development\";\n\nexport const WriteBarIcon: React.FC<WriteBarIconProps> = ({\n  mode,\n  children,\n  count,\n  ...restProps\n}: WriteBarIconProps) => {\n  const platform = usePlatform();\n\n  let icon: React.ReactNode;\n  let ariaLabel: string | undefined = undefined;\n\n  switch (mode) {\n    case \"attach\":\n      icon =\n        platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      ariaLabel = \"Прикрепить файл\";\n      break;\n\n    case \"send\":\n      icon = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      ariaLabel = \"Отправить\";\n      break;\n\n    case \"done\":\n      icon =\n        platform === IOS ? (\n          <Icon48WritebarDone />\n        ) : (\n          <Icon28CheckCircleOutline />\n        );\n      ariaLabel = \"Готово\";\n      break;\n\n    default:\n      break;\n  }\n\n  if (IS_DEV && !restProps[\"aria-label\"] && !ariaLabel) {\n    warn(\n      \"[WriteBarIcon/a11y] У WriteBarIcon нет aria-label. Кнопка будет недоступной для части пользователей.\"\n    );\n  }\n\n  return (\n    <Tappable\n      aria-label={ariaLabel}\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      activeMode=\"WriteBarIcon__active\"\n      vkuiClass={classNames(getClassName(\"WriteBarIcon\", platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n      })}\n    >\n      <span vkuiClass=\"WriteBarIcon__in\">\n        {icon || children}\n        {hasReactNode(count) && (\n          <Counter vkuiClass=\"WriteBarIcon__counter\" size=\"s\">\n            {count}\n          </Counter>\n        )}\n      </span>\n    </Tappable>\n  );\n};\n"],"file":"WriteBarIcon.js"}