{"version":3,"sources":["../../../../src/components/AppRoot/AppRootPortal.tsx"],"names":["AppRootPortal","children","className","forcePortal","React","useContext","AppRootContext","portalRoot","mode","appearance"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,aAEZ,GAAG,SAFSA,aAET,OAA0C;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC5C,0BAA6BC,KAAK,CAACC,UAAN,CAAiBC,8BAAjB,CAA7B;AAAA,MAAQC,UAAR,qBAAQA,UAAR;AAAA,MAAoBC,IAApB,qBAAoBA,IAApB;;AACA,MAAMC,UAAU,GAAG,mCAAnB;AAEAN,EAAAA,WAAW,mBAAGA,WAAH,uDAAkBK,IAAI,KAAK,MAAtC;AACA,SAAOD,UAAU,IAAIJ,WAAd,gBACL,4BACE,qCAAC,sCAAD;AAAoB,IAAA,UAAU,EAAEM;AAAhC,KACE;AAAK,IAAA,SAAS,EAAEP;AAAhB,KAA4BD,QAA5B,CADF,CADF,EAIEM,UAJF,CADK,GAQL,qCAAC,KAAD,CAAO,QAAP,QAAiBN,QAAjB,CARF;AAUD,CAjBM","sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\n\nexport const AppRootPortal: React.FC<\n  React.PropsWithChildren<{ className?: string; forcePortal?: boolean }>\n> = ({ children, className, forcePortal }) => {\n  const { portalRoot, mode } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"],"file":"AppRootPortal.js"}