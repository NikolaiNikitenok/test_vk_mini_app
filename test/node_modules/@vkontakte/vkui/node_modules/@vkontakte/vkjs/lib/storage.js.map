{"version":3,"sources":["../src/storage.ts"],"names":["CustomStorage","key","data","hasOwnProperty","Object","keys","val","String","id","index","length","dummyKey","dummyContent","ls","getLocalStorage","window","localStorage","setItem","getItem","Error","removeItem","e","clear","storage","getPrefixedKeys","prefix","filter","startsWith","sessionStorageCache","getSessionStorage","sessionStorage"],"mappings":"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","sourcesContent":["import { Dictionary } from './types';\n\nclass CustomStorage {\n  private data: Dictionary<string> = {};\n\n  public setItem(key: string, val: string) {\n    this.data[key] = String(val);\n  };\n\n  public getItem = (key: string) => this.data.hasOwnProperty(key) ? this.data[key] : null;\n\n  public removeItem(id: string) {\n    delete this.data[id];\n  };\n\n  public clear() {\n    this.data = {};\n  }\n\n  public get length() {\n    return Object.keys(this.data).length;\n  };\n\n  public key(index: number): string | null {\n    return Object.keys(this.data)[index];\n  }\n\n  public keys = (): string[] => Object.keys(this.data);\n}\n\nconst dummyKey = 'vk-ls-dummy';\nconst dummyContent = 'test';\n\nlet ls: CustomStorage | Storage;\n\nfunction getLocalStorage() {\n  if (ls) {\n    return ls;\n  }\n  try {\n    // Проверяем, нет ли в FF или Safari cross domain security restrictions\n    window.localStorage.setItem(dummyKey, dummyContent);\n    if (dummyContent !== window.localStorage.getItem(dummyKey)) {\n      throw new Error('localStorage is broken');\n    }\n    window.localStorage.removeItem(dummyKey);\n    ls = window.localStorage;\n  } catch (e) {\n    ls = new CustomStorage();\n  }\n  return ls;\n}\n\n/**\n * Обертка над localStorage для кода, который может использоваться на других сайтах\n * Firefox блокирует доступ к localStorage для скриптов с других доменов\n */\nexport const localStorage = {\n  setItem: (key: string, val: string) => getLocalStorage().setItem(key, val),\n  getItem: (key: string) => getLocalStorage().getItem(key),\n  removeItem: (key: string) => getLocalStorage().removeItem(key),\n  clear: () => getLocalStorage().clear(),\n  length: () => getLocalStorage().length,\n  key: (index: number) => getLocalStorage().key(index),\n  keys(): string[] {\n    const storage = getLocalStorage();\n    if (storage instanceof CustomStorage) {\n      return storage.keys();\n    } else {\n      return Object.keys(storage);\n    }\n  },\n  getPrefixedKeys: (prefix: string): string[] => localStorage.keys().filter((key) => key.startsWith(prefix)),\n};\n\nlet sessionStorageCache: CustomStorage | Storage;\n\nfunction getSessionStorage() {\n  if (sessionStorageCache) {\n    return sessionStorageCache;\n  }\n  try {\n    // Проверяем, нет ли в FF или Safari cross domain security restrictions\n    window.sessionStorage.setItem(dummyKey, dummyContent);\n    if (dummyContent !== window.sessionStorage.getItem(dummyKey)) {\n      throw new Error('sessionStorage is broken');\n    }\n    window.sessionStorage.removeItem(dummyKey);\n    sessionStorageCache = window.sessionStorage;\n  } catch (e) {\n    sessionStorageCache = new CustomStorage();\n  }\n  return sessionStorageCache;\n}\n\nexport const sessionStorage = {\n  setItem: (key: string, val: string) => getSessionStorage().setItem(key, val),\n  getItem: (key: string) => getSessionStorage().getItem(key),\n  removeItem: (key: string) => getSessionStorage().removeItem(key),\n  clear: () => getSessionStorage().clear(),\n  length: () => getSessionStorage().length,\n  key: (index: number) => getSessionStorage().key(index),\n  keys(): string[] {\n    const storage = getSessionStorage();\n    if (storage instanceof CustomStorage) {\n      return storage.keys();\n    } else {\n      return Object.keys(storage);\n    }\n  },\n  getPrefixedKeys: (prefix: string): string[] => sessionStorage.keys().filter((key) => key.startsWith(prefix)),\n};\n"],"file":"storage.js"}