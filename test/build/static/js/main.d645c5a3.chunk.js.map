{"version":3,"sources":["panels/Home.js","panels/Buy.js","panels/Settings.js","panels/Inventory.js","panels/Create.js","App.js","index.js"],"names":["Home","id","go","React","useState","left","selected","onClick","header","mode","stretched","size","Buy","Settings","userAccount","setUserAccount","getBalance","account","window","ethereum","request","method","params","then","balance","console","log","web3","currentProvider","alert","Inventory","addressItems","label","name","Create","email","setEmail","purpose","setPurpose","showPatronymic","setShowPatronymic","onChange","e","currentTarget","value","setStateAction","top","status","bottom","type","removable","onRemove","placeholder","options","map","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","data","result","catch","error","useEffect","a","user","subscribe","detail","fetchData","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d645c5a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem, List, Footer} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\n\r\nconst containerStyles = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\tjustifyContent: 'center',\r\n\twidth: '100%',\r\n\t};\r\n\r\nconst Home = ({ id, go}) => {\r\n\r\n\tconst [fetching, setFetching] = React.useState(false);\r\n\r\n\t// const initUsers = getRandomUsers(10);\r\n\t// console.log(initUsers)\r\n\r\n\treturn(\t\r\n\t\t<>\r\n\t\t\r\n\t\t\t<Panel id={id}>\r\n\t\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\t\t\r\n\t\t\t\t</PanelHeader>\r\n\t\t\t\t<Tabs>\r\n\t\t\t\t\t<TabsItem selected onClick={go} data-to=\"home\">\r\n\t\t\t\t\t\tГлавная\r\n\t\t\t\t\t</TabsItem>\r\n\t\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n\t\t\t\t\t<TabsItem onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t{/* <Group header={<Header mode=\"secondary\">Navigation</Header>}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" appearance=\"positive\" mode=\"secondary\" onClick={go} data-to=\"home\">\r\n\t\t\t\t\t\t\t\tMain\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"inventory\">\r\n\t\t\t\t\t\t\t\tInventory\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"buy\">\r\n\t\t\t\t\t\t\t\tКупить билеты\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Group> */}\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Group header={<Header mode=\"secondary\">Мероприятия</Header>}>\r\n\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"buy\">\r\n\t\t\t\t\t\t\tКупить билеты\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"create\">\r\n\t\t\t\t\t\t\tСоздать мероприятие\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Div>\r\n\t\t\t\t</Group>\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t{/* <Group>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<Cell subtitle=\"Back-end\">\r\n\t\t\t\t\t\t\tНикита Можаев\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t\t<Cell before={<Avatar src=\"../img/nikolai.jpg\"/>} subtitle=\"Front-end\">\r\n\t\t\t\t\t\t\tНикитенок Николай\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\r\n\t\t\t\t\t\t{users.map(({ id, name, photo_100 }, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Cell key={i} before={<Avatar src={photo_100} />}>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Group>\r\n\t\t\t\t<Footer>2 Создателя</Footer> */}\r\n\t\t\t</Panel>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_100: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem } from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nconst Buy = ({ id, go}) => (\r\n\t\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}> \r\n            Покупка билетов\r\n\t\t</PanelHeader>\r\n\t\t\r\n\t</Panel>\r\n);\r\n\r\nBuy.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Buy;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk, Icon16Done} from '@vkontakte/icons';\r\n// import MetaMask from 'metamask-connect';\r\nimport Web3 from 'web3';\r\n// import WalletConnectProvider from '@walletconnect/web3-provider';\r\n\r\nimport './Persik.css';\r\n\r\nconst Settings = ({id, go}) => {\r\n\tconst [userAccount, setUserAccount] = useState(null);\r\n\r\n\tconst onConnect = () => {\r\n\t\tlet provider;\r\n\t\tif (window.ethereum) {\r\n\t\t\t//если есть метамаск\r\n\t\t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t\t\t\tsetUserAccount(account[0]);\r\n\t\t\t\tgetBalance(account[0]);\r\n\t\t\t})\r\n\t\t} else if (window.web3) {\r\n\t\t\tprovider = window.web3.currentProvider;\r\n\t\t} else {\r\n\t\t\talert(\"Установите МетаМаск!\")\r\n\t\t}\r\n\t};\r\n\r\n\tconst getBalance = (account) => {\r\n\t\twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t\t\tconsole.log(balance)\t\r\n\t\t})\r\n\t};\r\n    \r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои Мероприятия</TabsItem>\r\n\t\t\t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\r\n\t\t\t\t<Div>\t\r\n\t\t\t\t\t{userAccount ? (\r\n                        <>\r\n                            <span>Кошелек подключен!!!</span>\r\n                        </>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t\t\t</Div>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n\r\n\t// const [isConnected, setIsConnected] = useState(false);\r\n  // const [ethBalance, setEthBalance] = useState(\"\");\r\n  \r\n  // const detectCurrentProvider = () => {\r\n  //   let provider;\r\n  //   if (window.ethereum) {\r\n  //     provider = window.ethereum;\r\n  //   } else if (window.web3) {\r\n  //     provider = window.web3.currentProvider;\r\n  //   } else {\r\n  //     console.log(\"Non-ethereum browser detected. You should install Metamask\");\r\n  //   }\r\n  //   return provider;\r\n  // };\r\n  \r\n  // const onConnect = async() => {\r\n  //   try {\r\n  //     const currentProvider = detectCurrentProvider();\r\n  //     if(currentProvider) {\r\n  //       await currentProvider.request({method: 'eth_requestAccounts'});\r\n  //       const web3 = new Web3(currentProvider);\r\n  //       const userAccount  =await web3.eth.getAccounts();\r\n  //       const account = userAccount[0];\r\n  //       let ethBalance = await web3.eth.getBalance(account);\r\n  //       setEthBalance(ethBalance);\r\n  //       setIsConnected(true);\r\n  //     }\r\n  //   } catch(err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }\r\n  \r\n  // const onDisconnect = () => {\r\n  //   setIsConnected(false);\r\n  // }\r\n  \r\n  \r\n  \r\n  // return (\r\n  //   <div className=\"app\">\r\n  //     <div className=\"app-header\">\r\n  //       <h1>React dApp authentication with React, We3.js and Metamask</h1>\r\n  //     </div>\r\n  //     <div className=\"app-wrapper\">\r\n  //       {!isConnected && (\r\n  //         <div>\r\n  //           <button className=\"app-button__login\" onClick={onConnect}>\r\n  //           Login\r\n  //           </button>\r\n  //         </div>\r\n  //       )}\r\n  //     </div>\r\n  //     {isConnected && (\r\n  //       <div className=\"app-wrapper\">\r\n  //         <div className=\"app-details\">\r\n  //           <h2> You are connected to metamask.</h2>\r\n  //           <div className=\"app-balance\">\r\n  //             <span>Balance: </span>\r\n  //             {ethBalance}\r\n  //           </div>\r\n  //         </div>\r\n  //         <div>\r\n  //           <button className=\"app-buttons__logout\" onClick={onDisconnect}>\r\n  //           Disconnect\r\n  //           </button>\r\n  //         </div>\r\n  //       </div>\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, List} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nimport './Persik.css';\r\n\r\nconst Inventory = ({id, go}) => {\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem selected onClick={go} data-to=\"inventory\">Мои мероприятия</TabsItem>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Мои билеты</Header>}>\r\n\r\n\t\t\t\t{/* Если пусто, то добавить кнопку для перехода в магазин билетов, иначе открыть панель с билетами. */}\r\n\t\t\t\t<h2>Здесь пусто!</h2>\r\n\t\t\t</Group>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Созданные Мероприятия</Header>}>\r\n\r\n\t\t\t\t{/* Если пусто, то добавить кнопку для перехода в магазин билетов, иначе открыть панель с билетами. */}\r\n\t\t\t\t<h2>Здесь пусто!</h2>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nInventory.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect} from 'react';\r\nimport { \r\n\tPanel, \r\n\tPanelHeader, \r\n\tPanelHeaderBack, \r\n\tHeader, \r\n\tButton, \r\n\tGroup, \r\n\tCell, \r\n\tDiv, \r\n\tAvatar, \r\n\tTabs, \r\n\tTabsItem, \r\n\tFormLayout, \r\n\tFormItem, \r\n\tInput, \r\n\tFormLayoutGroup, \r\n\tCellButton, \r\n\tSelect, \r\n\tSegmentedControl, \r\n\tTextarea,\r\n\tCheckbox,\r\n\tLink\r\n} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nconst addressItems = [\r\n  { label: 'Почтовый индекс', name: 'zip' },\r\n  { label: 'Страна', name: 'country' },\r\n  { label: 'Город', name: 'city' },\r\n];\r\n\r\nconst Create = ({ id, go}) => {\r\n\r\n\tconst [email, setEmail] = React.useState('');\r\n  const [purpose, setPurpose] = React.useState('');\r\n  const [showPatronymic, setShowPatronymic] = React.useState(true);\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    const setStateAction = {\r\n      email: setEmail,\r\n      purpose: setPurpose,\r\n    }[name];\r\n\r\n    setStateAction && setStateAction(value);\r\n  };\r\n\r\n  const onShowPatronymic = () => setShowPatronymic(true);\r\n\r\n  const onRemove = () => setShowPatronymic(false);\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}> \r\n\t\t\t\tСоздание мероприятия\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Group>\r\n\t\t\t\t<FormLayout>\r\n\r\n\r\n\t\t\t\t\t{/* Email */}\r\n\t\t\t\t\t<FormItem\r\n\t\t\t\t\ttop=\"E-mail\"\r\n\t\t\t\t\tstatus={email ? 'valid' : 'error'}\r\n\t\t\t\t\tbottom={\r\n\t\t\t\t\t\temail ? '' : 'Обязательное поле!'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Input type=\"email\" name=\"email\" value={email} onChange={onChange} />\r\n\t\t\t\t\t</FormItem>\r\n\r\n\r\n\t\t\t\t\t{/* ФИО */}\r\n\t\t\t\t\t<FormLayoutGroup mode=\"horizontal\">\r\n\t\t\t\t\t<FormItem top=\"Имя\">\r\n\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Фамилия\">\r\n\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t</FormLayoutGroup>\r\n\r\n\t\t\t\t\t{/* Дополнительное поле: Отчество */}\r\n\t\t\t\t\t{!showPatronymic ? (\r\n\t\t\t\t\t<CellButton onClick={onShowPatronymic}>Указать отчество</CellButton>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t<FormItem\r\n\t\t\t\t\t\tremovable\r\n\t\t\t\t\t\tonRemove={onRemove}\r\n\t\t\t\t\t\ttop=\"Отчество\"\r\n\t\t\t\t\t\tbottom=\"Если у вас нет отчества — удалите этот пункт.\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t{/* Пол */}\r\n\t\t\t\t\t<FormItem top=\"Пол\">\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tplaceholder=\"Выберите пол\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '0',\r\n\t\t\t\t\t\t\tlabel: 'Мужской',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '1',\r\n\t\t\t\t\t\t\tlabel: 'Женский',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\r\n\r\n\t\t\t\t\t{/* Документ */}\r\n\t\t\t\t\t<FormItem top=\"Формат мероприятия\">\r\n\t\t\t\t\t<SegmentedControl\r\n\t\t\t\t\t\tsize=\"m\"\r\n\t\t\t\t\t\tname=\"type\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Оффлайн',\r\n\t\t\t\t\t\t\tvalue: 'offline',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Онлайн',\r\n\t\t\t\t\t\t\tvalue: 'online',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t{/* Выпадающий список */}\r\n\t\t\t\t\t{addressItems.map(({ label, name }) => (\r\n\t\t\t\t\t<FormItem top={label} key={name}>\r\n\t\t\t\t\t\t<Input name={name} />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<FormItem\r\n\t\t\t\t\ttop=\"Тип мероприятия\"\r\n\t\t\t\t\tbottom={purpose ? '' : 'Пожалуйста, укажите тип вашего мероприятия'}\r\n\t\t\t\t\t// status={purpose ? 'valid' : 'error'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tplaceholder=\"Выберите тип мероприятия\"\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tvalue={purpose}\r\n\t\t\t\t\t\tname=\"purpose\"\r\n\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '0',\r\n\t\t\t\t\t\t\tlabel: 'Бизнес и финансы',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '1',\r\n\t\t\t\t\t\t\tlabel: 'Обучение',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '2',\r\n\t\t\t\t\t\t\tlabel: 'Развлечения',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: '3',\r\n\t\t\t\t\t\t\tlabel: 'Спорт',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<FormItem top=\"Коротко о мероприятии\">\r\n\t\t\t\t\t<Textarea />\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t<Checkbox>\r\n\t\t\t\t\tСогласен на <Link>обработку личных данных</Link>\r\n\t\t\t\t\t</Checkbox>\r\n\t\t\t\t\t<FormItem>\r\n\t\t\t\t\t<Button size=\"l\" stretched>\r\n\t\t\t\t\t\tЗарегистрировать мероприятие\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</FormItem>\r\n\t\t\t\t</FormLayout>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t);\r\n};\r\n\r\nCreate.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\n// import Connect from './panels/Connect';\r\nimport Buy from './panels/Buy'\r\nimport Settings from './panels/Settings'\r\nimport Inventory from './panels/Inventory'\r\nimport Create from './panels/Create'\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tbridge.send('VKWebAppAddToFavorites')\r\n\t.then((data) => { \r\n\t\tif (data.result) {\r\n\t\t// Мини-приложение или игра добавлены в избранное\r\n\t\t}\r\n\t})\r\n\t.catch((error) => {\r\n\t\t// Ошибка\r\n\t\tconsole.log(error);\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout popout={popout}>\r\n\t\t\t\t\t\t<SplitCol>\r\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\r\n\t\t\t\t\t\t\t\t<Home id='home' go={go}/>\r\n\t\t\t\t\t\t\t\t{/* <Connect id='connect' go={go}/> */}\r\n\t\t\t\t\t\t\t\t<Buy id='buy' go={go}/>\r\n\t\t\t\t\t\t\t\t<Settings id='settings' go={go}/>\r\n\t\t\t\t\t\t\t\t<Inventory id='inventory' go={go}/>\r\n\t\t\t\t\t\t\t\t<Create id='create' go={go}/>\r\n\t\t\t\t\t\t\t\t<Buy id='Buy' go={go}/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send('VKWebAppInit')\r\n  .then((data) => { \r\n    if (data.result) {\r\n      // Приложение инициализировано\r\n    } else {\r\n      // Ошибка\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    // Ошибка\r\n    console.log(error);\r\n  });\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}