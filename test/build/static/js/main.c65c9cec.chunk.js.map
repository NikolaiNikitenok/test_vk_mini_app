{"version":3,"sources":["panels/Home.js","panels/Persik.js","img/persik.png","App.js","index.js"],"names":["Home","id","go","left","selected","header","mode","stretched","size","onClick","Inventory","useState","userAccount","setUserAccount","getBalance","account","window","ethereum","request","method","params","then","balance","console","log","alert","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","fetchData","e","currentTarget","dataset","to","result","catch","error","ReactDOM","render","document","getElementById"],"mappings":"sPAwEeA,EA1DF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,OAEZ,eAAC,IAAD,CAAOD,GAAIA,EAAX,UACC,cAAC,IAAD,CAAaE,KAAM,cAAC,IAAD,IAAnB,6BAGA,eAAC,IAAD,WACC,cAAC,IAAD,CAAUC,UAAQ,EAAlB,wDAEA,cAAC,IAAD,sEACA,cAAC,IAAD,wEAoBD,uBACA,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,oBAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAQC,WAAS,EAACC,KAAK,IAAIF,KAAK,YAAYG,QAASP,EAAI,UAAQ,OAAjE,uFAGA,uBACA,cAAC,IAAD,CAAQK,WAAS,EAACC,KAAK,IAAIF,KAAK,YAAYG,QAASP,EAAI,UAAQ,YAAjE,8HCUWQ,GC7DA,I,ODSG,WACjB,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAcMC,EAAa,SAACC,GACnBC,OAAOC,SAASC,QAAQ,CAACC,OAAQ,iBAAkBC,OAAQ,CAACL,EAAS,YAAaM,MAAK,SAACC,GACvFC,QAAQC,IAAIF,OAId,OACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAanB,KAAM,cAAC,IAAD,IAAnB,6BAGA,eAAC,IAAD,WACC,cAAC,IAAD,CAAUC,UAAQ,EAAlB,wDAEA,cAAC,IAAD,sEACA,cAAC,IAAD,wEAED,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,8BAAf,SACC,cAAC,IAAD,UACEM,EACA,wIAEC,qCAAE,uOACF,cAAC,IAAD,CAAQL,WAAS,EAACC,KAAK,IAAIF,KAAK,YAAYG,QAnChC,WACbO,OAAOC,SAEVD,OAAOC,SAASC,QAAQ,CAACC,OAAQ,wBAAwBE,MAAK,SAACN,GAC9DF,EAAeE,EAAQ,IACvBD,EAAWC,EAAQ,OAGpBU,MAAM,mHA2BF,0I,iBEMQC,EA5CH,WACX,MAA4Bf,mBAAS,gBAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAsCjB,mBAAS,QAA/C,mBAAOkB,EAAP,KAAoBC,EAApB,KACA,EAA+BnB,mBAAS,MAAxC,mBAAoBoB,GAApB,WACA,EAA4BpB,mBAAS,MAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAPe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACtB,yBAATD,GACHb,EAAUc,EAAKf,WAHF,mCAYfgB,KACE,IAEH,IAAMzC,EAAK,SAAA0C,GACVd,EAAec,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBpB,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaK,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMH,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAM5B,GAAG,OAAOC,GAAIA,IACpB,cAAC,EAAD,CAAWD,GAAG,YAAYC,GAAIA,IAC9B,cAAC,IAAD,CAAKD,GAAG,MAAMC,GAAIA,kBCrC1BkC,IAAOC,KAAK,gBACThB,MAAK,SAACqB,GACDA,EAAKM,UAMVC,OAAM,SAACC,GAEN3B,QAAQC,IAAI0B,MAGhBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.c65c9cec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem } from '@vkontakte/vkui';\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\n\n\nconst containerStyles = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'center',\n\twidth: '100%',\n  };\n\nconst Home = ({ id, go}) => (\n\t\n\t<Panel id={id}>\n\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\n\t\t\t\n\t\t</PanelHeader>\n\t\t<Tabs>\n\t\t\t<TabsItem selected>Главная</TabsItem>\n\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\n\t\t\t<TabsItem>Мои билеты</TabsItem>\n\t\t\t<TabsItem>Настройки</TabsItem>\n        </Tabs>\n\n\t\t{/* <Group header={<Header mode=\"secondary\">Navigation</Header>}>\n\t\t\t<div>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button stretched size=\"l\" appearance=\"positive\" mode=\"secondary\" onClick={go} data-to=\"home\">\n\t\t\t\t\t\tMain\n\t\t\t\t\t</Button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"inventory\">\n\t\t\t\t\t\tInventory\n\t\t\t\t\t</Button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"buy\">\n\t\t\t\t\t\tКупить билеты\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</div>\n\t\t</Group> */}\n\t\t<br/>\n\t\t<Group header={<Header mode=\"secondary\">Events</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"home\">\n\t\t\t\t\tКупить билеты\n\t\t\t\t</Button>\n\t\t\t\t<br/>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"inventory\">\n\t\t\t\t\tПодключить кошелек\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import {ethers} from 'ethers'\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs} from '@vkontakte/vkui';\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Inventory = () => {\n\tconst [userAccount, setUserAccount] = useState(null);\n\n\tconst onConnect = () => {\n\t\tif (window.ethereum) {\n\t\t\t//если есть метамаск\n\t\t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\n\t\t\t\tsetUserAccount(account[0]);\n\t\t\t\tgetBalance(account[0]);\n\t\t\t})\n\t\t} else {\n\t\t\talert(\"Установите МетаМаск!\")\n\t\t}\n\t};\n\n\tconst getBalance = (account) => {\n\t\twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\n\t\t\tconsole.log(balance)\n\t\t})\n\t};\n\n\treturn(\n\t\t<Panel>\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\n\t\t\t\n\t\t\t</PanelHeader>\n\t\t\t<Tabs>\n\t\t\t\t<TabsItem selected>Главная</TabsItem>\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\n\t\t\t\t<TabsItem>Мои билеты</TabsItem>\n\t\t\t\t<TabsItem>Настройки</TabsItem>\n\t\t\t</Tabs>\n\t\t\t<Group header={<Header mode=\"secondary\">Connect MetaMask</Header>}>\n\t\t\t\t<Div>\t\n\t\t\t\t\t{userAccount ? (\n\t\t\t\t\t\t<span>Кошелек подключен!!!</span>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\n\t\t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t</Panel>\n\t)\n}\n// Inventory.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\n\nexport default Inventory;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Inventory from './panels/Persik';\nimport Buy from './panels/Buy'\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' go={go} />\n\t\t\t\t\t\t\t\t<Inventory id='inventory' go={go} />\n\t\t\t\t\t\t\t\t<Buy id='buy' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit')\n  .then((data) => { \n    if (data.result) {\n      // Приложение инициализировано\n    } else {\n      // Ошибка\n    }\n  })\n  .catch((error) => {\n    // Ошибка\n    console.log(error);\n  });\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}