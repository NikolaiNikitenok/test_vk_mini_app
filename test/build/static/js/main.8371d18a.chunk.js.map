{"version":3,"sources":["panels/Home.js","panels/Connect.js","panels/Buy.js","panels/Settings.js","panels/Inventory.js","panels/Create.js","App.js","index.js"],"names":["Home","id","go","React","useState","left","selected","onClick","header","mode","stretched","size","Connect","userAccount","setUserAccount","getBalance","account","window","ethereum","request","method","params","then","balance","console","log","alert","Buy","Settings","Inventory","Create","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","data","result","catch","error","useEffect","a","user","subscribe","detail","type","fetchData","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8371d18a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem, List, Footer} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\n\r\nconst containerStyles = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'column',\r\n\tjustifyContent: 'center',\r\n\twidth: '100%',\r\n  };\r\n\r\nconst Home = ({ id, go}) => {\r\n\r\n\tconst [fetching, setFetching] = React.useState(false);\r\n\r\n\t// const initUsers = getRandomUsers(10);\r\n\t// console.log(initUsers)\r\n\r\n\treturn(\t\r\n\t\t<>\r\n\t\t\r\n\t\t\t<Panel id={id}>\r\n\t\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\t\t\r\n\t\t\t\t</PanelHeader>\r\n\t\t\t\t<Tabs>\r\n\t\t\t\t\t<TabsItem selected onClick={go} data-to=\"home\">\r\n\t\t\t\t\t\tГлавная\r\n\t\t\t\t\t</TabsItem>\r\n\t\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои билеты</TabsItem>\r\n\t\t\t\t\t<TabsItem onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t{/* <Group header={<Header mode=\"secondary\">Navigation</Header>}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" appearance=\"positive\" mode=\"secondary\" onClick={go} data-to=\"home\">\r\n\t\t\t\t\t\t\t\tMain\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"inventory\">\r\n\t\t\t\t\t\t\t\tInventory\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"buy\">\r\n\t\t\t\t\t\t\t\tКупить билеты\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Group> */}\r\n\t\t\t\t<br/>\r\n\t\t\t\t<Group header={<Header mode=\"secondary\">Мероприятия</Header>}>\r\n\t\t\t\t\t<Div>\r\n\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"buy\">\r\n\t\t\t\t\t\t\tКупить билеты\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"create\">\r\n\t\t\t\t\t\t\tСоздать мероприятие\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Div>\r\n\t\t\t\t</Group>\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t{/* <Group>\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<Cell subtitle=\"Back-end\">\r\n\t\t\t\t\t\t\tНикита Можаев\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t\t<Cell before={<Avatar src=\"../img/nikolai.jpg\"/>} subtitle=\"Front-end\">\r\n\t\t\t\t\t\t\tНикитенок Николай\r\n\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\r\n\t\t\t\t\t\t{users.map(({ id, name, photo_100 }, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Cell key={i} before={<Avatar src={photo_100} />}>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</Cell>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Group>\r\n\t\t\t\t<Footer>2 Создателя</Footer> */}\r\n\t\t\t</Panel>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_100: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nimport './Persik.css';\r\n\r\nconst Connect = ({id, go}) => {\r\n\tconst [userAccount, setUserAccount] = useState(null);\r\n\r\n\tconst onConnect = () => {\r\n\t\tif (window.ethereum) {\r\n\t\t\t//если есть метамаск\r\n\t\t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t\t\t\tsetUserAccount(account[0]);\r\n\t\t\t\tgetBalance(account[0]);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\talert(\"Установите МетаМаск!\")\r\n\t\t}\r\n\t};\r\n\r\n\tconst getBalance = (account) => {\r\n\t\twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t\t\tconsole.log(balance)\r\n\t\t})\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem selected onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem>Мои билеты</TabsItem>\r\n\t\t\t\t<TabsItem>Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Connect MetaMask</Header>}>\r\n\t\t\t\t<Div>\t\r\n\t\t\t\t\t{userAccount ? (\r\n\t\t\t\t\t\t<span>Кошелек подключен!!!</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t\t\t</Div>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nConnect.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n// Connect.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Connect;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem } from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nconst Buy = ({ id, go}) => (\r\n\t\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}> \r\n            Покупка билетов\r\n\t\t</PanelHeader>\r\n\t\t\r\n\t</Panel>\r\n);\r\n\r\nBuy.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Buy;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, Snackbar, Avatar, CellButton} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk, Icon16Done} from '@vkontakte/icons';\r\n\r\nimport './Persik.css';\r\n\r\nconst Settings = ({id, go}) => {\r\n\tconst [userAccount, setUserAccount] = useState(null);\r\n\r\n\tconst onConnect = () => {\r\n\t\tif (window.ethereum) {\r\n\t\t\t//если есть метамаск\r\n\t\t\twindow.ethereum.request({method: \"eth_requestAccounts\"}).then((account) => {\r\n\t\t\t\tsetUserAccount(account[0]);\r\n\t\t\t\tgetBalance(account[0]);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\talert(\"Установите МетаМаск!\")\r\n\t\t}\r\n\t};\r\n\r\n\tconst getBalance = (account) => {\r\n\t\twindow.ethereum.request({method: \"eth_getBalance\", params: [account, \"Latest\"],}).then((balance) => {\r\n\t\t\tconsole.log(balance)\r\n\t\t})\r\n\t};\r\n    \r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"inventory\">Мои билеты</TabsItem>\r\n\t\t\t\t<TabsItem selected onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Подключить MetaMask</Header>}>\r\n\t\t\t\t<Div>\t\r\n\t\t\t\t\t{userAccount ? (\r\n                        <>\r\n                            <span>Кошелек подключен!!!</span>\r\n                        </>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={onConnect} >Подключить кошелек MetaMask</Button></>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t{/* <><h2>Подключите свой кошелек к приложению!</h2>\r\n\t\t\t\t\t<Button>Подключить кошелек MetaMask</Button></> */}\r\n\t\t\t\t</Div>\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Settings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ethers} from 'ethers'\r\nimport { Button, Group, Panel, PanelHeader, PanelHeaderBack, Div, Header, TabsItem, Tabs, List} from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nimport './Persik.css';\r\n\r\nconst Inventory = ({id, go}) => {\r\n\r\n\treturn(\r\n\t\t<Panel>\r\n\t\t\t<PanelHeader left={<Icon28LogoVk/>}> NFT for Events\r\n\t\t\t\r\n\t\t\t</PanelHeader>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"home\">Главная</TabsItem>\r\n\t\t\t\t{/* <TabsItem>Купить билеты</TabsItem> */}\r\n\t\t\t\t<TabsItem selected onClick={go} data-to=\"inventory\">Мои билеты</TabsItem>\r\n\t\t\t\t<TabsItem onClick={go} data-to=\"settings\">Настройки</TabsItem>\r\n\t\t\t</Tabs>\r\n\t\t\t<Group header={<Header mode=\"secondary\">Мои билеты</Header>}>\r\n\r\n                {/* Если пусто, то добавить кнопку для перехода в магазин билетов, иначе открыть панель с билетами. */}\r\n                Здесь пусто!\r\n\t\t\t</Group>\r\n\t\t</Panel>\r\n\t)\r\n}\r\n\r\nInventory.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n// Inventory.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar, Tabs, TabsItem } from '@vkontakte/vkui';\r\nimport {Icon28SettingsOutline, Icon28LogoVk} from '@vkontakte/icons';\r\n\r\nconst Create = ({ id, go}) => (\r\n\t\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}> \r\n            Создание мероприятия\r\n\t\t</PanelHeader>\r\n\t</Panel>\r\n);\r\n\r\nCreate.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Connect from './panels/Connect';\r\nimport Buy from './panels/Buy'\r\nimport Settings from './panels/Settings'\r\nimport Inventory from './panels/Inventory'\r\nimport Create from './panels/Create'\r\n\r\nconst App = () => {\r\n\tconst [scheme, setScheme] = useState('bright_light')\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(null);\r\n\r\n\tbridge.send('VKWebAppAddToFavorites')\r\n\t.then((data) => { \r\n\t\tif (data.result) {\r\n\t\t// Мини-приложение или игра добавлены в избранное\r\n\t\t}\r\n\t})\r\n\t.catch((error) => {\r\n\t\t// Ошибка\r\n\t\tconsole.log(error);\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tsetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConfigProvider scheme={scheme}>\r\n\t\t\t<AdaptivityProvider>\r\n\t\t\t\t<AppRoot>\r\n\t\t\t\t\t<SplitLayout popout={popout}>\r\n\t\t\t\t\t\t<SplitCol>\r\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\r\n\t\t\t\t\t\t\t\t<Home id='home' go={go}/>\r\n\t\t\t\t\t\t\t\t<Connect id='connect' go={go}/>\r\n\t\t\t\t\t\t\t\t<Buy id='buy' go={go}/>\r\n\t\t\t\t\t\t\t\t<Settings id='settings' go={go}/>\r\n\t\t\t\t\t\t\t\t<Inventory id='inventory' go={go}/>\r\n\t\t\t\t\t\t\t\t<Create id='create' go={go}/>\r\n\t\t\t\t\t\t\t\t<Buy id='Buy' go={go}/>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</SplitCol>\r\n\t\t\t\t\t</SplitLayout>\r\n\t\t\t\t</AppRoot>\r\n\t\t\t</AdaptivityProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send('VKWebAppInit')\r\n  .then((data) => { \r\n    if (data.result) {\r\n      // Приложение инициализировано\r\n    } else {\r\n      // Ошибка\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    // Ошибка\r\n    console.log(error);\r\n  });\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}