{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { createScopedElement } from \"../lib/jsxRuntime\";\nimport * as React from \"react\";\nimport { AdaptivityContext, SizeType, ViewHeight, ViewWidth } from \"../components/AdaptivityProvider/AdaptivityContext\";\nexport { SizeType, ViewWidth, ViewHeight };\nexport function withAdaptivity(TargetComponent, config) {\n  var AdaptivityConsumer = function AdaptivityConsumer(props) {\n    var context = React.useContext(AdaptivityContext);\n    var update = false;\n\n    if (props.sizeX || props.sizeY) {\n      update = true;\n    }\n\n    var sizeX = props.sizeX || context.sizeX;\n    var sizeY = props.sizeY || context.sizeY;\n    var viewWidth = context.viewWidth;\n    var viewHeight = context.viewHeight;\n    var hasMouse = context.hasMouse;\n    var deviceHasHover = context.deviceHasHover;\n    var adaptivityProps = {};\n    config.sizeX ? adaptivityProps.sizeX = sizeX : undefined;\n    config.sizeY ? adaptivityProps.sizeY = sizeY : undefined;\n    config.viewWidth ? adaptivityProps.viewWidth = viewWidth : undefined;\n    config.viewHeight ? adaptivityProps.viewHeight = viewHeight : undefined;\n    config.hasMouse ? adaptivityProps.hasMouse = hasMouse : undefined;\n    config.deviceHasHover ? adaptivityProps.deviceHasHover = deviceHasHover : undefined;\n    var target = createScopedElement(TargetComponent, _extends({}, props, adaptivityProps));\n\n    if (update) {\n      return createScopedElement(AdaptivityContext.Provider, {\n        value: {\n          sizeX: sizeX,\n          sizeY: sizeY,\n          viewWidth: viewWidth,\n          viewHeight: viewHeight,\n          hasMouse: hasMouse,\n          deviceHasHover: deviceHasHover\n        }\n      }, target);\n    }\n\n    return target;\n  };\n\n  return AdaptivityConsumer;\n}","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,iBADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,SAJF;AAUA,SAASF,QAAT,EAAmBE,SAAnB,EAA8BD,UAA9B;AAYA,OAAO,SAASE,cAAT,CACLC,eADK,EAELC,MAFK,EAG4D;AACjE,MAAMC,kBAEL,GAAG,SAFEA,kBAEF,CAACC,KAAD,EAAkE;AACpE,QAAMC,OAAO,GAAGV,KAAK,CAACW,UAANX,CAAiBC,iBAAjBD,CAAhB;AACA,QAAIY,MAAM,GAAG,KAAb;;AAEA,QAAIH,KAAK,CAACI,KAANJ,IAAeA,KAAK,CAACK,KAAzB,EAAgC;AAC9BF,YAAM,GAAG,IAATA;AACD;;AAED,QAAMC,KAAK,GAAGJ,KAAK,CAACI,KAANJ,IAAeC,OAAO,CAACG,KAArC;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACK,KAANL,IAAeC,OAAO,CAACI,KAArC;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACK,SAA1B;AACA,QAAMC,UAAU,GAAGN,OAAO,CAACM,UAA3B;AACA,QAAMC,QAAQ,GAAGP,OAAO,CAACO,QAAzB;AACA,QAAMC,cAAc,GAAGR,OAAO,CAACQ,cAA/B;AAEA,QAAMC,eAOL,GAAG,EAPJ;AASAZ,UAAM,CAACM,KAAPN,GAAgBY,eAAe,CAACN,KAAhBM,GAAwBN,KAAxCN,GAAiDa,SAAjDb;AACAA,UAAM,CAACO,KAAPP,GAAgBY,eAAe,CAACL,KAAhBK,GAAwBL,KAAxCP,GAAiDa,SAAjDb;AACAA,UAAM,CAACQ,SAAPR,GAAoBY,eAAe,CAACJ,SAAhBI,GAA4BJ,SAAhDR,GAA6Da,SAA7Db;AACAA,UAAM,CAACS,UAAPT,GAAqBY,eAAe,CAACH,UAAhBG,GAA6BH,UAAlDT,GAAgEa,SAAhEb;AACAA,UAAM,CAACU,QAAPV,GAAmBY,eAAe,CAACF,QAAhBE,GAA2BF,QAA9CV,GAA0Da,SAA1Db;AACAA,UAAM,CAACW,cAAPX,GACKY,eAAe,CAACD,cAAhBC,GAAiCD,cADtCX,GAEIa,SAFJb;AAIA,QAAMc,MAAM,GAAGC,oBAAChB,eAAD,eAAsBG,KAAtB,EAAuCU,eAAvC,EAAf;;AAEA,QAAIP,MAAJ,EAAY;AACV,aACEU,oBAACrB,iBAAD,CAAmBsB,QAAnB;AACEC,aAAK,EAAE;AACLX,eAAK,EAALA,KADK;AAELC,eAAK,EAALA,KAFK;AAGLC,mBAAS,EAATA,SAHK;AAILC,oBAAU,EAAVA,UAJK;AAKLC,kBAAQ,EAARA,QALK;AAMLC,wBAAc,EAAdA;AANK;AADT,SAUGG,MAVH,CADF;AAcD;;AAED,WAAOA,MAAP;AAtDF;;AAyDA,SAAOb,kBAAP;AACD","names":["React","AdaptivityContext","SizeType","ViewHeight","ViewWidth","withAdaptivity","TargetComponent","config","AdaptivityConsumer","props","context","useContext","update","sizeX","sizeY","viewWidth","viewHeight","hasMouse","deviceHasHover","adaptivityProps","undefined","target","createScopedElement","Provider","value"],"sources":["../../src/hoc/withAdaptivity.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  AdaptivityContext,\n  SizeType,\n  ViewHeight,\n  ViewWidth,\n  AdaptivityContextInterface,\n  AdaptivityProps,\n  SizeProps,\n} from \"../components/AdaptivityProvider/AdaptivityContext\";\n\nexport { SizeType, ViewWidth, ViewHeight };\nexport type { AdaptivityProps };\n\ninterface Config {\n  sizeX?: boolean;\n  sizeY?: boolean;\n  viewWidth?: boolean;\n  viewHeight?: boolean;\n  hasMouse?: boolean;\n  deviceHasHover?: boolean;\n}\n\nexport function withAdaptivity<T extends AdaptivityProps>(\n  TargetComponent: React.ComponentType<T>,\n  config: Config\n): React.FC<Omit<T, keyof AdaptivityContextInterface> & SizeProps> {\n  const AdaptivityConsumer: React.ComponentType<\n    Omit<T, keyof AdaptivityContextInterface> & SizeProps\n  > = (props: Omit<T, keyof AdaptivityContextInterface> & SizeProps) => {\n    const context = React.useContext(AdaptivityContext);\n    let update = false;\n\n    if (props.sizeX || props.sizeY) {\n      update = true;\n    }\n\n    const sizeX = props.sizeX || context.sizeX;\n    const sizeY = props.sizeY || context.sizeY;\n    const viewWidth = context.viewWidth;\n    const viewHeight = context.viewHeight;\n    const hasMouse = context.hasMouse;\n    const deviceHasHover = context.deviceHasHover;\n\n    const adaptivityProps: {\n      sizeX?: SizeType;\n      sizeY?: SizeType;\n      viewWidth?: ViewWidth;\n      viewHeight?: ViewHeight;\n      hasMouse?: boolean;\n      deviceHasHover?: boolean;\n    } = {};\n\n    config.sizeX ? (adaptivityProps.sizeX = sizeX) : undefined;\n    config.sizeY ? (adaptivityProps.sizeY = sizeY) : undefined;\n    config.viewWidth ? (adaptivityProps.viewWidth = viewWidth) : undefined;\n    config.viewHeight ? (adaptivityProps.viewHeight = viewHeight) : undefined;\n    config.hasMouse ? (adaptivityProps.hasMouse = hasMouse) : undefined;\n    config.deviceHasHover\n      ? (adaptivityProps.deviceHasHover = deviceHasHover)\n      : undefined;\n\n    const target = <TargetComponent {...(props as T)} {...adaptivityProps} />;\n\n    if (update) {\n      return (\n        <AdaptivityContext.Provider\n          value={{\n            sizeX,\n            sizeY,\n            viewWidth,\n            viewHeight,\n            hasMouse,\n            deviceHasHover,\n          }}\n        >\n          {target}\n        </AdaptivityContext.Provider>\n      );\n    }\n\n    return target;\n  };\n\n  return AdaptivityConsumer;\n}\n"]},"metadata":{},"sourceType":"module"}