{"ast":null,"code":"import * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { platform } from \"../../lib/platform\";\nexport var WebviewType;\n\n(function (WebviewType) {\n  WebviewType[\"VKAPPS\"] = \"vkapps\";\n  WebviewType[\"INTERNAL\"] = \"internal\";\n})(WebviewType || (WebviewType = {}));\n\nexport var ConfigProviderContext = /*#__PURE__*/React.createContext({\n  webviewType: WebviewType.VKAPPS,\n  isWebView: vkBridge.isWebView(),\n  transitionMotionEnabled: true,\n  platform: platform(),\n  hasNewTokens: false // appearance is auto-detected by default\n  // appearance: Appearance.LIGHT,\n\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAyC,sBAAzC;AACA,SAAuBC,QAAvB;AAEA,WAAYC,WAAZ;;WAAYA,a;AAAAA,a,UAAAA,G,QAAAA;AAAAA,a,YAAAA,G,UAAAA;GAAAA,W,KAAAA,W;;AAkCZ,OAAO,IAAMC,qBAAqB,gBAChCJ,KAAK,CAACK,aAANL,CAAoD;AAClDM,aAAW,EAAEH,WAAW,CAACI,MADyB;AAElDC,WAAS,EAAEP,QAAQ,CAACO,SAATP,EAFuC;AAGlDQ,yBAAuB,EAAE,IAHyB;AAIlDP,UAAQ,EAAEA,QAAQ,EAJgC;AAKlDQ,cAAY,EAAE,KALoC,CAMlD;AACA;;AAPkD,CAApDV,CADK","names":["React","vkBridge","platform","WebviewType","ConfigProviderContext","createContext","webviewType","VKAPPS","isWebView","transitionMotionEnabled","hasNewTokens"],"sources":["../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport vkBridge, { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { PlatformType, platform } from \"../../lib/platform\";\n\nexport enum WebviewType {\n  VKAPPS = \"vkapps\",\n  INTERNAL = \"internal\",\n}\n\nexport interface ConfigProviderContextInterface {\n  /**\n   * Подсказывает приложению, обёрнутому в `ConfigProvider`, где открыто приложение: внутри webview или в мобильном браузере\n   */\n  isWebView: boolean;\n  /**\n   * Тип вебвью.<br>\n   * В случае `WebviewType.VKAPPS` интерфейс будет адаптирован для отображения в вебвью Mini Apps (системные контролы в правой части шапки)\n   */\n  webviewType: WebviewType.INTERNAL | WebviewType.VKAPPS;\n  /**\n   * Тип приложения\n   */\n  app?: string;\n  /**\n   * Тип цветовой схемы – `light` или `dark`\n   */\n  appearance?: AppearanceType;\n  /**\n   * Включена ли анимация переходов между экранами в `Root` и `View`\n   */\n  transitionMotionEnabled: boolean;\n  /**\n   * Платформа\n   */\n  platform: PlatformType;\n  hasNewTokens: boolean;\n}\n\nexport const ConfigProviderContext =\n  React.createContext<ConfigProviderContextInterface>({\n    webviewType: WebviewType.VKAPPS,\n    isWebView: vkBridge.isWebView(),\n    transitionMotionEnabled: true,\n    platform: platform(),\n    hasNewTokens: false,\n    // appearance is auto-detected by default\n    // appearance: Appearance.LIGHT,\n  });\n"]},"metadata":{},"sourceType":"module"}