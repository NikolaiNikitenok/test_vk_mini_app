{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"count\"];\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Icon24Send, Icon28AddCircleOutline, Icon28AttachOutline, Icon28CheckCircleOutline, Icon48WritebarDone, Icon48WritebarSend } from \"@vkontakte/icons\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS } from \"../../lib/platform\";\nimport Counter from \"../Counter/Counter\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nvar warn = warnOnce(\"WriteBarIcon\");\nvar IS_DEV = process.env.NODE_ENV === \"development\";\nexport var WriteBarIcon = function WriteBarIcon(_ref) {\n  var mode = _ref.mode,\n      children = _ref.children,\n      count = _ref.count,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var icon;\n  var ariaLabel = undefined;\n\n  switch (mode) {\n    case \"attach\":\n      icon = platform === IOS ? createScopedElement(Icon28AddCircleOutline, null) : createScopedElement(Icon28AttachOutline, null);\n      ariaLabel = \"Прикрепить файл\";\n      break;\n\n    case \"send\":\n      icon = platform === IOS ? createScopedElement(Icon48WritebarSend, null) : createScopedElement(Icon24Send, null);\n      ariaLabel = \"Отправить\";\n      break;\n\n    case \"done\":\n      icon = platform === IOS ? createScopedElement(Icon48WritebarDone, null) : createScopedElement(Icon28CheckCircleOutline, null);\n      ariaLabel = \"Готово\";\n      break;\n\n    default:\n      break;\n  }\n\n  if (IS_DEV && !restProps[\"aria-label\"] && !ariaLabel) {\n    warn(\"[WriteBarIcon/a11y] У WriteBarIcon нет aria-label. Кнопка будет недоступной для части пользователей.\");\n  }\n\n  return createScopedElement(Tappable, _extends({\n    \"aria-label\": ariaLabel\n  }, restProps, {\n    Component: \"button\",\n    hasHover: false,\n    activeMode: \"WriteBarIcon__active\",\n    vkuiClass: classNames(getClassName(\"WriteBarIcon\", platform), _defineProperty({}, \"WriteBarIcon--\".concat(mode), !!mode))\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"WriteBarIcon__in\"\n  }, icon || children, hasReactNode(count) && createScopedElement(Counter, {\n    vkuiClass: \"WriteBarIcon__counter\",\n    size: \"s\"\n  }, count)));\n};","map":{"version":3,"mappings":";;;;;AACA,SACEA,UADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,wBAJF,EAKEC,kBALF,EAMEC,kBANF,QAOO,kBAPP;AAQA,SAASC,WAAT;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AACA,SAASC,GAAT;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AAoBA,IAAMC,IAAI,GAAGF,QAAQ,CAAC,cAAD,CAArB;AACA,IAAMG,MAAM,GAAGC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAAxC;AAEA,OAAO,IAAMG,YAAyC,GAAG,SAA5CA,YAA4C,OAKhC;AAAA,MAJvBC,IAIuB,QAJvBA,IAIuB;AAAA,MAHvBC,QAGuB,QAHvBA,QAGuB;AAAA,MAFvBC,KAEuB,QAFvBA,KAEuB;AAAA,MADpBC,SACoB;;AACvB,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,MAAImB,IAAJ;AACA,MAAIC,SAA6B,GAAGC,SAApC;;AAEA,UAAQP,IAAR;AACE,SAAK,QAAL;AACEK,UAAI,GACFD,QAAQ,KAAKf,GAAbe,GAAmBI,oBAAC3B,sBAAD,OAAnBuB,GAAgDI,oBAAC1B,mBAAD,OADlDuB;AAEAC,eAAS,GAAG,iBAAZA;AACA;;AAEF,SAAK,MAAL;AACED,UAAI,GAAGD,QAAQ,KAAKf,GAAbe,GAAmBI,oBAACvB,kBAAD,OAAnBmB,GAA4CI,oBAAC5B,UAAD,OAAnDyB;AACAC,eAAS,GAAG,WAAZA;AACA;;AAEF,SAAK,MAAL;AACED,UAAI,GACFD,QAAQ,KAAKf,GAAbe,GACEI,oBAACxB,kBAAD,OADFoB,GAGEI,oBAACzB,wBAAD,OAJJsB;AAMAC,eAAS,GAAG,QAAZA;AACA;;AAEF;AACE;AAvBJ;;AA0BA,MAAIX,MAAM,IAAI,CAACQ,SAAS,CAAC,YAAD,CAApBR,IAAsC,CAACW,SAA3C,EAAsD;AACpDZ,QAAI,CACF,sGADE,CAAJA;AAGD;;AAED,SACEc,oBAACjB,QAAD;AACE,kBAAYe;AADd,KAEMH,SAFN;AAGEM,aAAS,EAAC,QAHZ;AAIEC,YAAQ,EAAE,KAJZ;AAKEC,cAAU,EAAC,sBALb;AAMEC,aAAS,EAAEzB,UAAU,CAACC,YAAY,CAAC,cAAD,EAAiBgB,QAAjB,CAAb,8CACDJ,IADC,GACQ,CAAC,CAACA,IADV;AANvB,MAUEQ;AAAMI,aAAS,EAAC;AAAhB,KACGP,IAAI,IAAIJ,QADX,EAEGR,YAAY,CAACS,KAAD,CAAZT,IACCe,oBAAClB,OAAD;AAASsB,aAAS,EAAC,uBAAnB;AAA2CC,QAAI,EAAC;AAAhD,KACGX,KADH,CAHJ,CAVF,CADF;AA3CK","names":["Icon24Send","Icon28AddCircleOutline","Icon28AttachOutline","Icon28CheckCircleOutline","Icon48WritebarDone","Icon48WritebarSend","usePlatform","classNames","getClassName","IOS","Counter","Tappable","warnOnce","hasReactNode","warn","IS_DEV","process","env","NODE_ENV","WriteBarIcon","mode","children","count","restProps","platform","icon","ariaLabel","undefined","createScopedElement","Component","hasHover","activeMode","vkuiClass","size"],"sources":["../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from \"@vkontakte/icons\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS } from \"../../lib/platform\";\nimport Counter from \"../Counter/Counter\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport \"./WriteBarIcon.css\";\n\nexport interface WriteBarIconProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: \"attach\" | \"send\" | \"done\";\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n}\n\nconst warn = warnOnce(\"WriteBarIcon\");\nconst IS_DEV = process.env.NODE_ENV === \"development\";\n\nexport const WriteBarIcon: React.FC<WriteBarIconProps> = ({\n  mode,\n  children,\n  count,\n  ...restProps\n}: WriteBarIconProps) => {\n  const platform = usePlatform();\n\n  let icon: React.ReactNode;\n  let ariaLabel: string | undefined = undefined;\n\n  switch (mode) {\n    case \"attach\":\n      icon =\n        platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      ariaLabel = \"Прикрепить файл\";\n      break;\n\n    case \"send\":\n      icon = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      ariaLabel = \"Отправить\";\n      break;\n\n    case \"done\":\n      icon =\n        platform === IOS ? (\n          <Icon48WritebarDone />\n        ) : (\n          <Icon28CheckCircleOutline />\n        );\n      ariaLabel = \"Готово\";\n      break;\n\n    default:\n      break;\n  }\n\n  if (IS_DEV && !restProps[\"aria-label\"] && !ariaLabel) {\n    warn(\n      \"[WriteBarIcon/a11y] У WriteBarIcon нет aria-label. Кнопка будет недоступной для части пользователей.\"\n    );\n  }\n\n  return (\n    <Tappable\n      aria-label={ariaLabel}\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      activeMode=\"WriteBarIcon__active\"\n      vkuiClass={classNames(getClassName(\"WriteBarIcon\", platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n      })}\n    >\n      <span vkuiClass=\"WriteBarIcon__in\">\n        {icon || children}\n        {hasReactNode(count) && (\n          <Counter vkuiClass=\"WriteBarIcon__counter\" size=\"s\">\n            {count}\n          </Counter>\n        )}\n      </span>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}