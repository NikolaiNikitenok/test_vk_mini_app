{"ast":null,"code":"/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number) {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n/**\n * Форматирует число, разбивая его на разряды\n */\n\nexport function formatNumber(number) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var decimalSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var numberParts = number.toString().split('.');\n  var result = [];\n\n  for (var i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}","map":{"version":3,"mappings":"AAAA;;;AAGA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6C;AAClD,MAAIA,MAAM,IAAI,EAAd,EAAkB;AAChB,WAAOC,MAAM,CAACD,MAAD,CAAb;AADF,SAEO;AACL,WAAO,MAAMC,MAAM,CAACD,MAAD,CAAnB;AACD;AACF;AAED;;;;AAGA,OAAO,SAASE,YAAT,CAAsBF,MAAtB,EAAuF;AAAA,MAAjDG,SAAiD,uEAArC,GAAqC;AAAA,MAAhCC,gBAAgC,uEAAb,GAAa;AAC5F,MAAMC,WAAW,GAAGL,MAAM,CAACM,QAAPN,GAAkBO,KAAlBP,CAAwB,GAAxBA,CAApB;AACA,MAAMQ,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAGJ,WAAW,CAAC,CAAD,CAAXA,CAAeK,MAAfL,GAAwB,CAArC,EAAwCI,CAAC,GAAG,CAAC,CAA7C,EAAgDA,CAAC,IAAI,CAArD,EAAwD;AACtDD,UAAM,CAACG,OAAPH,CAAeH,WAAW,CAAC,CAAD,CAAXA,CAAeO,KAAfP,CAAqBI,CAAC,GAAG,CAAJA,GAAQA,CAARA,GAAY,CAAjCJ,EAAoCI,CAAC,GAAG,CAAxCJ,CAAfG;AACD;;AAEDH,aAAW,CAAC,CAAD,CAAXA,GAAiBG,MAAM,CAACK,IAAPL,CAAYL,SAAZK,CAAjBH;AACA,SAAOA,WAAW,CAACQ,IAAZR,CAAiBD,gBAAjBC,CAAP;AACD","names":["leadingZero","number","String","formatNumber","separator","decimalSeparator","numberParts","toString","split","result","i","length","unshift","slice","join"],"sources":["../../src/numbers.ts"],"sourcesContent":["/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number: number): string {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n\n/**\n * Форматирует число, разбивая его на разряды\n */\nexport function formatNumber(number: number, separator = ' ', decimalSeparator = ','): string {\n  const numberParts = number.toString().split('.');\n  const result = [];\n\n  for (let i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}\n"]},"metadata":{},"sourceType":"module"}