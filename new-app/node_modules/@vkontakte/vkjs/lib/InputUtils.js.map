{"version":3,"sources":["../src/InputUtils.ts"],"names":["hasMouse","hasTouchEvents","hasHover","hasTouch","canUseDOM","isIOS","isIPadOS","document","navigator","maxTouchPoints","notMobile","test","userAgent","window","matchMedia","matches"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAIA,QAAJ;;AACA,IAAIC,cAAJ;;AACA,IAAIC,QAAJ;;AACA,IAAIC,QAAJ;;;AAEA,IAAIC,cAAJ,EAAe;AACb,MAAIC,wBAAS,CAACC,uBAAd,EAAwB;AACtB,uBAAAN,QAAQ,GAAG,KAAX;AACA,uBAAAE,QAAQ,GAAG,KAAX;AACA,6BAAAD,cAAc,GAAG,IAAjB;AACA,uBAAAE,QAAQ,GAAG,IAAX;AACD,GALD,MAKO;AACL,6BAAAF,cAAc,GAAG,kBAAkBM,QAAnC;AACA,uBAAAJ,QAAQ,GAAGF,cAAc,IACtB,oBAAoBO,SAApB,IAAiCA,SAAS,CAACC,cAAV,GAA2B,CAD/D;;AAGA,QAAIN,QAAJ,EAAc;AACZ,UAAMO,SAAS,GAAG,CAAC,yBAAyBC,IAAzB,CAA8BH,SAAS,CAACI,SAAxC,CAAnB;AAEA,yBAAAZ,QAAQ,GAAGa,MAAM,CAACC,UAAP,IAAqBA,UAAU,CAAC,WAAD,CAAV,CAAwBC,OAA7C,GACTD,UAAU,CAAC,iBAAD,CAAV,CAA8BC,OADrB,GAC+BL,SAD1C;AAGA,yBAAAR,QAAQ,GAAGF,QAAQ,KAAKa,MAAM,CAACC,UAAP,IAAqBA,UAAU,CAAC,SAAD,CAAV,CAAsBC,OAA3C,GACtBD,UAAU,CAAC,gBAAD,CAAV,CAA6BC,OADP,GACiBL,SADtB,CAAnB;AAED,KARD,MAQO;AACL,yBAAAV,QAAQ,GAAG,IAAX;AACA,yBAAAE,QAAQ,GAAG,IAAX;AACD;AACF;AACF,CAxBD,MAwBO;AACL,qBAAAF,QAAQ,GAAG,KAAX;AACA,2BAAAC,cAAc,GAAG,KAAjB;AACA,qBAAAC,QAAQ,GAAG,KAAX;AACA,qBAAAC,QAAQ,GAAG,KAAX;AACD","sourcesContent":["import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\n\nlet hasMouse: boolean;\nlet hasTouchEvents: boolean;\nlet hasHover: boolean;\nlet hasTouch: boolean;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents ||\n      ('maxTouchPoints' in navigator && navigator.maxTouchPoints > 0);\n\n    if (hasTouch) {\n      const notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ?\n        matchMedia('(pointer: fine)').matches : notMobile;\n\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ?\n        matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };\n"],"file":"InputUtils.js"}