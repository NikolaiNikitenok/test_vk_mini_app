import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 20 20';
var id = 'magnifier_plus_outline_20';
var content = '<symbol xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20" id="magnifier_plus_outline_20"><path fill="currentColor" fill-rule="evenodd" d="M9.5 4.5a5 5 0 100 10 5 5 0 000-10zM3 9.5a6.5 6.5 0 1113 0 6.473 6.473 0 01-1.404 4.035l3.184 3.185a.75.75 0 01-1.06 1.06l-3.185-3.184A6.5 6.5 0 013 9.5zm6.496-3.501a.75.75 0 01.75.75v2h2a.75.75 0 010 1.5h-2v2a.75.75 0 01-1.5 0v-2h-2a.75.75 0 110-1.5h2v-2a.75.75 0 01.75-.75z" clip-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon20MagnifierPlusOutline = function Icon20MagnifierPlusOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 20,
    height: !isNaN(props.height) ? +props.height : 20
  }));
};

Icon20MagnifierPlusOutline.mountIcon = mountIcon;
export default Icon20MagnifierPlusOutline;
//# sourceMappingURL=magnifier_plus_outline.js.map