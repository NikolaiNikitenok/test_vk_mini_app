import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'user_check_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="user_check_16"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.78 5.72a.75.75 0 010 1.06l-3 3a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 111.06-1.06l.97.97 2.47-2.47a.75.75 0 011.06 0z" fill="currentColor" /><path d="M12.5 5.5a2.5 2.5 0 10-4.999-.001A2.5 2.5 0 0012.5 5.5zM10 9c1.803 0 5 .615 5 2.77v.434c0 .44-.356.796-.796.796H5.796A.796.796 0 015 12.204v-.435C5 9.615 8.197 9 10 9z" fill="currentColor" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16UserCheck = function Icon16UserCheck(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16UserCheck.mountIcon = mountIcon;
export default Icon16UserCheck;
//# sourceMappingURL=user_check.js.map