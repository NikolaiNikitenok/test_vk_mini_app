{"version":3,"sources":["../src/classNames.ts"],"names":["classNames","result","args","forEach","item","push","Object","keys","key","join"],"mappings":";;;;;;;;;;;AAMO,SAASA,UAAT,GAAkD;AACvD,MAAMC,MAAgB,GAAG,EAAzB;;AADuD,oCAA3BC,IAA2B;AAA3BA,IAAAA,IAA2B;AAAA;;AAGvDA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,IAAD,EAAgB;AAC3B,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AAED,qCAAeA,IAAf;AACE,WAAK,QAAL;AACEH,QAAAA,MAAM,CAACI,IAAP,CAAYD,IAAZ;AACA;;AAEF,WAAK,QAAL;AACEE,QAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,OAAlB,CAA0B,UAACK,GAAD,EAAiB;AACzC,cAAIJ,IAAI,CAACI,GAAD,CAAR,EAAe;AACbP,YAAAA,MAAM,CAACI,IAAP,CAAYG,GAAZ;AACD;AACF,SAJD;AAKA;;AAEF;AACEP,QAAAA,MAAM,CAACI,IAAP,WAAeD,IAAf;AAdJ;AAgBD,GArBD;AAuBA,SAAOH,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAAP;AACD","sourcesContent":["interface ClassNamesDictionary {\n  [index: string]: boolean | undefined | null;\n}\n\ntype ClassName = string | number | ClassNamesDictionary | boolean | undefined | null;\n\nexport function classNames(...args: ClassName[]): string {\n  const result: string[] = [];\n\n  args.forEach((item): void => {\n    if (!item) {\n      return;\n    }\n\n    switch (typeof item) {\n      case 'string':\n        result.push(item);\n        break;\n\n      case 'object':\n        Object.keys(item).forEach((key: string) => {\n          if (item[key]) {\n            result.push(key);\n          }\n        });\n        break;\n\n      default:\n        result.push(`${item}`);\n    }\n  });\n\n  return result.join(' ');\n}\n"],"file":"classNames.js"}