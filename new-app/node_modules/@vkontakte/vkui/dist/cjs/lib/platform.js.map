{"version":3,"sources":["../../../src/lib/platform.ts"],"names":["Platform","ANDROID","IOS","VKCOM","platform","browserInfo","system","platformName","IS_PLATFORM_IOS","IS_PLATFORM_ANDROID"],"mappings":";;;;;;;;AAAA;;IAEYA,Q;;;WAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,wBAAAA,Q;;AAML,IAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAzB;;AACA,IAAMC,GAAG,GAAGF,QAAQ,CAACE,GAArB;;AACA,IAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;;;AAQA,SAASC,QAAT,CAAkBC,WAAlB,EAA2D;AAChE,MAAI,CAACA,WAAL,EAAkB;AAChBA,IAAAA,WAAW,GAAG,kCAAd;AACD;;AAED,SAAOA,WAAW,CAACC,MAAZ,KAAuB,KAAvB,GAA+BJ,GAA/B,GAAqCD,OAA5C;AACD;;AAED,IAAMM,YAAY,GAAGH,QAAQ,EAA7B;AAEA;AACA;AACA;;AACO,IAAMI,eAAwB,GAAGD,YAAY,KAAKL,GAAlD;AACP;AACA;AACA;;;AACO,IAAMO,mBAA4B,GAAGF,YAAY,KAAKN,OAAtD","sourcesContent":["import { BrowserInfo, computeBrowserInfo } from \"./browser\";\n\nexport enum Platform {\n  ANDROID = \"android\",\n  IOS = \"ios\",\n  VKCOM = \"vkcom\",\n}\n\nexport const ANDROID = Platform.ANDROID;\nexport const IOS = Platform.IOS;\nexport const VKCOM = Platform.VKCOM;\n\nexport type PlatformType =\n  | Platform.ANDROID\n  | Platform.IOS\n  | Platform.VKCOM\n  | string;\n\nexport function platform(browserInfo?: BrowserInfo): PlatformType {\n  if (!browserInfo) {\n    browserInfo = computeBrowserInfo();\n  }\n\n  return browserInfo.system === \"ios\" ? IOS : ANDROID;\n}\n\nconst platformName = platform();\n\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_IOS: boolean = platformName === IOS;\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_ANDROID: boolean = platformName === ANDROID;\n"],"file":"platform.js"}