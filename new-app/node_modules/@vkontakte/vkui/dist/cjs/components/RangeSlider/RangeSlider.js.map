{"version":3,"sources":["../../../../src/components/RangeSlider/RangeSlider.tsx"],"names":["RangeSlider","onChange","defaultValue","min","max","step","props","isControlled","Boolean","value","React","useState","localValue","setValue","start","end","useMemo","handleChange","useCallback","nextValue","event","disabled"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAKA,IAAMA,WAAuC,GAAG,SAA1CA,WAA0C,OAOxB;AAAA,MANtBC,QAMsB,QANtBA,QAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,sBAJtBC,GAIsB;AAAA,MAJtBA,GAIsB,yBAJhB,CAIgB;AAAA,sBAHtBC,GAGsB;AAAA,MAHtBA,GAGsB,yBAHhB,GAGgB;AAAA,uBAFtBC,IAEsB;AAAA,MAFtBA,IAEsB,0BAFf,CAEe;AAAA,MADnBC,KACmB;AACtB,MAAMC,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACG,KAAP,CAA5B;;AAEA,wBAA+BC,KAAK,CAACC,QAAN,CAC7BT,YAAY,IAAK,CAACC,GAAD,EAAMC,GAAN,CADY,CAA/B;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,QAAnB;;AAGA,cAAqBP,KAAK,CAACG,KAAN,IAAeG,UAApC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,GAAd;;AACA,MAAMN,KAAK,GAAGC,KAAK,CAACM,OAAN,CACZ;AAAA,WAAM,CAAC,iBAAMF,KAAN,EAAaX,GAAb,EAAkBC,GAAlB,CAAD,EAAyB,iBAAMW,GAAN,EAAWZ,GAAX,EAAgBC,GAAhB,CAAzB,CAAN;AAAA,GADY,EAEZ,CAACW,GAAD,EAAMX,GAAN,EAAWD,GAAX,EAAgBW,KAAhB,CAFY,CAAd;AAKA,MAAMG,YAA0C,GAAGP,KAAK,CAACQ,WAAN,CACjD,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACpB,QACEd,KAAK,CAACe,QAAN,IACCZ,KAAK,CAAC,CAAD,CAAL,KAAaU,SAAS,CAAC,CAAD,CAAtB,IAA6BV,KAAK,CAAC,CAAD,CAAL,KAAaU,SAAS,CAAC,CAAD,CAFtD,EAGE;AACA;AACD;;AACD,KAACZ,YAAD,IAAiBM,QAAQ,CAACM,SAAD,CAAzB;AACAlB,IAAAA,QAAQ,IAAIA,QAAQ,CAACkB,SAAD,EAAYC,KAAZ,CAApB;AACD,GAVgD,EAWjD,CAACd,KAAK,CAACe,QAAP,EAAiBZ,KAAjB,EAAwBF,YAAxB,EAAsCN,QAAtC,CAXiD,CAAnD;AAcA,SACE,qCAAC,gCAAD,6BACMK,KADN;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,QAAQ,EAAEQ,YAHZ;AAIE,IAAA,GAAG,EAAEd,GAJP;AAKE,IAAA,GAAG,EAAEC,GALP;AAME,IAAA,IAAI,EAAEC;AANR,KADF;AAUD,CA3CD,C,CA6CA;;;eACeL,W","sourcesContent":["import * as React from \"react\";\nimport { clamp } from \"../../helpers/math\";\nimport { UniversalSlider, UniversalSliderProps } from \"./UniversalSlider\";\n\nexport type Value = [number, number];\nexport type RangeSliderProps = UniversalSliderProps<Value>;\n\nconst RangeSlider: React.FC<RangeSliderProps> = ({\n  onChange,\n  defaultValue,\n  min = 0,\n  max = 100,\n  step = 0,\n  ...props\n}: RangeSliderProps) => {\n  const isControlled = Boolean(props.value);\n\n  const [localValue, setValue] = React.useState(\n    defaultValue || ([min, max] as Value)\n  );\n  const [start, end] = props.value || localValue;\n  const value = React.useMemo(\n    () => [clamp(start, min, max), clamp(end, min, max)] as Value,\n    [end, max, min, start]\n  );\n\n  const handleChange: RangeSliderProps[\"onChange\"] = React.useCallback(\n    (nextValue, event) => {\n      if (\n        props.disabled ||\n        (value[0] === nextValue[0] && value[1] === nextValue[1])\n      ) {\n        return;\n      }\n      !isControlled && setValue(nextValue);\n      onChange && onChange(nextValue, event);\n    },\n    [props.disabled, value, isControlled, onChange]\n  );\n\n  return (\n    <UniversalSlider\n      {...props}\n      value={value}\n      onChange={handleChange}\n      min={min}\n      max={max}\n      step={step}\n    />\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default RangeSlider;\n"],"file":"RangeSlider.js"}