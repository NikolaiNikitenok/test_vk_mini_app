#!/usr/bin/env node
const e=require("fs"),t=require("https"),r=require("path"),o=require("url"),n=require("util"),a=require("zlib"),i=require("./package.json"),s=n.promisify(e.mkdir),c=n.promisify(e.stat),u=6,p=`${i.name}/${i.version} (+${i.homepage})`,l={projectNameRequired:()=>D("Project name is required.",[],!0),desitnationRequired:()=>D("Destination directory is required.",[],!0),destinationExists:e=>D("Directory already exists.",[e]),networkError:e=>D("Network error.",[e]),serverError:(e,t)=>D("Server error.",[e,t]),badData:()=>D("Unable to read data."),repoNotFound:(e,t)=>D("Repository, branch, or tag not found.",[`${e}#${t}`]),repoPathNotFound:(e,t)=>D("Repository path not found.",[`${e}/${t}`]),repoTooBig:e=>D("Repository is too large.",[e]),fileSystem:e=>D("Unable to access path.",[e]),cantMakeDir:e=>D("Unable to create directory.",[e]),cantWriteFile:e=>D("Unable to write file.",[e])};function d(e){R(N(e.message)),e.data&&e.data.forEach(e=>R(e)),P(),e.withHelp&&(P("Usage:"),P(j("  npx new-app"),k("<project> <directory>")),P()),P("For help resolving this problem please visit:"),P(j(i.bugs.url)),P(),process.exit(1)}async function f(){P(),P(j(i.name),F(i.version)),P();const e=process.argv[2],t=process.argv[3];e||S(l.projectNameRequired()),t||S(l.desitnationRequired());const o=r.resolve(t);await v(o)&&S(l.destinationExists(o)),P("Please wait..."),P();const n=e.split("#").filter(e=>e),a=n[0].split("/").filter(e=>e),s=a.slice(0,2).join("/"),c=a.slice(2).join("/"),u=n.slice(1).join("#")||await m(s)||"master",p=$(await h(s,u),c);p.length||S(l.repoPathNotFound(s,c)),await w(p,o),P(F(s),"has been created in",k(o)),P()}async function m(e){const t=q(await g(`https://api.github.com/repos/${e}/releases/latest`));return t&&t.tag_name}async function h(e,t){const r=await g(`https://api.github.com/repos/${e}/git/trees/${t}?recursive=1`);r||S(l.repoNotFound(e,t));const o=q(r);return o.truncated&&S(l.repoTooBig()),o.tree.filter(e=>"blob"===e.type).map(r=>({path:r.path,url:`https://raw.githubusercontent.com/${e}/${t}/${r.path}`}))}async function w(e,t){const o=[...e];let n;await Promise.all([,,,,,,].fill(null).map(async()=>{for(;n=o.pop();)await y(n.url,r.resolve(t,n.path))}))}async function g(e){const t=await b(e);if(!t.found||!t.stream)return null;let r=[];return t.stream.setEncoding("utf8"),t.stream.on("data",e=>r.push(e)),await t.promise,r.join("")}async function y(t,o){await E(r.dirname(o));const n=await b(t);n.found||S(l.serverError(t,"NotFound"));const a=e.createWriteStream(o);a.on("error",()=>S(l.cantWriteFile(o))),n.stream?(n.stream.pipe(a),await n.promise):a.end("")}async function b(e){const r=Object.assign({},o.parse(e),{headers:{"User-Agent":p,"Accept-Encoding":"gzip"}}),n=await new Promise((o,n)=>t.get(r,o).on("error",()=>n(l.networkError(e))));if(200===n.statusCode&&"0"!==n.headers["content-length"]){const t=a.createGunzip(),r=n.pipe(t),o=new Promise((o,a)=>{n.on("error",()=>a(l.networkError(e))),t.on("error",()=>a(l.networkError(e))),r.on("end",()=>o(!0))});return{found:!0,stream:r,promise:o}}return n.resume(),200===n.statusCode?{found:!0}:404===n.statusCode?{found:!1}:void S(l.serverError(e,n.statusMessage))}async function E(e){const t=r.resolve(e).split(r.sep).map((e,t,o)=>o.slice(0,o.length-t).join(r.sep)).filter(e=>e);let o;for(let e=0;e<t.length&&(o=e,!await v(t[e]));e++);if(o)for(let r=o;r>0;r--)try{await s(t[r-1])}catch(t){"EEXIST"!==t.code&&S(l.cantMakeDir(e))}}async function v(e){try{return await c(r.resolve(e)),!0}catch(t){return"ENOENT"!==t.code&&S(l.fileSystem(e)),!1}}function $(e,t){const r=t?`${t}/`:"";return e.filter(e=>e.path.startsWith(r)).map(e=>({path:e.path.slice(r.length),url:e.url}))}function q(e){try{return JSON.parse(e)}catch(e){S(l.badData())}}function j(e){return"[1;37m"+e+"[0m"}function N(e){return"[1;31m"+e+"[0m"}function k(e){return"[1;35m"+e+"[0m"}function F(e){return"[1;36m"+e+"[0m"}function P(){console.log("  ",...arguments)}function R(){console.error("  ",...arguments)}function D(e,t=[],r=!1){const o=Error(e);return o.data=t,o.withHelp=r,o}function S(e){throw e}f().catch(d);